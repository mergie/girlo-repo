(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    940293,      17948]
NotebookOptionsPosition[    927661,      17748]
NotebookOutlinePosition[    928121,      17766]
CellTagsIndexPosition[    928078,      17763]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Import Data", "Section",
 CellChangeTimes->{{3.867838681161532*^9, 
  3.867838684212929*^9}},ExpressionUUID->"070dee31-0ea3-4001-a0c4-\
5dc1e6e88bf6"],

Cell[CellGroupData[{

Cell["CO2 Data", "Subsubsection",
 CellChangeTimes->{{3.867909648212612*^9, 
  3.867909649982695*^9}},ExpressionUUID->"1b335621-98c8-4be8-8349-\
c7da1467ef59"],

Cell["\<\
We will work with three data-sets for the CO2 analysis. The data collection \
is conducted by the NOAA in conjunction with the GML. \
\>", "Text",
 CellChangeTimes->{{3.867909601141182*^9, 
  3.8679096621922903`*^9}},ExpressionUUID->"1edf12e2-3037-4a43-a190-\
e9c66b02356f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"globalTrend", "=", 
    RowBox[{"Import", "[", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
      "\"\</co2_trend_gl.csv\>\""}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"annualCO2", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\</co2_annmean_mlo.csv\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"monthlyCO2", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\</co2_mm_mlo.csv\>\""}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.867825968625298*^9, 3.867826004325281*^9}, {
  3.8678387057396383`*^9, 3.8678387213131943`*^9}, {3.867838752499525*^9, 
  3.8678387655459223`*^9}, {3.8679920828090277`*^9, 3.867992085091055*^9}, {
  3.867992136860729*^9, 3.867992137069957*^9}},
 CellLabel->
  "In[713]:=",ExpressionUUID->"f8a1da3d-b161-4604-82b9-5d38a2ad4714"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data cleaning", "Section",
 CellChangeTimes->{{3.867992075043202*^9, 
  3.867992079013049*^9}},ExpressionUUID->"27040906-a202-44b1-8766-\
132161c243cc"],

Cell["\<\
We examine each of the three data-sets. The first lines of the csv contain \
meta-data, which explains data along with usage . The data of interest seems \
to be on line x for each of the dataset. We will overwrite the data to begin \
at this data-point.\
\>", "Text",
 CellChangeTimes->{{3.8679920914682207`*^9, 3.867992102219213*^9}, {
  3.8679921549413977`*^9, 3.867992202166378*^9}, {3.867992234892598*^9, 
  3.867992248139091*^9}, {3.867992379528977*^9, 3.867992398094623*^9}, {
  3.867992682374251*^9, 3.867992688762463*^9}, {3.8679960002930803`*^9, 
  3.8679960106952667`*^9}},ExpressionUUID->"f9e12dff-ff59-46e6-bd10-\
6b31d8f75525"],

Cell["Global Trend,  x = 61.", "Item",
 CellChangeTimes->{{3.867992704139785*^9, 3.867992717457623*^9}, {
  3.86799277602042*^9, 
  3.867992776734483*^9}},ExpressionUUID->"134b172d-45b4-4937-b877-\
7f3a9a0b7e0b"],

Cell["Annual CO2, x = 56.", "Item",
 CellChangeTimes->{{3.867992704139785*^9, 3.867992719022388*^9}, {
  3.867992778486207*^9, 
  3.867992780031149*^9}},ExpressionUUID->"90543793-828f-41ff-8cd7-\
17f81eea6c8d"],

Cell[CellGroupData[{

Cell["Monthly CO2, x = 52. ", "Item",
 CellChangeTimes->{{3.867992704139785*^9, 3.867992727287096*^9}, {
  3.867992804313953*^9, 
  3.867992804833637*^9}},ExpressionUUID->"5136ad25-ff73-4d0b-bb54-\
2b1e98e3cbf7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"globalTrend", "//", "Dataset"}], "\[IndentingNewLine]", 
 RowBox[{"annualCO2", "//", "Dataset"}], "\[IndentingNewLine]", 
 RowBox[{"monthlyCO2", "//", "Dataset"}]}], "Input",
 CellChangeTimes->{{3.867992104523713*^9, 3.867992145504077*^9}},
 CellLabel->
  "In[716]:=",ExpressionUUID->"269be379-f75f-4904-a243-751d5d9a3978"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> {{
       "# --------------------------------------------------------------------\
"}, {"# USE OF NOAA GML DATA"}, {"#"}, {
       "# These data are made freely available to the public and the"}, {
       "# scientific community in the belief that their wide dissemination"}, \
{"# will lead to greater understanding and new scientific insights."}, {
       "# The availability of these data does not constitute publication"}, {
       "# of the data.  NOAA relies on the ethics and integrity of the user \
to"}, {"# ensure that GML receives fair credit for their work.  If the \
data"}, {"# are obtained for potential use in a publication or presentation", 
        ""}, {"# GML should be informed at the outset of the nature of this \
work."}, {
       "# If the GML data are essential to the work", "or if an important"}, {
       "# result or conclusion depends on the GML data", "co-authorship"}, {
       "# may be appropriate.  This should be discussed at an early stage \
in"}, {"# the work.  Manuscripts using the GML data should be sent to GML"}, {
       "# for review before they are submitted for publication so we can"}, {
       "# ensure that the quality and limitations of the data are \
accurately"}, {"# represented."}, {"#"}, {
       "# Contact:  Kirk Thoning (303 497 6078; kirk.w.thoning@noaa.gov)"}, {
       "#"}, {"# File Creation: Tue Jul 26 05:00:34 2022"}, {"#"}, {
       "# RECIPROCITY"}, {"#"}, {
       "# Use of these data implies an agreement to reciprocate."}, {
       "# Laboratories making similar measurements agree to make their"}, {
       "# own data available to the general public and to the scientific"}, {
       "# community in an equally complete and easily accessible form."}, {
       "# Modelers are encouraged to make available to the community", ""}, {
       "# upon request", "their own tools used in the interpretation"}, {
       "# of the GML data", "namely well documented model code", 
        "transport"}, {
       "# fields", "modeled mole fractions", "and additional information"}, {
       "# necessary for other scientists to repeat the work and to run"}, {
       "# modified versions. Model availability includes collaborative"}, {
       "# support for new users of the models."}, {
       "# --------------------------------------------------------------------\
"}, {"#"}, {
       "# See www.esrl.noaa.gov/gmd/ccgg/trends/ for additional details."}, {
       "#"}, {"# Estimated CO2 Daily Global Seasonal Cycle and Trend \
(ppm)."}, {"#"}, {
       "# The estimated daily global seasonal cycle and trend value for CO2 \
are determined"}, {
       "# from the daily averaged CO2 data from the four NOAA GML Baseline"}, \
{"# observatories.  A smoothed seasonal cycle and a smoothed de-seasonalized \
trend"}, {
       "# curve are determined for each observatory record at daily \
intervals.  An"}, {
       "# estimated global seasonal cycle and trend are computed by averaging \
the four"}, {
       "# individual observatory seasonal cycle and trend curves at each \
daily interval."}, {"#"}, {
       "# For details on the curve fitting process see"}, {
       "# https://www.esrl.noaa.gov/gmd/ccgg/mbl/crvfit/crvfit.html"}, {
       "#"}, {"# CO2 is expressed as a mole fraction in dry air", 
        "micromol/mol", "abbreviated as ppm"}, {"#"}, {
       "# NOTE: In general", 
        "the data presented for the last year are subject to change", ""}, {
       "# depending on recalibration of the reference gas mixtures used", 
        "and other quality"}, {
       "# control procedures. Occasionally", 
        "earlier years may also be changed for the same"}, {
       "# reasons.  Usually these changes are minor."}, {"#"}, {
       "# year month   day    cycle    trend"}, {
       "year", "month", "day", "smoothed", "trend"}, {
       2012, 1, 1, 392.93, 391.48}, {2012, 1, 2, 392.96, 391.49}, {
       2012, 1, 3, 392.99, 391.49}, {2012, 1, 4, 393.01, 391.5}, {
       2012, 1, 5, 393.04, 391.51}, {2012, 1, 6, 393.07, 391.51}, {
       2012, 1, 7, 393.1, 391.52}, {2012, 1, 8, 393.12, 391.53}, {
       2012, 1, 9, 393.14, 391.53}, {2012, 1, 10, 393.17, 391.54}, {
       2012, 1, 11, 393.19, 391.54}, {2012, 1, 12, 393.21, 391.55}, {
       2012, 1, 13, 393.23, 391.56}, {2012, 1, 14, 393.25, 391.56}, {
       2012, 1, 15, 393.27, 391.57}, {2012, 1, 16, 393.29, 391.58}, {
       2012, 1, 17, 393.3, 391.58}, {2012, 1, 18, 393.32, 391.59}, {
       2012, 1, 19, 393.34, 391.59}, {2012, 1, 20, 393.35, 391.6}, {
       2012, 1, 21, 393.36, 391.61}, {2012, 1, 22, 393.37, 391.61}, {
       2012, 1, 23, 393.39, 391.62}, {2012, 1, 24, 393.4, 391.63}, {
       2012, 1, 25, 393.41, 391.63}, {2012, 1, 26, 393.41, 391.64}, {
       2012, 1, 27, 393.42, 391.65}, {2012, 1, 28, 393.43, 391.65}, {
       2012, 1, 29, 393.43, 391.66}, {2012, 1, 30, 393.44, 391.66}, {
       2012, 1, 31, 393.44, 391.67}, {2012, 2, 1, 393.45, 391.68}, {
       2012, 2, 2, 393.45, 391.68}, {2012, 2, 3, 393.45, 391.69}, {
       2012, 2, 4, 393.46, 391.7}, {2012, 2, 5, 393.46, 391.7}, {
       2012, 2, 6, 393.46, 391.71}, {2012, 2, 7, 393.46, 391.72}, {
       2012, 2, 8, 393.46, 391.72}, {2012, 2, 9, 393.46, 391.73}, {
       2012, 2, 10, 393.46, 391.74}, {2012, 2, 11, 393.46, 391.74}, {
       2012, 2, 12, 393.46, 391.75}, {2012, 2, 13, 393.46, 391.75}, {
       2012, 2, 14, 393.46, 391.76}, {2012, 2, 15, 393.46, 391.77}, {
       2012, 2, 16, 393.46, 391.77}, {2012, 2, 17, 393.46, 391.78}, {
       2012, 2, 18, 393.46, 391.79}, {2012, 2, 19, 393.46, 391.79}, {
       2012, 2, 20, 393.46, 391.8}, {2012, 2, 21, 393.47, 391.81}, {
       2012, 2, 22, 393.47, 391.81}, {2012, 2, 23, 393.47, 391.82}, {
       2012, 2, 24, 393.47, 391.83}, {2012, 2, 25, 393.47, 391.83}, {
       2012, 2, 26, 393.48, 391.84}, {2012, 2, 27, 393.48, 391.85}, {
       2012, 2, 28, 393.49, 391.85}, {2012, 2, 29, 393.49, 391.86}, {
       2012, 3, 1, 393.5, 391.87}, {2012, 3, 2, 393.5, 391.87}, {
       2012, 3, 3, 393.51, 391.88}, {2012, 3, 4, 393.52, 391.88}, {
       2012, 3, 5, 393.53, 391.89}, {2012, 3, 6, 393.54, 391.9}, {
       2012, 3, 7, 393.55, 391.9}, {2012, 3, 8, 393.56, 391.91}, {
       2012, 3, 9, 393.57, 391.92}, {2012, 3, 10, 393.58, 391.92}, {
       2012, 3, 11, 393.6, 391.93}, {2012, 3, 12, 393.61, 391.94}, {
       2012, 3, 13, 393.63, 391.94}, {2012, 3, 14, 393.64, 391.95}, {
       2012, 3, 15, 393.66, 391.96}, {2012, 3, 16, 393.68, 391.96}, {
       2012, 3, 17, 393.69, 391.97}, {2012, 3, 18, 393.71, 391.98}, {
       2012, 3, 19, 393.73, 391.98}, {2012, 3, 20, 393.75, 391.99}, {
       2012, 3, 21, 393.77, 392.}, {2012, 3, 22, 393.79, 392.}, {
       2012, 3, 23, 393.81, 392.01}, {2012, 3, 24, 393.83, 392.02}, {
       2012, 3, 25, 393.85, 392.02}, {2012, 3, 26, 393.88, 392.03}, {
       2012, 3, 27, 393.9, 392.04}, {2012, 3, 28, 393.92, 392.04}, {
       2012, 3, 29, 393.94, 392.05}, {2012, 3, 30, 393.97, 392.06}, {
       2012, 3, 31, 393.99, 392.06}, {2012, 4, 1, 394.01, 392.07}, {
       2012, 4, 2, 394.04, 392.08}, {2012, 4, 3, 394.06, 392.08}, {
       2012, 4, 4, 394.09, 392.09}, {2012, 4, 5, 394.11, 392.1}, {
       2012, 4, 6, 394.13, 392.1}, {2012, 4, 7, 394.16, 392.11}, {
       2012, 4, 8, 394.18, 392.12}, {2012, 4, 9, 394.2, 392.12}, {
       2012, 4, 10, 394.23, 392.13}, {2012, 4, 11, 394.25, 392.14}, {
       2012, 4, 12, 394.27, 392.14}, {2012, 4, 13, 394.29, 392.15}, {
       2012, 4, 14, 394.31, 392.16}, {2012, 4, 15, 394.33, 392.17}, {
       2012, 4, 16, 394.35, 392.17}, {2012, 4, 17, 394.37, 392.18}, {
       2012, 4, 18, 394.39, 392.19}, {2012, 4, 19, 394.41, 392.19}, {
       2012, 4, 20, 394.43, 392.2}, {2012, 4, 21, 394.45, 392.21}, {
       2012, 4, 22, 394.46, 392.21}, {2012, 4, 23, 394.48, 392.22}, {
       2012, 4, 24, 394.49, 392.23}, {2012, 4, 25, 394.51, 392.23}, {
       2012, 4, 26, 394.52, 392.24}, {2012, 4, 27, 394.53, 392.25}, {
       2012, 4, 28, 394.54, 392.25}, {2012, 4, 29, 394.55, 392.26}, {
       2012, 4, 30, 394.56, 392.27}, {2012, 5, 1, 394.57, 392.28}, {
       2012, 5, 2, 394.58, 392.28}, {2012, 5, 3, 394.58, 392.29}, {
       2012, 5, 4, 394.59, 392.3}, {2012, 5, 5, 394.59, 392.3}, {
       2012, 5, 6, 394.59, 392.31}, {2012, 5, 7, 394.6, 392.32}, {
       2012, 5, 8, 394.6, 392.32}, {2012, 5, 9, 394.59, 392.33}, {
       2012, 5, 10, 394.59, 392.34}, {2012, 5, 11, 394.59, 392.34}, {
       2012, 5, 12, 394.58, 392.35}, {2012, 5, 13, 394.58, 392.36}, {
       2012, 5, 14, 394.57, 392.37}, {2012, 5, 15, 394.56, 392.37}, {
       2012, 5, 16, 394.55, 392.38}, {2012, 5, 17, 394.53, 392.39}, {
       2012, 5, 18, 394.52, 392.39}, {2012, 5, 19, 394.5, 392.4}, {
       2012, 5, 20, 394.49, 392.41}, {2012, 5, 21, 394.47, 392.42}, {
       2012, 5, 22, 394.45, 392.42}, {2012, 5, 23, 394.42, 392.43}, {
       2012, 5, 24, 394.4, 392.44}, {2012, 5, 25, 394.37, 392.44}, {
       2012, 5, 26, 394.34, 392.45}, {2012, 5, 27, 394.31, 392.46}, {
       2012, 5, 28, 394.28, 392.46}, {2012, 5, 29, 394.25, 392.47}, {
       2012, 5, 30, 394.21, 392.48}, {2012, 5, 31, 394.18, 392.49}, {
       2012, 6, 1, 394.14, 392.49}, {2012, 6, 2, 394.1, 392.5}, {
       2012, 6, 3, 394.05, 392.51}, {2012, 6, 4, 394.01, 392.51}, {
       2012, 6, 5, 393.96, 392.52}, {2012, 6, 6, 393.91, 392.53}, {
       2012, 6, 7, 393.86, 392.54}, {2012, 6, 8, 393.81, 392.54}, {
       2012, 6, 9, 393.75, 392.55}, {2012, 6, 10, 393.7, 392.56}, {
       2012, 6, 11, 393.64, 392.56}, {2012, 6, 12, 393.58, 392.57}, {
       2012, 6, 13, 393.52, 392.58}, {2012, 6, 14, 393.45, 392.59}, {
       2012, 6, 15, 393.39, 392.59}, {2012, 6, 16, 393.32, 392.6}, {
       2012, 6, 17, 393.25, 392.61}, {2012, 6, 18, 393.18, 392.62}, {
       2012, 6, 19, 393.11, 392.62}, {2012, 6, 20, 393.03, 392.63}, {
       2012, 6, 21, 392.96, 392.64}, {2012, 6, 22, 392.88, 392.64}, {
       2012, 6, 23, 392.8, 392.65}, {2012, 6, 24, 392.72, 392.66}, {
       2012, 6, 25, 392.64, 392.67}, {2012, 6, 26, 392.56, 392.67}, {
       2012, 6, 27, 392.47, 392.68}, {2012, 6, 28, 392.39, 392.69}, {
       2012, 6, 29, 392.3, 392.7}, {2012, 6, 30, 392.22, 392.7}, {
       2012, 7, 1, 392.13, 392.71}, {2012, 7, 2, 392.04, 392.72}, {
       2012, 7, 3, 391.96, 392.73}, {2012, 7, 4, 391.87, 392.73}, {
       2012, 7, 5, 391.78, 392.74}, {2012, 7, 6, 391.69, 392.75}, {
       2012, 7, 7, 391.6, 392.76}, {2012, 7, 8, 391.51, 392.76}, {
       2012, 7, 9, 391.42, 392.77}, {2012, 7, 10, 391.34, 392.78}, {
       2012, 7, 11, 391.25, 392.79}, {2012, 7, 12, 391.16, 392.79}, {
       2012, 7, 13, 391.07, 392.8}, {2012, 7, 14, 390.99, 392.81}, {
       2012, 7, 15, 390.9, 392.81}, {2012, 7, 16, 390.82, 392.82}, {
       2012, 7, 17, 390.73, 392.83}, {2012, 7, 18, 390.65, 392.84}, {
       2012, 7, 19, 390.57, 392.84}, {2012, 7, 20, 390.49, 392.85}, {
       2012, 7, 21, 390.41, 392.86}, {2012, 7, 22, 390.34, 392.87}, {
       2012, 7, 23, 390.26, 392.87}, {2012, 7, 24, 390.19, 392.88}, {
       2012, 7, 25, 390.12, 392.89}, {2012, 7, 26, 390.05, 392.9}, {
       2012, 7, 27, 389.98, 392.91}, {2012, 7, 28, 389.92, 392.91}, {
       2012, 7, 29, 389.86, 392.92}, {2012, 7, 30, 389.8, 392.93}, {
       2012, 7, 31, 389.74, 392.94}, {2012, 8, 1, 389.69, 392.94}, {
       2012, 8, 2, 389.63, 392.95}, {2012, 8, 3, 389.58, 392.96}, {
       2012, 8, 4, 389.54, 392.97}, {2012, 8, 5, 389.49, 392.97}, {
       2012, 8, 6, 389.45, 392.98}, {2012, 8, 7, 389.41, 392.99}, {
       2012, 8, 8, 389.37, 393.}, {2012, 8, 9, 389.34, 393.}, {
       2012, 8, 10, 389.31, 393.01}, {2012, 8, 11, 389.28, 393.02}, {
       2012, 8, 12, 389.26, 393.03}, {2012, 8, 13, 389.24, 393.04}, {
       2012, 8, 14, 389.22, 393.04}, {2012, 8, 15, 389.2, 393.05}, {
       2012, 8, 16, 389.19, 393.06}, {2012, 8, 17, 389.18, 393.07}, {
       2012, 8, 18, 389.17, 393.07}, {2012, 8, 19, 389.17, 393.08}, {
       2012, 8, 20, 389.16, 393.09}, {2012, 8, 21, 389.16, 393.1}, {
       2012, 8, 22, 389.17, 393.1}, {2012, 8, 23, 389.17, 393.11}, {
       2012, 8, 24, 389.18, 393.12}, {2012, 8, 25, 389.19, 393.13}, {
       2012, 8, 26, 389.21, 393.14}, {2012, 8, 27, 389.22, 393.14}, {
       2012, 8, 28, 389.24, 393.15}, {2012, 8, 29, 389.26, 393.16}, {
       2012, 8, 30, 389.28, 393.17}, {2012, 8, 31, 389.31, 393.17}, {
       2012, 9, 1, 389.34, 393.18}, {2012, 9, 2, 389.36, 393.19}, {
       2012, 9, 3, 389.4, 393.2}, {2012, 9, 4, 389.43, 393.21}, {
       2012, 9, 5, 389.46, 393.21}, {2012, 9, 6, 389.5, 393.22}, {
       2012, 9, 7, 389.54, 393.23}, {2012, 9, 8, 389.58, 393.24}, {
       2012, 9, 9, 389.62, 393.25}, {2012, 9, 10, 389.67, 393.25}, {
       2012, 9, 11, 389.71, 393.26}, {2012, 9, 12, 389.76, 393.27}, {
       2012, 9, 13, 389.81, 393.28}, {2012, 9, 14, 389.86, 393.28}, {
       2012, 9, 15, 389.91, 393.29}, {2012, 9, 16, 389.96, 393.3}, {
       2012, 9, 17, 390.01, 393.31}, {2012, 9, 18, 390.07, 393.32}, {
       2012, 9, 19, 390.12, 393.32}, {2012, 9, 20, 390.18, 393.33}, {
       2012, 9, 21, 390.24, 393.34}, {2012, 9, 22, 390.3, 393.35}, {
       2012, 9, 23, 390.36, 393.36}, {2012, 9, 24, 390.42, 393.36}, {
       2012, 9, 25, 390.48, 393.37}, {2012, 9, 26, 390.54, 393.38}, {
       2012, 9, 27, 390.61, 393.39}, {2012, 9, 28, 390.67, 393.4}, {
       2012, 9, 29, 390.73, 393.4}, {2012, 9, 30, 390.8, 393.41}, {
       2012, 10, 1, 390.87, 393.42}, {2012, 10, 2, 390.93, 393.43}, {
       2012, 10, 3, 391., 393.44}, {2012, 10, 4, 391.07, 393.44}, {
       2012, 10, 5, 391.13, 393.45}, {2012, 10, 6, 391.2, 393.46}, {
       2012, 10, 7, 391.27, 393.47}, {2012, 10, 8, 391.34, 393.48}, {
       2012, 10, 9, 391.41, 393.48}, {2012, 10, 10, 391.48, 393.49}, {
       2012, 10, 11, 391.55, 393.5}, {2012, 10, 12, 391.62, 393.51}, {
       2012, 10, 13, 391.69, 393.52}, {2012, 10, 14, 391.76, 393.53}, {
       2012, 10, 15, 391.83, 393.53}, {2012, 10, 16, 391.9, 393.54}, {
       2012, 10, 17, 391.97, 393.55}, {2012, 10, 18, 392.05, 393.56}, {
       2012, 10, 19, 392.12, 393.57}, {2012, 10, 20, 392.19, 393.57}, {
       2012, 10, 21, 392.26, 393.58}, {2012, 10, 22, 392.33, 393.59}, {
       2012, 10, 23, 392.4, 393.6}, {2012, 10, 24, 392.47, 393.61}, {
       2012, 10, 25, 392.54, 393.61}, {2012, 10, 26, 392.6, 393.62}, {
       2012, 10, 27, 392.67, 393.63}, {2012, 10, 28, 392.74, 393.64}, {
       2012, 10, 29, 392.81, 393.65}, {2012, 10, 30, 392.88, 393.66}, {
       2012, 10, 31, 392.94, 393.66}, {2012, 11, 1, 393.01, 393.67}, {
       2012, 11, 2, 393.07, 393.68}, {2012, 11, 3, 393.13, 393.69}, {
       2012, 11, 4, 393.2, 393.7}, {2012, 11, 5, 393.26, 393.7}, {
       2012, 11, 6, 393.32, 393.71}, {2012, 11, 7, 393.38, 393.72}, {
       2012, 11, 8, 393.44, 393.73}, {2012, 11, 9, 393.5, 393.74}, {
       2012, 11, 10, 393.55, 393.75}, {2012, 11, 11, 393.61, 393.75}, {
       2012, 11, 12, 393.66, 393.76}, {2012, 11, 13, 393.72, 393.77}, {
       2012, 11, 14, 393.77, 393.78}, {2012, 11, 15, 393.82, 393.79}, {
       2012, 11, 16, 393.87, 393.79}, {2012, 11, 17, 393.92, 393.8}, {
       2012, 11, 18, 393.96, 393.81}, {2012, 11, 19, 394.01, 393.82}, {
       2012, 11, 20, 394.05, 393.83}, {2012, 11, 21, 394.09, 393.84}, {
       2012, 11, 22, 394.13, 393.84}, {2012, 11, 23, 394.17, 393.85}, {
       2012, 11, 24, 394.21, 393.86}, {2012, 11, 25, 394.25, 393.87}, {
       2012, 11, 26, 394.29, 393.88}, {2012, 11, 27, 394.32, 393.89}, {
       2012, 11, 28, 394.35, 393.89}, {2012, 11, 29, 394.38, 393.9}, {
       2012, 11, 30, 394.42, 393.91}, {2012, 12, 1, 394.44, 393.92}, {
       2012, 12, 2, 394.47, 393.93}, {2012, 12, 3, 394.5, 393.93}, {
       2012, 12, 4, 394.53, 393.94}, {2012, 12, 5, 394.55, 393.95}, {
       2012, 12, 6, 394.58, 393.96}, {2012, 12, 7, 394.6, 393.97}, {
       2012, 12, 8, 394.62, 393.98}, {2012, 12, 9, 394.64, 393.98}, {
       2012, 12, 10, 394.67, 393.99}, {2012, 12, 11, 394.69, 394.}, {
       2012, 12, 12, 394.71, 394.01}, {2012, 12, 13, 394.73, 394.02}, {
       2012, 12, 14, 394.75, 394.03}, {2012, 12, 15, 394.76, 394.03}, {
       2012, 12, 16, 394.78, 394.04}, {2012, 12, 17, 394.8, 394.05}, {
       2012, 12, 18, 394.82, 394.06}, {2012, 12, 19, 394.84, 394.07}, {
       2012, 12, 20, 394.85, 394.08}, {2012, 12, 21, 394.87, 394.08}, {
       2012, 12, 22, 394.89, 394.09}, {2012, 12, 23, 394.91, 394.1}, {
       2012, 12, 24, 394.93, 394.11}, {2012, 12, 25, 394.95, 394.12}, {
       2012, 12, 26, 394.97, 394.12}, {2012, 12, 27, 394.98, 394.13}, {
       2012, 12, 28, 395., 394.14}, {2012, 12, 29, 395.02, 394.15}, {
       2012, 12, 30, 395.05, 394.16}, {2012, 12, 31, 395.07, 394.17}, {
       2013, 1, 1, 395.09, 394.17}, {2013, 1, 2, 395.11, 394.18}, {
       2013, 1, 3, 395.13, 394.19}, {2013, 1, 4, 395.16, 394.2}, {
       2013, 1, 5, 395.18, 394.21}, {2013, 1, 6, 395.2, 394.22}, {
       2013, 1, 7, 395.23, 394.22}, {2013, 1, 8, 395.26, 394.23}, {
       2013, 1, 9, 395.28, 394.24}, {2013, 1, 10, 395.31, 394.25}, {
       2013, 1, 11, 395.34, 394.26}, {2013, 1, 12, 395.36, 394.27}, {
       2013, 1, 13, 395.39, 394.27}, {2013, 1, 14, 395.42, 394.28}, {
       2013, 1, 15, 395.45, 394.29}, {2013, 1, 16, 395.48, 394.3}, {
       2013, 1, 17, 395.51, 394.31}, {2013, 1, 18, 395.54, 394.32}, {
       2013, 1, 19, 395.57, 394.32}, {2013, 1, 20, 395.6, 394.33}, {
       2013, 1, 21, 395.63, 394.34}, {2013, 1, 22, 395.66, 394.35}, {
       2013, 1, 23, 395.69, 394.36}, {2013, 1, 24, 395.72, 394.37}, {
       2013, 1, 25, 395.75, 394.37}, {2013, 1, 26, 395.78, 394.38}, {
       2013, 1, 27, 395.81, 394.39}, {2013, 1, 28, 395.84, 394.4}, {
       2013, 1, 29, 395.87, 394.41}, {2013, 1, 30, 395.9, 394.41}, {
       2013, 1, 31, 395.93, 394.42}, {2013, 2, 1, 395.96, 394.43}, {
       2013, 2, 2, 395.99, 394.44}, {2013, 2, 3, 396.01, 394.45}, {
       2013, 2, 4, 396.04, 394.46}, {2013, 2, 5, 396.06, 394.46}, {
       2013, 2, 6, 396.09, 394.47}, {2013, 2, 7, 396.11, 394.48}, {
       2013, 2, 8, 396.14, 394.49}, {2013, 2, 9, 396.16, 394.5}, {
       2013, 2, 10, 396.18, 394.51}, {2013, 2, 11, 396.2, 394.51}, {
       2013, 2, 12, 396.22, 394.52}, {2013, 2, 13, 396.24, 394.53}, {
       2013, 2, 14, 396.25, 394.54}, {2013, 2, 15, 396.27, 394.55}, {
       2013, 2, 16, 396.28, 394.55}, {2013, 2, 17, 396.3, 394.56}, {
       2013, 2, 18, 396.31, 394.57}, {2013, 2, 19, 396.32, 394.58}, {
       2013, 2, 20, 396.33, 394.59}, {2013, 2, 21, 396.34, 394.6}, {
       2013, 2, 22, 396.35, 394.6}, {2013, 2, 23, 396.36, 394.61}, {
       2013, 2, 24, 396.37, 394.62}, {2013, 2, 25, 396.37, 394.63}, {
       2013, 2, 26, 396.38, 394.64}, {2013, 2, 27, 396.39, 394.64}, {
       2013, 2, 28, 396.39, 394.65}, {2013, 3, 1, 396.39, 394.66}, {
       2013, 3, 2, 396.4, 394.67}, {2013, 3, 3, 396.4, 394.68}, {
       2013, 3, 4, 396.4, 394.69}, {2013, 3, 5, 396.4, 394.69}, {
       2013, 3, 6, 396.4, 394.7}, {2013, 3, 7, 396.41, 394.71}, {
       2013, 3, 8, 396.41, 394.72}, {2013, 3, 9, 396.41, 394.73}, {
       2013, 3, 10, 396.41, 394.73}, {2013, 3, 11, 396.41, 394.74}, {
       2013, 3, 12, 396.41, 394.75}, {2013, 3, 13, 396.41, 394.76}, {
       2013, 3, 14, 396.41, 394.77}, {2013, 3, 15, 396.42, 394.77}, {
       2013, 3, 16, 396.42, 394.78}, {2013, 3, 17, 396.42, 394.79}, {
       2013, 3, 18, 396.43, 394.8}, {2013, 3, 19, 396.43, 394.81}, {
       2013, 3, 20, 396.44, 394.81}, {2013, 3, 21, 396.44, 394.82}, {
       2013, 3, 22, 396.45, 394.83}, {2013, 3, 23, 396.46, 394.84}, {
       2013, 3, 24, 396.46, 394.85}, {2013, 3, 25, 396.47, 394.85}, {
       2013, 3, 26, 396.48, 394.86}, {2013, 3, 27, 396.5, 394.87}, {
       2013, 3, 28, 396.51, 394.88}, {2013, 3, 29, 396.52, 394.89}, {
       2013, 3, 30, 396.54, 394.89}, {2013, 3, 31, 396.55, 394.9}, {
       2013, 4, 1, 396.57, 394.91}, {2013, 4, 2, 396.59, 394.92}, {
       2013, 4, 3, 396.6, 394.93}, {2013, 4, 4, 396.62, 394.93}, {
       2013, 4, 5, 396.65, 394.94}, {2013, 4, 6, 396.67, 394.95}, {
       2013, 4, 7, 396.69, 394.96}, {2013, 4, 8, 396.71, 394.97}, {
       2013, 4, 9, 396.74, 394.97}, {2013, 4, 10, 396.76, 394.98}, {
       2013, 4, 11, 396.79, 394.99}, {2013, 4, 12, 396.82, 395.}, {
       2013, 4, 13, 396.84, 395.}, {2013, 4, 14, 396.87, 395.01}, {
       2013, 4, 15, 396.9, 395.02}, {2013, 4, 16, 396.93, 395.03}, {
       2013, 4, 17, 396.96, 395.04}, {2013, 4, 18, 396.99, 395.04}, {
       2013, 4, 19, 397.02, 395.05}, {2013, 4, 20, 397.05, 395.06}, {
       2013, 4, 21, 397.08, 395.07}, {2013, 4, 22, 397.11, 395.08}, {
       2013, 4, 23, 397.14, 395.08}, {2013, 4, 24, 397.17, 395.09}, {
       2013, 4, 25, 397.2, 395.1}, {2013, 4, 26, 397.23, 395.11}, {
       2013, 4, 27, 397.25, 395.11}, {2013, 4, 28, 397.28, 395.12}, {
       2013, 4, 29, 397.31, 395.13}, {2013, 4, 30, 397.33, 395.14}, {
       2013, 5, 1, 397.36, 395.14}, {2013, 5, 2, 397.38, 395.15}, {
       2013, 5, 3, 397.4, 395.16}, {2013, 5, 4, 397.42, 395.17}, {
       2013, 5, 5, 397.44, 395.18}, {2013, 5, 6, 397.46, 395.18}, {
       2013, 5, 7, 397.48, 395.19}, {2013, 5, 8, 397.49, 395.2}, {
       2013, 5, 9, 397.51, 395.21}, {2013, 5, 10, 397.52, 395.21}, {
       2013, 5, 11, 397.53, 395.22}, {2013, 5, 12, 397.54, 395.23}, {
       2013, 5, 13, 397.54, 395.24}, {2013, 5, 14, 397.54, 395.24}, {
       2013, 5, 15, 397.55, 395.25}, {2013, 5, 16, 397.54, 395.26}, {
       2013, 5, 17, 397.54, 395.27}, {2013, 5, 18, 397.54, 395.27}, {
       2013, 5, 19, 397.53, 395.28}, {2013, 5, 20, 397.52, 395.29}, {
       2013, 5, 21, 397.51, 395.3}, {2013, 5, 22, 397.49, 395.3}, {
       2013, 5, 23, 397.47, 395.31}, {2013, 5, 24, 397.46, 395.32}, {
       2013, 5, 25, 397.43, 395.33}, {2013, 5, 26, 397.41, 395.33}, {
       2013, 5, 27, 397.38, 395.34}, {2013, 5, 28, 397.35, 395.35}, {
       2013, 5, 29, 397.32, 395.36}, {2013, 5, 30, 397.29, 395.36}, {
       2013, 5, 31, 397.25, 395.37}, {2013, 6, 1, 397.22, 395.38}, {
       2013, 6, 2, 397.17, 395.39}, {2013, 6, 3, 397.13, 395.39}, {
       2013, 6, 4, 397.09, 395.4}, {2013, 6, 5, 397.04, 395.41}, {
       2013, 6, 6, 396.99, 395.41}, {2013, 6, 7, 396.94, 395.42}, {
       2013, 6, 8, 396.89, 395.43}, {2013, 6, 9, 396.84, 395.44}, {
       2013, 6, 10, 396.78, 395.44}, {2013, 6, 11, 396.72, 395.45}, {
       2013, 6, 12, 396.66, 395.46}, {2013, 6, 13, 396.6, 395.47}, {
       2013, 6, 14, 396.54, 395.47}, {2013, 6, 15, 396.48, 395.48}, {
       2013, 6, 16, 396.41, 395.49}, {2013, 6, 17, 396.35, 395.49}, {
       2013, 6, 18, 396.28, 395.5}, {2013, 6, 19, 396.21, 395.51}, {
       2013, 6, 20, 396.14, 395.52}, {2013, 6, 21, 396.07, 395.52}, {
       2013, 6, 22, 396., 395.53}, {2013, 6, 23, 395.93, 395.54}, {
       2013, 6, 24, 395.86, 395.54}, {2013, 6, 25, 395.79, 395.55}, {
       2013, 6, 26, 395.72, 395.56}, {2013, 6, 27, 395.64, 395.57}, {
       2013, 6, 28, 395.57, 395.57}, {2013, 6, 29, 395.5, 395.58}, {
       2013, 6, 30, 395.42, 395.59}, {2013, 7, 1, 395.35, 395.59}, {
       2013, 7, 2, 395.28, 395.6}, {2013, 7, 3, 395.2, 395.61}, {
       2013, 7, 4, 395.13, 395.61}, {2013, 7, 5, 395.06, 395.62}, {
       2013, 7, 6, 394.98, 395.63}, {2013, 7, 7, 394.91, 395.64}, {
       2013, 7, 8, 394.84, 395.64}, {2013, 7, 9, 394.77, 395.65}, {
       2013, 7, 10, 394.7, 395.66}, {2013, 7, 11, 394.63, 395.66}, {
       2013, 7, 12, 394.56, 395.67}, {2013, 7, 13, 394.49, 395.68}, {
       2013, 7, 14, 394.42, 395.68}, {2013, 7, 15, 394.35, 395.69}, {
       2013, 7, 16, 394.28, 395.7}, {2013, 7, 17, 394.22, 395.7}, {
       2013, 7, 18, 394.15, 395.71}, {2013, 7, 19, 394.09, 395.72}, {
       2013, 7, 20, 394.03, 395.73}, {2013, 7, 21, 393.97, 395.73}, {
       2013, 7, 22, 393.9, 395.74}, {2013, 7, 23, 393.84, 395.75}, {
       2013, 7, 24, 393.79, 395.75}, {2013, 7, 25, 393.73, 395.76}, {
       2013, 7, 26, 393.67, 395.77}, {2013, 7, 27, 393.62, 395.77}, {
       2013, 7, 28, 393.56, 395.78}, {2013, 7, 29, 393.51, 395.79}, {
       2013, 7, 30, 393.46, 395.79}, {2013, 7, 31, 393.41, 395.8}, {
       2013, 8, 1, 393.36, 395.81}, {2013, 8, 2, 393.31, 395.81}, {
       2013, 8, 3, 393.27, 395.82}, {2013, 8, 4, 393.22, 395.83}, {
       2013, 8, 5, 393.18, 395.83}, {2013, 8, 6, 393.14, 395.84}, {
       2013, 8, 7, 393.1, 395.85}, {2013, 8, 8, 393.06, 395.85}, {
       2013, 8, 9, 393.02, 395.86}, {2013, 8, 10, 392.98, 395.87}, {
       2013, 8, 11, 392.95, 395.87}, {2013, 8, 12, 392.91, 395.88}, {
       2013, 8, 13, 392.88, 395.88}, {2013, 8, 14, 392.85, 395.89}, {
       2013, 8, 15, 392.82, 395.9}, {2013, 8, 16, 392.8, 395.9}, {
       2013, 8, 17, 392.77, 395.91}, {2013, 8, 18, 392.75, 395.92}, {
       2013, 8, 19, 392.73, 395.92}, {2013, 8, 20, 392.71, 395.93}, {
       2013, 8, 21, 392.69, 395.94}, {2013, 8, 22, 392.67, 395.94}, {
       2013, 8, 23, 392.66, 395.95}, {2013, 8, 24, 392.64, 395.96}, {
       2013, 8, 25, 392.63, 395.96}, {2013, 8, 26, 392.62, 395.97}, {
       2013, 8, 27, 392.61, 395.97}, {2013, 8, 28, 392.61, 395.98}, {
       2013, 8, 29, 392.6, 395.99}, {2013, 8, 30, 392.6, 395.99}, {
       2013, 8, 31, 392.6, 396.}, {2013, 9, 1, 392.6, 396.01}, {
       2013, 9, 2, 392.61, 396.01}, {2013, 9, 3, 392.61, 396.02}, {
       2013, 9, 4, 392.62, 396.03}, {2013, 9, 5, 392.63, 396.03}, {
       2013, 9, 6, 392.64, 396.04}, {2013, 9, 7, 392.65, 396.04}, {
       2013, 9, 8, 392.67, 396.05}, {2013, 9, 9, 392.68, 396.06}, {
       2013, 9, 10, 392.7, 396.06}, {2013, 9, 11, 392.72, 396.07}, {
       2013, 9, 12, 392.74, 396.07}, {2013, 9, 13, 392.77, 396.08}, {
       2013, 9, 14, 392.79, 396.09}, {2013, 9, 15, 392.82, 396.09}, {
       2013, 9, 16, 392.85, 396.1}, {2013, 9, 17, 392.88, 396.11}, {
       2013, 9, 18, 392.91, 396.11}, {2013, 9, 19, 392.95, 396.12}, {
       2013, 9, 20, 392.98, 396.12}, {2013, 9, 21, 393.02, 396.13}, {
       2013, 9, 22, 393.06, 396.14}, {2013, 9, 23, 393.1, 396.14}, {
       2013, 9, 24, 393.14, 396.15}, {2013, 9, 25, 393.19, 396.15}, {
       2013, 9, 26, 393.23, 396.16}, {2013, 9, 27, 393.28, 396.17}, {
       2013, 9, 28, 393.33, 396.17}, {2013, 9, 29, 393.38, 396.18}, {
       2013, 9, 30, 393.43, 396.18}, {2013, 10, 1, 393.48, 396.19}, {
       2013, 10, 2, 393.53, 396.2}, {2013, 10, 3, 393.58, 396.2}, {
       2013, 10, 4, 393.64, 396.21}, {2013, 10, 5, 393.69, 396.21}, {
       2013, 10, 6, 393.75, 396.22}, {2013, 10, 7, 393.81, 396.23}, {
       2013, 10, 8, 393.86, 396.23}, {2013, 10, 9, 393.92, 396.24}, {
       2013, 10, 10, 393.98, 396.24}, {2013, 10, 11, 394.04, 396.25}, {
       2013, 10, 12, 394.1, 396.25}, {2013, 10, 13, 394.16, 396.26}, {
       2013, 10, 14, 394.23, 396.27}, {2013, 10, 15, 394.29, 396.27}, {
       2013, 10, 16, 394.35, 396.28}, {2013, 10, 17, 394.41, 396.28}, {
       2013, 10, 18, 394.48, 396.29}, {2013, 10, 19, 394.54, 396.3}, {
       2013, 10, 20, 394.6, 396.3}, {2013, 10, 21, 394.67, 396.31}, {
       2013, 10, 22, 394.73, 396.31}, {2013, 10, 23, 394.79, 396.32}, {
       2013, 10, 24, 394.85, 396.32}, {2013, 10, 25, 394.92, 396.33}, {
       2013, 10, 26, 394.98, 396.34}, {2013, 10, 27, 395.04, 396.34}, {
       2013, 10, 28, 395.11, 396.35}, {2013, 10, 29, 395.17, 396.35}, {
       2013, 10, 30, 395.23, 396.36}, {2013, 10, 31, 395.29, 396.36}, {
       2013, 11, 1, 395.35, 396.37}, {2013, 11, 2, 395.41, 396.38}, {
       2013, 11, 3, 395.48, 396.38}, {2013, 11, 4, 395.54, 396.39}, {
       2013, 11, 5, 395.59, 396.39}, {2013, 11, 6, 395.65, 396.4}, {
       2013, 11, 7, 395.71, 396.4}, {2013, 11, 8, 395.77, 396.41}, {
       2013, 11, 9, 395.83, 396.41}, {2013, 11, 10, 395.89, 396.42}, {
       2013, 11, 11, 395.94, 396.43}, {2013, 11, 12, 396., 396.43}, {
       2013, 11, 13, 396.05, 396.44}, {2013, 11, 14, 396.11, 396.44}, {
       2013, 11, 15, 396.16, 396.45}, {2013, 11, 16, 396.21, 396.45}, {
       2013, 11, 17, 396.26, 396.46}, {2013, 11, 18, 396.32, 396.46}, {
       2013, 11, 19, 396.37, 396.47}, {2013, 11, 20, 396.42, 396.48}, {
       2013, 11, 21, 396.47, 396.48}, {2013, 11, 22, 396.51, 396.49}, {
       2013, 11, 23, 396.56, 396.49}, {2013, 11, 24, 396.61, 396.5}, {
       2013, 11, 25, 396.65, 396.5}, {2013, 11, 26, 396.7, 396.51}, {
       2013, 11, 27, 396.74, 396.51}, {2013, 11, 28, 396.78, 396.52}, {
       2013, 11, 29, 396.83, 396.52}, {2013, 11, 30, 396.87, 396.53}, {
       2013, 12, 1, 396.91, 396.54}, {2013, 12, 2, 396.95, 396.54}, {
       2013, 12, 3, 396.98, 396.55}, {2013, 12, 4, 397.02, 396.55}, {
       2013, 12, 5, 397.06, 396.56}, {2013, 12, 6, 397.09, 396.56}, {
       2013, 12, 7, 397.13, 396.57}, {2013, 12, 8, 397.16, 396.57}, {
       2013, 12, 9, 397.19, 396.58}, {2013, 12, 10, 397.22, 396.58}, {
       2013, 12, 11, 397.25, 396.59}, {2013, 12, 12, 397.28, 396.59}, {
       2013, 12, 13, 397.31, 396.6}, {2013, 12, 14, 397.34, 396.6}, {
       2013, 12, 15, 397.37, 396.61}, {2013, 12, 16, 397.39, 396.62}, {
       2013, 12, 17, 397.42, 396.62}, {2013, 12, 18, 397.44, 396.63}, {
       2013, 12, 19, 397.46, 396.63}, {2013, 12, 20, 397.49, 396.64}, {
       2013, 12, 21, 397.51, 396.64}, {2013, 12, 22, 397.53, 396.65}, {
       2013, 12, 23, 397.55, 396.65}, {2013, 12, 24, 397.57, 396.66}, {
       2013, 12, 25, 397.58, 396.66}, {2013, 12, 26, 397.6, 396.67}, {
       2013, 12, 27, 397.62, 396.67}, {2013, 12, 28, 397.64, 396.68}, {
       2013, 12, 29, 397.65, 396.68}, {2013, 12, 30, 397.67, 396.69}, {
       2013, 12, 31, 397.68, 396.69}, {2014, 1, 1, 397.7, 396.7}, {
       2014, 1, 2, 397.71, 396.7}, {2014, 1, 3, 397.72, 396.71}, {
       2014, 1, 4, 397.74, 396.71}, {2014, 1, 5, 397.75, 396.72}, {
       2014, 1, 6, 397.76, 396.72}, {2014, 1, 7, 397.77, 396.73}, {
       2014, 1, 8, 397.78, 396.74}, {2014, 1, 9, 397.8, 396.74}, {
       2014, 1, 10, 397.81, 396.75}, {2014, 1, 11, 397.82, 396.75}, {
       2014, 1, 12, 397.83, 396.76}, {2014, 1, 13, 397.84, 396.76}, {
       2014, 1, 14, 397.85, 396.77}, {2014, 1, 15, 397.86, 396.77}, {
       2014, 1, 16, 397.88, 396.78}, {2014, 1, 17, 397.89, 396.78}, {
       2014, 1, 18, 397.9, 396.79}, {2014, 1, 19, 397.91, 396.79}, {
       2014, 1, 20, 397.92, 396.8}, {2014, 1, 21, 397.94, 396.8}, {
       2014, 1, 22, 397.95, 396.81}, {2014, 1, 23, 397.96, 396.81}, {
       2014, 1, 24, 397.97, 396.82}, {2014, 1, 25, 397.99, 396.82}, {
       2014, 1, 26, 398., 396.83}, {2014, 1, 27, 398.01, 396.83}, {
       2014, 1, 28, 398.03, 396.84}, {2014, 1, 29, 398.04, 396.84}, {
       2014, 1, 30, 398.06, 396.85}, {2014, 1, 31, 398.07, 396.85}, {
       2014, 2, 1, 398.09, 396.86}, {2014, 2, 2, 398.11, 396.86}, {
       2014, 2, 3, 398.12, 396.87}, {2014, 2, 4, 398.14, 396.87}, {
       2014, 2, 5, 398.15, 396.88}, {2014, 2, 6, 398.17, 396.88}, {
       2014, 2, 7, 398.19, 396.89}, {2014, 2, 8, 398.21, 396.89}, {
       2014, 2, 9, 398.22, 396.9}, {2014, 2, 10, 398.24, 396.9}, {
       2014, 2, 11, 398.26, 396.91}, {2014, 2, 12, 398.28, 396.91}, {
       2014, 2, 13, 398.3, 396.92}, {2014, 2, 14, 398.32, 396.92}, {
       2014, 2, 15, 398.33, 396.93}, {2014, 2, 16, 398.35, 396.93}, {
       2014, 2, 17, 398.37, 396.94}, {2014, 2, 18, 398.39, 396.94}, {
       2014, 2, 19, 398.41, 396.95}, {2014, 2, 20, 398.43, 396.95}, {
       2014, 2, 21, 398.45, 396.96}, {2014, 2, 22, 398.46, 396.96}, {
       2014, 2, 23, 398.48, 396.97}, {2014, 2, 24, 398.5, 396.97}, {
       2014, 2, 25, 398.52, 396.98}, {2014, 2, 26, 398.54, 396.98}, {
       2014, 2, 27, 398.55, 396.99}, {2014, 2, 28, 398.57, 396.99}, {
       2014, 3, 1, 398.59, 397.}, {2014, 3, 2, 398.6, 397.}, {
       2014, 3, 3, 398.62, 397.01}, {2014, 3, 4, 398.63, 397.01}, {
       2014, 3, 5, 398.65, 397.02}, {2014, 3, 6, 398.66, 397.02}, {
       2014, 3, 7, 398.68, 397.03}, {2014, 3, 8, 398.69, 397.03}, {
       2014, 3, 9, 398.71, 397.04}, {2014, 3, 10, 398.72, 397.04}, {
       2014, 3, 11, 398.73, 397.05}, {2014, 3, 12, 398.75, 397.05}, {
       2014, 3, 13, 398.76, 397.06}, {2014, 3, 14, 398.77, 397.06}, {
       2014, 3, 15, 398.78, 397.07}, {2014, 3, 16, 398.79, 397.07}, {
       2014, 3, 17, 398.8, 397.08}, {2014, 3, 18, 398.81, 397.08}, {
       2014, 3, 19, 398.82, 397.09}, {2014, 3, 20, 398.83, 397.09}, {
       2014, 3, 21, 398.84, 397.09}, {2014, 3, 22, 398.85, 397.1}, {
       2014, 3, 23, 398.86, 397.1}, {2014, 3, 24, 398.87, 397.11}, {
       2014, 3, 25, 398.88, 397.11}, {2014, 3, 26, 398.88, 397.12}, {
       2014, 3, 27, 398.89, 397.12}, {2014, 3, 28, 398.9, 397.13}, {
       2014, 3, 29, 398.91, 397.13}, {2014, 3, 30, 398.92, 397.14}, {
       2014, 3, 31, 398.92, 397.14}, {2014, 4, 1, 398.93, 397.15}, {
       2014, 4, 2, 398.94, 397.15}, {2014, 4, 3, 398.95, 397.16}, {
       2014, 4, 4, 398.96, 397.16}, {2014, 4, 5, 398.96, 397.17}, {
       2014, 4, 6, 398.97, 397.17}, {2014, 4, 7, 398.98, 397.18}, {
       2014, 4, 8, 398.99, 397.18}, {2014, 4, 9, 399., 397.19}, {
       2014, 4, 10, 399.01, 397.19}, {2014, 4, 11, 399.02, 397.2}, {
       2014, 4, 12, 399.02, 397.2}, {2014, 4, 13, 399.03, 397.21}, {
       2014, 4, 14, 399.04, 397.21}, {2014, 4, 15, 399.05, 397.22}, {
       2014, 4, 16, 399.06, 397.22}, {2014, 4, 17, 399.07, 397.23}, {
       2014, 4, 18, 399.08, 397.23}, {2014, 4, 19, 399.09, 397.24}, {
       2014, 4, 20, 399.1, 397.24}, {2014, 4, 21, 399.11, 397.25}, {
       2014, 4, 22, 399.12, 397.25}, {2014, 4, 23, 399.13, 397.26}, {
       2014, 4, 24, 399.14, 397.26}, {2014, 4, 25, 399.15, 397.27}, {
       2014, 4, 26, 399.16, 397.27}, {2014, 4, 27, 399.17, 397.28}, {
       2014, 4, 28, 399.19, 397.28}, {2014, 4, 29, 399.2, 397.29}, {
       2014, 4, 30, 399.21, 397.29}, {2014, 5, 1, 399.22, 397.3}, {
       2014, 5, 2, 399.23, 397.3}, {2014, 5, 3, 399.24, 397.3}, {
       2014, 5, 4, 399.24, 397.31}, {2014, 5, 5, 399.25, 397.31}, {
       2014, 5, 6, 399.26, 397.32}, {2014, 5, 7, 399.27, 397.32}, {
       2014, 5, 8, 399.28, 397.33}, {2014, 5, 9, 399.29, 397.33}, {
       2014, 5, 10, 399.29, 397.34}, {2014, 5, 11, 399.3, 397.34}, {
       2014, 5, 12, 399.3, 397.35}, {2014, 5, 13, 399.31, 397.35}, {
       2014, 5, 14, 399.31, 397.36}, {2014, 5, 15, 399.31, 397.36}, {
       2014, 5, 16, 399.32, 397.37}, {2014, 5, 17, 399.32, 397.37}, {
       2014, 5, 18, 399.32, 397.38}, {2014, 5, 19, 399.32, 397.38}, {
       2014, 5, 20, 399.31, 397.39}, {2014, 5, 21, 399.31, 397.39}, {
       2014, 5, 22, 399.31, 397.4}, {2014, 5, 23, 399.3, 397.4}, {
       2014, 5, 24, 399.29, 397.41}, {2014, 5, 25, 399.28, 397.41}, {
       2014, 5, 26, 399.28, 397.42}, {2014, 5, 27, 399.26, 397.42}, {
       2014, 5, 28, 399.25, 397.43}, {2014, 5, 29, 399.24, 397.43}, {
       2014, 5, 30, 399.22, 397.44}, {2014, 5, 31, 399.2, 397.44}, {
       2014, 6, 1, 399.19, 397.45}, {2014, 6, 2, 399.17, 397.45}, {
       2014, 6, 3, 399.14, 397.46}, {2014, 6, 4, 399.12, 397.46}, {
       2014, 6, 5, 399.09, 397.47}, {2014, 6, 6, 399.07, 397.47}, {
       2014, 6, 7, 399.04, 397.48}, {2014, 6, 8, 399.01, 397.48}, {
       2014, 6, 9, 398.98, 397.49}, {2014, 6, 10, 398.94, 397.49}, {
       2014, 6, 11, 398.91, 397.5}, {2014, 6, 12, 398.87, 397.5}, {
       2014, 6, 13, 398.83, 397.51}, {2014, 6, 14, 398.79, 397.51}, {
       2014, 6, 15, 398.75, 397.51}, {2014, 6, 16, 398.7, 397.52}, {
       2014, 6, 17, 398.66, 397.52}, {2014, 6, 18, 398.61, 397.53}, {
       2014, 6, 19, 398.56, 397.53}, {2014, 6, 20, 398.51, 397.54}, {
       2014, 6, 21, 398.45, 397.54}, {2014, 6, 22, 398.4, 397.55}, {
       2014, 6, 23, 398.34, 397.55}, {2014, 6, 24, 398.28, 397.56}, {
       2014, 6, 25, 398.22, 397.56}, {2014, 6, 26, 398.16, 397.57}, {
       2014, 6, 27, 398.1, 397.57}, {2014, 6, 28, 398.04, 397.58}, {
       2014, 6, 29, 397.97, 397.58}, {2014, 6, 30, 397.91, 397.59}, {
       2014, 7, 1, 397.84, 397.59}, {2014, 7, 2, 397.77, 397.6}, {
       2014, 7, 3, 397.7, 397.6}, {2014, 7, 4, 397.63, 397.61}, {
       2014, 7, 5, 397.55, 397.61}, {2014, 7, 6, 397.48, 397.62}, {
       2014, 7, 7, 397.4, 397.62}, {2014, 7, 8, 397.33, 397.63}, {
       2014, 7, 9, 397.25, 397.63}, {2014, 7, 10, 397.17, 397.64}, {
       2014, 7, 11, 397.1, 397.64}, {2014, 7, 12, 397.02, 397.65}, {
       2014, 7, 13, 396.94, 397.65}, {2014, 7, 14, 396.86, 397.66}, {
       2014, 7, 15, 396.78, 397.66}, {2014, 7, 16, 396.7, 397.67}, {
       2014, 7, 17, 396.62, 397.67}, {2014, 7, 18, 396.54, 397.68}, {
       2014, 7, 19, 396.46, 397.68}, {2014, 7, 20, 396.37, 397.69}, {
       2014, 7, 21, 396.29, 397.69}, {2014, 7, 22, 396.21, 397.7}, {
       2014, 7, 23, 396.13, 397.7}, {2014, 7, 24, 396.05, 397.71}, {
       2014, 7, 25, 395.97, 397.71}, {2014, 7, 26, 395.89, 397.72}, {
       2014, 7, 27, 395.82, 397.72}, {2014, 7, 28, 395.74, 397.73}, {
       2014, 7, 29, 395.66, 397.73}, {2014, 7, 30, 395.59, 397.74}, {
       2014, 7, 31, 395.51, 397.74}, {2014, 8, 1, 395.44, 397.75}, {
       2014, 8, 2, 395.37, 397.75}, {2014, 8, 3, 395.29, 397.76}, {
       2014, 8, 4, 395.22, 397.76}, {2014, 8, 5, 395.16, 397.77}, {
       2014, 8, 6, 395.09, 397.77}, {2014, 8, 7, 395.02, 397.78}, {
       2014, 8, 8, 394.96, 397.78}, {2014, 8, 9, 394.9, 397.79}, {
       2014, 8, 10, 394.84, 397.79}, {2014, 8, 11, 394.78, 397.8}, {
       2014, 8, 12, 394.72, 397.8}, {2014, 8, 13, 394.67, 397.81}, {
       2014, 8, 14, 394.62, 397.81}, {2014, 8, 15, 394.57, 397.82}, {
       2014, 8, 16, 394.52, 397.82}, {2014, 8, 17, 394.47, 397.83}, {
       2014, 8, 18, 394.43, 397.83}, {2014, 8, 19, 394.39, 397.84}, {
       2014, 8, 20, 394.35, 397.84}, {2014, 8, 21, 394.31, 397.85}, {
       2014, 8, 22, 394.28, 397.85}, {2014, 8, 23, 394.25, 397.86}, {
       2014, 8, 24, 394.22, 397.86}, {2014, 8, 25, 394.2, 397.87}, {
       2014, 8, 26, 394.17, 397.87}, {2014, 8, 27, 394.15, 397.88}, {
       2014, 8, 28, 394.13, 397.88}, {2014, 8, 29, 394.12, 397.89}, {
       2014, 8, 30, 394.1, 397.89}, {2014, 8, 31, 394.09, 397.9}, {
       2014, 9, 1, 394.09, 397.9}, {2014, 9, 2, 394.08, 397.91}, {
       2014, 9, 3, 394.08, 397.91}, {2014, 9, 4, 394.08, 397.92}, {
       2014, 9, 5, 394.08, 397.92}, {2014, 9, 6, 394.08, 397.93}, {
       2014, 9, 7, 394.09, 397.93}, {2014, 9, 8, 394.1, 397.94}, {
       2014, 9, 9, 394.11, 397.95}, {2014, 9, 10, 394.13, 397.95}, {
       2014, 9, 11, 394.15, 397.96}, {2014, 9, 12, 394.16, 397.96}, {
       2014, 9, 13, 394.19, 397.97}, {2014, 9, 14, 394.21, 397.97}, {
       2014, 9, 15, 394.24, 397.98}, {2014, 9, 16, 394.26, 397.98}, {
       2014, 9, 17, 394.3, 397.99}, {2014, 9, 18, 394.33, 397.99}, {
       2014, 9, 19, 394.36, 398.}, {2014, 9, 20, 394.4, 398.}, {
       2014, 9, 21, 394.44, 398.01}, {2014, 9, 22, 394.48, 398.01}, {
       2014, 9, 23, 394.52, 398.02}, {2014, 9, 24, 394.57, 398.02}, {
       2014, 9, 25, 394.61, 398.03}, {2014, 9, 26, 394.66, 398.03}, {
       2014, 9, 27, 394.71, 398.04}, {2014, 9, 28, 394.76, 398.04}, {
       2014, 9, 29, 394.81, 398.05}, {2014, 9, 30, 394.87, 398.05}, {
       2014, 10, 1, 394.92, 398.06}, {2014, 10, 2, 394.98, 398.06}, {
       2014, 10, 3, 395.04, 398.07}, {2014, 10, 4, 395.1, 398.07}, {
       2014, 10, 5, 395.16, 398.08}, {2014, 10, 6, 395.22, 398.08}, {
       2014, 10, 7, 395.28, 398.09}, {2014, 10, 8, 395.35, 398.09}, {
       2014, 10, 9, 395.41, 398.1}, {2014, 10, 10, 395.48, 398.1}, {
       2014, 10, 11, 395.54, 398.11}, {2014, 10, 12, 395.61, 398.12}, {
       2014, 10, 13, 395.68, 398.12}, {2014, 10, 14, 395.75, 398.13}, {
       2014, 10, 15, 395.82, 398.13}, {2014, 10, 16, 395.89, 398.14}, {
       2014, 10, 17, 395.96, 398.14}, {2014, 10, 18, 396.03, 398.15}, {
       2014, 10, 19, 396.1, 398.15}, {2014, 10, 20, 396.18, 398.16}, {
       2014, 10, 21, 396.25, 398.16}, {2014, 10, 22, 396.32, 398.17}, {
       2014, 10, 23, 396.4, 398.17}, {2014, 10, 24, 396.47, 398.18}, {
       2014, 10, 25, 396.54, 398.18}, {2014, 10, 26, 396.62, 398.19}, {
       2014, 10, 27, 396.69, 398.19}, {2014, 10, 28, 396.76, 398.2}, {
       2014, 10, 29, 396.84, 398.2}, {2014, 10, 30, 396.91, 398.21}, {
       2014, 10, 31, 396.98, 398.22}, {2014, 11, 1, 397.05, 398.22}, {
       2014, 11, 2, 397.13, 398.23}, {2014, 11, 3, 397.2, 398.23}, {
       2014, 11, 4, 397.27, 398.24}, {2014, 11, 5, 397.34, 398.24}, {
       2014, 11, 6, 397.41, 398.25}, {2014, 11, 7, 397.48, 398.25}, {
       2014, 11, 8, 397.55, 398.26}, {2014, 11, 9, 397.61, 398.26}, {
       2014, 11, 10, 397.68, 398.27}, {2014, 11, 11, 397.75, 398.27}, {
       2014, 11, 12, 397.81, 398.28}, {2014, 11, 13, 397.88, 398.28}, {
       2014, 11, 14, 397.94, 398.29}, {2014, 11, 15, 398., 398.29}, {
       2014, 11, 16, 398.06, 398.3}, {2014, 11, 17, 398.12, 398.31}, {
       2014, 11, 18, 398.18, 398.31}, {2014, 11, 19, 398.24, 398.32}, {
       2014, 11, 20, 398.3, 398.32}, {2014, 11, 21, 398.35, 398.33}, {
       2014, 11, 22, 398.4, 398.33}, {2014, 11, 23, 398.46, 398.34}, {
       2014, 11, 24, 398.51, 398.34}, {2014, 11, 25, 398.56, 398.35}, {
       2014, 11, 26, 398.61, 398.35}, {2014, 11, 27, 398.66, 398.36}, {
       2014, 11, 28, 398.7, 398.36}, {2014, 11, 29, 398.75, 398.37}, {
       2014, 11, 30, 398.79, 398.38}, {2014, 12, 1, 398.83, 398.38}, {
       2014, 12, 2, 398.88, 398.39}, {2014, 12, 3, 398.92, 398.39}, {
       2014, 12, 4, 398.95, 398.4}, {2014, 12, 5, 398.99, 398.4}, {
       2014, 12, 6, 399.03, 398.41}, {2014, 12, 7, 399.06, 398.41}, {
       2014, 12, 8, 399.1, 398.42}, {2014, 12, 9, 399.13, 398.42}, {
       2014, 12, 10, 399.17, 398.43}, {2014, 12, 11, 399.2, 398.44}, {
       2014, 12, 12, 399.23, 398.44}, {2014, 12, 13, 399.26, 398.45}, {
       2014, 12, 14, 399.29, 398.45}, {2014, 12, 15, 399.31, 398.46}, {
       2014, 12, 16, 399.34, 398.46}, {2014, 12, 17, 399.37, 398.47}, {
       2014, 12, 18, 399.39, 398.47}, {2014, 12, 19, 399.42, 398.48}, {
       2014, 12, 20, 399.44, 398.49}, {2014, 12, 21, 399.47, 398.49}, {
       2014, 12, 22, 399.49, 398.5}, {2014, 12, 23, 399.52, 398.5}, {
       2014, 12, 24, 399.54, 398.51}, {2014, 12, 25, 399.56, 398.51}, {
       2014, 12, 26, 399.58, 398.52}, {2014, 12, 27, 399.61, 398.52}, {
       2014, 12, 28, 399.63, 398.53}, {2014, 12, 29, 399.65, 398.54}, {
       2014, 12, 30, 399.67, 398.54}, {2014, 12, 31, 399.69, 398.55}, {
       2015, 1, 1, 399.72, 398.55}, {2015, 1, 2, 399.74, 398.56}, {
       2015, 1, 3, 399.76, 398.56}, {2015, 1, 4, 399.78, 398.57}, {
       2015, 1, 5, 399.8, 398.57}, {2015, 1, 6, 399.82, 398.58}, {
       2015, 1, 7, 399.85, 398.59}, {2015, 1, 8, 399.87, 398.59}, {
       2015, 1, 9, 399.89, 398.6}, {2015, 1, 10, 399.91, 398.6}, {
       2015, 1, 11, 399.93, 398.61}, {2015, 1, 12, 399.96, 398.61}, {
       2015, 1, 13, 399.98, 398.62}, {2015, 1, 14, 400., 398.63}, {
       2015, 1, 15, 400.02, 398.63}, {2015, 1, 16, 400.05, 398.64}, {
       2015, 1, 17, 400.07, 398.64}, {2015, 1, 18, 400.09, 398.65}, {
       2015, 1, 19, 400.11, 398.65}, {2015, 1, 20, 400.14, 398.66}, {
       2015, 1, 21, 400.16, 398.66}, {2015, 1, 22, 400.18, 398.67}, {
       2015, 1, 23, 400.2, 398.68}, {2015, 1, 24, 400.23, 398.68}, {
       2015, 1, 25, 400.25, 398.69}, {2015, 1, 26, 400.27, 398.69}, {
       2015, 1, 27, 400.29, 398.7}, {2015, 1, 28, 400.31, 398.71}, {
       2015, 1, 29, 400.33, 398.71}, {2015, 1, 30, 400.36, 398.72}, {
       2015, 1, 31, 400.38, 398.72}, {2015, 2, 1, 400.4, 398.73}, {
       2015, 2, 2, 400.42, 398.73}, {2015, 2, 3, 400.44, 398.74}, {
       2015, 2, 4, 400.46, 398.75}, {2015, 2, 5, 400.47, 398.75}, {
       2015, 2, 6, 400.49, 398.76}, {2015, 2, 7, 400.51, 398.76}, {
       2015, 2, 8, 400.53, 398.77}, {2015, 2, 9, 400.54, 398.77}, {
       2015, 2, 10, 400.56, 398.78}, {2015, 2, 11, 400.58, 398.79}, {
       2015, 2, 12, 400.59, 398.79}, {2015, 2, 13, 400.61, 398.8}, {
       2015, 2, 14, 400.62, 398.8}, {2015, 2, 15, 400.64, 398.81}, {
       2015, 2, 16, 400.65, 398.82}, {2015, 2, 17, 400.66, 398.82}, {
       2015, 2, 18, 400.68, 398.83}, {2015, 2, 19, 400.69, 398.83}, {
       2015, 2, 20, 400.7, 398.84}, {2015, 2, 21, 400.71, 398.85}, {
       2015, 2, 22, 400.72, 398.85}, {2015, 2, 23, 400.73, 398.86}, {
       2015, 2, 24, 400.74, 398.86}, {2015, 2, 25, 400.75, 398.87}, {
       2015, 2, 26, 400.76, 398.88}, {2015, 2, 27, 400.77, 398.88}, {
       2015, 2, 28, 400.78, 398.89}, {2015, 3, 1, 400.78, 398.89}, {
       2015, 3, 2, 400.79, 398.9}, {2015, 3, 3, 400.8, 398.91}, {
       2015, 3, 4, 400.81, 398.91}, {2015, 3, 5, 400.82, 398.92}, {
       2015, 3, 6, 400.82, 398.92}, {2015, 3, 7, 400.83, 398.93}, {
       2015, 3, 8, 400.84, 398.94}, {2015, 3, 9, 400.85, 398.94}, {
       2015, 3, 10, 400.85, 398.95}, {2015, 3, 11, 400.86, 398.95}, {
       2015, 3, 12, 400.87, 398.96}, {2015, 3, 13, 400.88, 398.97}, {
       2015, 3, 14, 400.89, 398.97}, {2015, 3, 15, 400.89, 398.98}, {
       2015, 3, 16, 400.9, 398.98}, {2015, 3, 17, 400.91, 398.99}, {
       2015, 3, 18, 400.92, 399.}, {2015, 3, 19, 400.93, 399.}, {
       2015, 3, 20, 400.94, 399.01}, {2015, 3, 21, 400.95, 399.02}, {
       2015, 3, 22, 400.96, 399.02}, {2015, 3, 23, 400.97, 399.03}, {
       2015, 3, 24, 400.99, 399.03}, {2015, 3, 25, 401., 399.04}, {
       2015, 3, 26, 401.01, 399.05}, {2015, 3, 27, 401.02, 399.05}, {
       2015, 3, 28, 401.04, 399.06}, {2015, 3, 29, 401.05, 399.07}, {
       2015, 3, 30, 401.07, 399.07}, {2015, 3, 31, 401.08, 399.08}, {
       2015, 4, 1, 401.1, 399.08}, {2015, 4, 2, 401.11, 399.09}, {
       2015, 4, 3, 401.13, 399.1}, {2015, 4, 4, 401.15, 399.1}, {
       2015, 4, 5, 401.16, 399.11}, {2015, 4, 6, 401.18, 399.12}, {
       2015, 4, 7, 401.2, 399.12}, {2015, 4, 8, 401.22, 399.13}, {
       2015, 4, 9, 401.23, 399.13}, {2015, 4, 10, 401.25, 399.14}, {
       2015, 4, 11, 401.27, 399.15}, {2015, 4, 12, 401.29, 399.15}, {
       2015, 4, 13, 401.31, 399.16}, {2015, 4, 14, 401.33, 399.17}, {
       2015, 4, 15, 401.35, 399.17}, {2015, 4, 16, 401.37, 399.18}, {
       2015, 4, 17, 401.39, 399.19}, {2015, 4, 18, 401.41, 399.19}, {
       2015, 4, 19, 401.43, 399.2}, {2015, 4, 20, 401.44, 399.21}, {
       2015, 4, 21, 401.46, 399.21}, {2015, 4, 22, 401.48, 399.22}, {
       2015, 4, 23, 401.5, 399.23}, {2015, 4, 24, 401.51, 399.23}, {
       2015, 4, 25, 401.53, 399.24}, {2015, 4, 26, 401.55, 399.24}, {
       2015, 4, 27, 401.56, 399.25}, {2015, 4, 28, 401.58, 399.26}, {
       2015, 4, 29, 401.59, 399.26}, {2015, 4, 30, 401.6, 399.27}, {
       2015, 5, 1, 401.61, 399.28}, {2015, 5, 2, 401.62, 399.28}, {
       2015, 5, 3, 401.63, 399.29}, {2015, 5, 4, 401.64, 399.3}, {
       2015, 5, 5, 401.65, 399.3}, {2015, 5, 6, 401.66, 399.31}, {
       2015, 5, 7, 401.66, 399.32}, {2015, 5, 8, 401.66, 399.32}, {
       2015, 5, 9, 401.66, 399.33}, {2015, 5, 10, 401.67, 399.34}, {
       2015, 5, 11, 401.66, 399.34}, {2015, 5, 12, 401.66, 399.35}, {
       2015, 5, 13, 401.66, 399.36}, {2015, 5, 14, 401.65, 399.37}, {
       2015, 5, 15, 401.64, 399.37}, {2015, 5, 16, 401.63, 399.38}, {
       2015, 5, 17, 401.62, 399.39}, {2015, 5, 18, 401.6, 399.39}, {
       2015, 5, 19, 401.59, 399.4}, {2015, 5, 20, 401.57, 399.41}, {
       2015, 5, 21, 401.55, 399.41}, {2015, 5, 22, 401.53, 399.42}, {
       2015, 5, 23, 401.5, 399.43}, {2015, 5, 24, 401.48, 399.43}, {
       2015, 5, 25, 401.45, 399.44}, {2015, 5, 26, 401.42, 399.45}, {
       2015, 5, 27, 401.39, 399.45}, {2015, 5, 28, 401.35, 399.46}, {
       2015, 5, 29, 401.32, 399.47}, {2015, 5, 30, 401.28, 399.48}, {
       2015, 5, 31, 401.24, 399.48}, {2015, 6, 1, 401.19, 399.49}, {
       2015, 6, 2, 401.15, 399.5}, {2015, 6, 3, 401.1, 399.5}, {
       2015, 6, 4, 401.05, 399.51}, {2015, 6, 5, 401., 399.52}, {
       2015, 6, 6, 400.95, 399.52}, {2015, 6, 7, 400.9, 399.53}, {
       2015, 6, 8, 400.84, 399.54}, {2015, 6, 9, 400.78, 399.55}, {
       2015, 6, 10, 400.72, 399.55}, {2015, 6, 11, 400.66, 399.56}, {
       2015, 6, 12, 400.6, 399.57}, {2015, 6, 13, 400.53, 399.57}, {
       2015, 6, 14, 400.47, 399.58}, {2015, 6, 15, 400.4, 399.59}, {
       2015, 6, 16, 400.33, 399.6}, {2015, 6, 17, 400.26, 399.6}, {
       2015, 6, 18, 400.19, 399.61}, {2015, 6, 19, 400.12, 399.62}, {
       2015, 6, 20, 400.04, 399.62}, {2015, 6, 21, 399.97, 399.63}, {
       2015, 6, 22, 399.89, 399.64}, {2015, 6, 23, 399.82, 399.65}, {
       2015, 6, 24, 399.74, 399.65}, {2015, 6, 25, 399.66, 399.66}, {
       2015, 6, 26, 399.59, 399.67}, {2015, 6, 27, 399.51, 399.68}, {
       2015, 6, 28, 399.43, 399.68}, {2015, 6, 29, 399.35, 399.69}, {
       2015, 6, 30, 399.27, 399.7}, {2015, 7, 1, 399.19, 399.71}, {
       2015, 7, 2, 399.11, 399.71}, {2015, 7, 3, 399.03, 399.72}, {
       2015, 7, 4, 398.95, 399.73}, {2015, 7, 5, 398.87, 399.74}, {
       2015, 7, 6, 398.79, 399.74}, {2015, 7, 7, 398.72, 399.75}, {
       2015, 7, 8, 398.64, 399.76}, {2015, 7, 9, 398.56, 399.77}, {
       2015, 7, 10, 398.48, 399.77}, {2015, 7, 11, 398.41, 399.78}, {
       2015, 7, 12, 398.33, 399.79}, {2015, 7, 13, 398.26, 399.8}, {
       2015, 7, 14, 398.19, 399.8}, {2015, 7, 15, 398.11, 399.81}, {
       2015, 7, 16, 398.04, 399.82}, {2015, 7, 17, 397.97, 399.83}, {
       2015, 7, 18, 397.9, 399.83}, {2015, 7, 19, 397.84, 399.84}, {
       2015, 7, 20, 397.77, 399.85}, {2015, 7, 21, 397.71, 399.86}, {
       2015, 7, 22, 397.64, 399.86}, {2015, 7, 23, 397.58, 399.87}, {
       2015, 7, 24, 397.52, 399.88}, {2015, 7, 25, 397.46, 399.89}, {
       2015, 7, 26, 397.4, 399.89}, {2015, 7, 27, 397.35, 399.9}, {
       2015, 7, 28, 397.29, 399.91}, {2015, 7, 29, 397.24, 399.92}, {
       2015, 7, 30, 397.19, 399.93}, {2015, 7, 31, 397.14, 399.93}, {
       2015, 8, 1, 397.09, 399.94}, {2015, 8, 2, 397.05, 399.95}, {
       2015, 8, 3, 397.01, 399.96}, {2015, 8, 4, 396.96, 399.97}, {
       2015, 8, 5, 396.92, 399.97}, {2015, 8, 6, 396.88, 399.98}, {
       2015, 8, 7, 396.85, 399.99}, {2015, 8, 8, 396.81, 400.}, {
       2015, 8, 9, 396.78, 400.01}, {2015, 8, 10, 396.75, 400.01}, {
       2015, 8, 11, 396.72, 400.02}, {2015, 8, 12, 396.69, 400.03}, {
       2015, 8, 13, 396.67, 400.04}, {2015, 8, 14, 396.64, 400.05}, {
       2015, 8, 15, 396.62, 400.05}, {2015, 8, 16, 396.6, 400.06}, {
       2015, 8, 17, 396.59, 400.07}, {2015, 8, 18, 396.57, 400.08}, {
       2015, 8, 19, 396.55, 400.09}, {2015, 8, 20, 396.54, 400.09}, {
       2015, 8, 21, 396.53, 400.1}, {2015, 8, 22, 396.52, 400.11}, {
       2015, 8, 23, 396.51, 400.12}, {2015, 8, 24, 396.51, 400.13}, {
       2015, 8, 25, 396.5, 400.13}, {2015, 8, 26, 396.5, 400.14}, {
       2015, 8, 27, 396.5, 400.15}, {2015, 8, 28, 396.5, 400.16}, {
       2015, 8, 29, 396.51, 400.17}, {2015, 8, 30, 396.51, 400.18}, {
       2015, 8, 31, 396.52, 400.18}, {2015, 9, 1, 396.53, 400.19}, {
       2015, 9, 2, 396.54, 400.2}, {2015, 9, 3, 396.55, 400.21}, {
       2015, 9, 4, 396.56, 400.22}, {2015, 9, 5, 396.57, 400.23}, {
       2015, 9, 6, 396.59, 400.23}, {2015, 9, 7, 396.61, 400.24}, {
       2015, 9, 8, 396.63, 400.25}, {2015, 9, 9, 396.65, 400.26}, {
       2015, 9, 10, 396.67, 400.27}, {2015, 9, 11, 396.69, 400.28}, {
       2015, 9, 12, 396.72, 400.28}, {2015, 9, 13, 396.75, 400.29}, {
       2015, 9, 14, 396.77, 400.3}, {2015, 9, 15, 396.8, 400.31}, {
       2015, 9, 16, 396.84, 400.32}, {2015, 9, 17, 396.87, 400.33}, {
       2015, 9, 18, 396.9, 400.34}, {2015, 9, 19, 396.94, 400.34}, {
       2015, 9, 20, 396.98, 400.35}, {2015, 9, 21, 397.01, 400.36}, {
       2015, 9, 22, 397.05, 400.37}, {2015, 9, 23, 397.1, 400.38}, {
       2015, 9, 24, 397.14, 400.39}, {2015, 9, 25, 397.18, 400.4}, {
       2015, 9, 26, 397.23, 400.4}, {2015, 9, 27, 397.28, 400.41}, {
       2015, 9, 28, 397.32, 400.42}, {2015, 9, 29, 397.37, 400.43}, {
       2015, 9, 30, 397.43, 400.44}, {2015, 10, 1, 397.48, 400.45}, {
       2015, 10, 2, 397.53, 400.46}, {2015, 10, 3, 397.59, 400.47}, {
       2015, 10, 4, 397.64, 400.47}, {2015, 10, 5, 397.7, 400.48}, {
       2015, 10, 6, 397.76, 400.49}, {2015, 10, 7, 397.82, 400.5}, {
       2015, 10, 8, 397.88, 400.51}, {2015, 10, 9, 397.94, 400.52}, {
       2015, 10, 10, 398., 400.53}, {2015, 10, 11, 398.07, 400.54}, {
       2015, 10, 12, 398.13, 400.54}, {2015, 10, 13, 398.2, 400.55}, {
       2015, 10, 14, 398.27, 400.56}, {2015, 10, 15, 398.33, 400.57}, {
       2015, 10, 16, 398.4, 400.58}, {2015, 10, 17, 398.47, 400.59}, {
       2015, 10, 18, 398.54, 400.6}, {2015, 10, 19, 398.61, 400.61}, {
       2015, 10, 20, 398.68, 400.62}, {2015, 10, 21, 398.76, 400.62}, {
       2015, 10, 22, 398.83, 400.63}, {2015, 10, 23, 398.9, 400.64}, {
       2015, 10, 24, 398.98, 400.65}, {2015, 10, 25, 399.05, 400.66}, {
       2015, 10, 26, 399.12, 400.67}, {2015, 10, 27, 399.2, 400.68}, {
       2015, 10, 28, 399.27, 400.69}, {2015, 10, 29, 399.35, 400.7}, {
       2015, 10, 30, 399.42, 400.71}, {2015, 10, 31, 399.5, 400.72}, {
       2015, 11, 1, 399.57, 400.72}, {2015, 11, 2, 399.65, 400.73}, {
       2015, 11, 3, 399.73, 400.74}, {2015, 11, 4, 399.8, 400.75}, {
       2015, 11, 5, 399.88, 400.76}, {2015, 11, 6, 399.95, 400.77}, {
       2015, 11, 7, 400.02, 400.78}, {2015, 11, 8, 400.1, 400.79}, {
       2015, 11, 9, 400.17, 400.8}, {2015, 11, 10, 400.24, 400.81}, {
       2015, 11, 11, 400.32, 400.82}, {2015, 11, 12, 400.39, 400.83}, {
       2015, 11, 13, 400.46, 400.83}, {2015, 11, 14, 400.53, 400.84}, {
       2015, 11, 15, 400.6, 400.85}, {2015, 11, 16, 400.67, 400.86}, {
       2015, 11, 17, 400.74, 400.87}, {2015, 11, 18, 400.8, 400.88}, {
       2015, 11, 19, 400.87, 400.89}, {2015, 11, 20, 400.93, 400.9}, {
       2015, 11, 21, 401., 400.91}, {2015, 11, 22, 401.06, 400.92}, {
       2015, 11, 23, 401.12, 400.93}, {2015, 11, 24, 401.18, 400.94}, {
       2015, 11, 25, 401.24, 400.95}, {2015, 11, 26, 401.3, 400.96}, {
       2015, 11, 27, 401.36, 400.97}, {2015, 11, 28, 401.42, 400.98}, {
       2015, 11, 29, 401.47, 400.98}, {2015, 11, 30, 401.52, 400.99}, {
       2015, 12, 1, 401.58, 401.}, {2015, 12, 2, 401.63, 401.01}, {
       2015, 12, 3, 401.68, 401.02}, {2015, 12, 4, 401.73, 401.03}, {
       2015, 12, 5, 401.77, 401.04}, {2015, 12, 6, 401.82, 401.05}, {
       2015, 12, 7, 401.86, 401.06}, {2015, 12, 8, 401.91, 401.07}, {
       2015, 12, 9, 401.95, 401.08}, {2015, 12, 10, 401.99, 401.09}, {
       2015, 12, 11, 402.03, 401.1}, {2015, 12, 12, 402.07, 401.11}, {
       2015, 12, 13, 402.1, 401.12}, {2015, 12, 14, 402.14, 401.13}, {
       2015, 12, 15, 402.18, 401.14}, {2015, 12, 16, 402.21, 401.15}, {
       2015, 12, 17, 402.24, 401.16}, {2015, 12, 18, 402.27, 401.17}, {
       2015, 12, 19, 402.3, 401.18}, {2015, 12, 20, 402.33, 401.19}, {
       2015, 12, 21, 402.36, 401.2}, {2015, 12, 22, 402.38, 401.2}, {
       2015, 12, 23, 402.41, 401.21}, {2015, 12, 24, 402.43, 401.22}, {
       2015, 12, 25, 402.46, 401.23}, {2015, 12, 26, 402.48, 401.24}, {
       2015, 12, 27, 402.5, 401.25}, {2015, 12, 28, 402.52, 401.26}, {
       2015, 12, 29, 402.54, 401.27}, {2015, 12, 30, 402.56, 401.28}, {
       2015, 12, 31, 402.58, 401.29}, {2016, 1, 1, 402.6, 401.3}, {
       2016, 1, 2, 402.61, 401.31}, {2016, 1, 3, 402.63, 401.32}, {
       2016, 1, 4, 402.64, 401.33}, {2016, 1, 5, 402.66, 401.34}, {
       2016, 1, 6, 402.67, 401.35}, {2016, 1, 7, 402.69, 401.36}, {
       2016, 1, 8, 402.7, 401.37}, {2016, 1, 9, 402.71, 401.38}, {
       2016, 1, 10, 402.72, 401.39}, {2016, 1, 11, 402.73, 401.4}, {
       2016, 1, 12, 402.74, 401.41}, {2016, 1, 13, 402.75, 401.42}, {
       2016, 1, 14, 402.76, 401.43}, {2016, 1, 15, 402.77, 401.44}, {
       2016, 1, 16, 402.78, 401.45}, {2016, 1, 17, 402.79, 401.46}, {
       2016, 1, 18, 402.8, 401.47}, {2016, 1, 19, 402.81, 401.48}, {
       2016, 1, 20, 402.81, 401.49}, {2016, 1, 21, 402.82, 401.5}, {
       2016, 1, 22, 402.83, 401.51}, {2016, 1, 23, 402.84, 401.52}, {
       2016, 1, 24, 402.85, 401.53}, {2016, 1, 25, 402.85, 401.54}, {
       2016, 1, 26, 402.86, 401.55}, {2016, 1, 27, 402.87, 401.56}, {
       2016, 1, 28, 402.88, 401.57}, {2016, 1, 29, 402.89, 401.58}, {
       2016, 1, 30, 402.89, 401.59}, {2016, 1, 31, 402.9, 401.6}, {
       2016, 2, 1, 402.91, 401.61}, {2016, 2, 2, 402.92, 401.62}, {
       2016, 2, 3, 402.93, 401.63}, {2016, 2, 4, 402.94, 401.64}, {
       2016, 2, 5, 402.95, 401.65}, {2016, 2, 6, 402.96, 401.66}, {
       2016, 2, 7, 402.97, 401.67}, {2016, 2, 8, 402.98, 401.68}, {
       2016, 2, 9, 402.99, 401.69}, {2016, 2, 10, 403., 401.7}, {
       2016, 2, 11, 403.01, 401.71}, {2016, 2, 12, 403.03, 401.72}, {
       2016, 2, 13, 403.04, 401.72}, {2016, 2, 14, 403.05, 401.73}, {
       2016, 2, 15, 403.07, 401.74}, {2016, 2, 16, 403.08, 401.75}, {
       2016, 2, 17, 403.1, 401.76}, {2016, 2, 18, 403.12, 401.77}, {
       2016, 2, 19, 403.13, 401.78}, {2016, 2, 20, 403.15, 401.79}, {
       2016, 2, 21, 403.17, 401.8}, {2016, 2, 22, 403.19, 401.81}, {
       2016, 2, 23, 403.21, 401.82}, {2016, 2, 24, 403.23, 401.83}, {
       2016, 2, 25, 403.25, 401.84}, {2016, 2, 26, 403.27, 401.85}, {
       2016, 2, 27, 403.29, 401.86}, {2016, 2, 28, 403.31, 401.87}, {
       2016, 2, 29, 403.34, 401.88}, {2016, 3, 1, 403.36, 401.89}, {
       2016, 3, 2, 403.38, 401.9}, {2016, 3, 3, 403.41, 401.91}, {
       2016, 3, 4, 403.43, 401.92}, {2016, 3, 5, 403.46, 401.93}, {
       2016, 3, 6, 403.49, 401.94}, {2016, 3, 7, 403.51, 401.95}, {
       2016, 3, 8, 403.54, 401.96}, {2016, 3, 9, 403.57, 401.97}, {
       2016, 3, 10, 403.6, 401.98}, {2016, 3, 11, 403.63, 401.99}, {
       2016, 3, 12, 403.66, 402.}, {2016, 3, 13, 403.69, 402.01}, {
       2016, 3, 14, 403.72, 402.02}, {2016, 3, 15, 403.75, 402.03}, {
       2016, 3, 16, 403.78, 402.04}, {2016, 3, 17, 403.81, 402.05}, {
       2016, 3, 18, 403.84, 402.06}, {2016, 3, 19, 403.87, 402.07}, {
       2016, 3, 20, 403.91, 402.08}, {2016, 3, 21, 403.94, 402.09}, {
       2016, 3, 22, 403.97, 402.1}, {2016, 3, 23, 404., 402.11}, {
       2016, 3, 24, 404.03, 402.12}, {2016, 3, 25, 404.06, 402.13}, {
       2016, 3, 26, 404.1, 402.14}, {2016, 3, 27, 404.13, 402.15}, {
       2016, 3, 28, 404.16, 402.16}, {2016, 3, 29, 404.19, 402.17}, {
       2016, 3, 30, 404.22, 402.18}, {2016, 3, 31, 404.25, 402.19}, {
       2016, 4, 1, 404.28, 402.2}, {2016, 4, 2, 404.31, 402.21}, {
       2016, 4, 3, 404.34, 402.22}, {2016, 4, 4, 404.37, 402.23}, {
       2016, 4, 5, 404.4, 402.24}, {2016, 4, 6, 404.43, 402.25}, {
       2016, 4, 7, 404.46, 402.26}, {2016, 4, 8, 404.49, 402.27}, {
       2016, 4, 9, 404.52, 402.28}, {2016, 4, 10, 404.54, 402.29}, {
       2016, 4, 11, 404.57, 402.3}, {2016, 4, 12, 404.6, 402.31}, {
       2016, 4, 13, 404.62, 402.32}, {2016, 4, 14, 404.65, 402.33}, {
       2016, 4, 15, 404.67, 402.34}, {2016, 4, 16, 404.7, 402.35}, {
       2016, 4, 17, 404.72, 402.36}, {2016, 4, 18, 404.74, 402.37}, {
       2016, 4, 19, 404.76, 402.38}, {2016, 4, 20, 404.79, 402.39}, {
       2016, 4, 21, 404.81, 402.4}, {2016, 4, 22, 404.83, 402.41}, {
       2016, 4, 23, 404.84, 402.42}, {2016, 4, 24, 404.86, 402.43}, {
       2016, 4, 25, 404.88, 402.44}, {2016, 4, 26, 404.89, 402.45}, {
       2016, 4, 27, 404.91, 402.46}, {2016, 4, 28, 404.92, 402.47}, {
       2016, 4, 29, 404.94, 402.48}, {2016, 4, 30, 404.95, 402.49}, {
       2016, 5, 1, 404.96, 402.5}, {2016, 5, 2, 404.97, 402.51}, {
       2016, 5, 3, 404.98, 402.52}, {2016, 5, 4, 404.99, 402.53}, {
       2016, 5, 5, 404.99, 402.54}, {2016, 5, 6, 405., 402.55}, {
       2016, 5, 7, 405., 402.56}, {2016, 5, 8, 405.01, 402.57}, {
       2016, 5, 9, 405.01, 402.58}, {2016, 5, 10, 405.01, 402.59}, {
       2016, 5, 11, 405.01, 402.6}, {2016, 5, 12, 405., 402.61}, {
       2016, 5, 13, 405., 402.62}, {2016, 5, 14, 404.99, 402.62}, {
       2016, 5, 15, 404.99, 402.63}, {2016, 5, 16, 404.98, 402.64}, {
       2016, 5, 17, 404.97, 402.65}, {2016, 5, 18, 404.96, 402.66}, {
       2016, 5, 19, 404.94, 402.67}, {2016, 5, 20, 404.93, 402.68}, {
       2016, 5, 21, 404.91, 402.69}, {2016, 5, 22, 404.89, 402.7}, {
       2016, 5, 23, 404.87, 402.71}, {2016, 5, 24, 404.85, 402.72}, {
       2016, 5, 25, 404.82, 402.73}, {2016, 5, 26, 404.8, 402.74}, {
       2016, 5, 27, 404.77, 402.75}, {2016, 5, 28, 404.74, 402.76}, {
       2016, 5, 29, 404.71, 402.77}, {2016, 5, 30, 404.68, 402.78}, {
       2016, 5, 31, 404.64, 402.79}, {2016, 6, 1, 404.6, 402.8}, {
       2016, 6, 2, 404.56, 402.81}, {2016, 6, 3, 404.52, 402.82}, {
       2016, 6, 4, 404.48, 402.83}, {2016, 6, 5, 404.44, 402.84}, {
       2016, 6, 6, 404.39, 402.85}, {2016, 6, 7, 404.34, 402.85}, {
       2016, 6, 8, 404.29, 402.86}, {2016, 6, 9, 404.24, 402.87}, {
       2016, 6, 10, 404.18, 402.88}, {2016, 6, 11, 404.13, 402.89}, {
       2016, 6, 12, 404.07, 402.9}, {2016, 6, 13, 404.01, 402.91}, {
       2016, 6, 14, 403.95, 402.92}, {2016, 6, 15, 403.89, 402.93}, {
       2016, 6, 16, 403.83, 402.94}, {2016, 6, 17, 403.76, 402.95}, {
       2016, 6, 18, 403.69, 402.96}, {2016, 6, 19, 403.63, 402.97}, {
       2016, 6, 20, 403.56, 402.98}, {2016, 6, 21, 403.49, 402.99}, {
       2016, 6, 22, 403.41, 403.}, {2016, 6, 23, 403.34, 403.}, {
       2016, 6, 24, 403.27, 403.01}, {2016, 6, 25, 403.19, 403.02}, {
       2016, 6, 26, 403.11, 403.03}, {2016, 6, 27, 403.04, 403.04}, {
       2016, 6, 28, 402.96, 403.05}, {2016, 6, 29, 402.88, 403.06}, {
       2016, 6, 30, 402.8, 403.07}, {2016, 7, 1, 402.72, 403.08}, {
       2016, 7, 2, 402.64, 403.09}, {2016, 7, 3, 402.56, 403.1}, {
       2016, 7, 4, 402.48, 403.11}, {2016, 7, 5, 402.4, 403.11}, {
       2016, 7, 6, 402.32, 403.12}, {2016, 7, 7, 402.23, 403.13}, {
       2016, 7, 8, 402.15, 403.14}, {2016, 7, 9, 402.07, 403.15}, {
       2016, 7, 10, 401.99, 403.16}, {2016, 7, 11, 401.91, 403.17}, {
       2016, 7, 12, 401.83, 403.18}, {2016, 7, 13, 401.75, 403.19}, {
       2016, 7, 14, 401.67, 403.2}, {2016, 7, 15, 401.59, 403.21}, {
       2016, 7, 16, 401.51, 403.21}, {2016, 7, 17, 401.43, 403.22}, {
       2016, 7, 18, 401.35, 403.23}, {2016, 7, 19, 401.27, 403.24}, {
       2016, 7, 20, 401.2, 403.25}, {2016, 7, 21, 401.12, 403.26}, {
       2016, 7, 22, 401.05, 403.27}, {2016, 7, 23, 400.98, 403.28}, {
       2016, 7, 24, 400.91, 403.29}, {2016, 7, 25, 400.84, 403.29}, {
       2016, 7, 26, 400.77, 403.3}, {2016, 7, 27, 400.7, 403.31}, {
       2016, 7, 28, 400.64, 403.32}, {2016, 7, 29, 400.57, 403.33}, {
       2016, 7, 30, 400.51, 403.34}, {2016, 7, 31, 400.45, 403.35}, {
       2016, 8, 1, 400.4, 403.36}, {2016, 8, 2, 400.34, 403.36}, {
       2016, 8, 3, 400.29, 403.37}, {2016, 8, 4, 400.23, 403.38}, {
       2016, 8, 5, 400.19, 403.39}, {2016, 8, 6, 400.14, 403.4}, {
       2016, 8, 7, 400.09, 403.41}, {2016, 8, 8, 400.05, 403.42}, {
       2016, 8, 9, 400.01, 403.42}, {2016, 8, 10, 399.97, 403.43}, {
       2016, 8, 11, 399.94, 403.44}, {2016, 8, 12, 399.91, 403.45}, {
       2016, 8, 13, 399.88, 403.46}, {2016, 8, 14, 399.85, 403.47}, {
       2016, 8, 15, 399.82, 403.48}, {2016, 8, 16, 399.8, 403.48}, {
       2016, 8, 17, 399.78, 403.49}, {2016, 8, 18, 399.77, 403.5}, {
       2016, 8, 19, 399.75, 403.51}, {2016, 8, 20, 399.74, 403.52}, {
       2016, 8, 21, 399.73, 403.53}, {2016, 8, 22, 399.73, 403.54}, {
       2016, 8, 23, 399.73, 403.54}, {2016, 8, 24, 399.73, 403.55}, {
       2016, 8, 25, 399.73, 403.56}, {2016, 8, 26, 399.74, 403.57}, {
       2016, 8, 27, 399.75, 403.58}, {2016, 8, 28, 399.76, 403.59}, {
       2016, 8, 29, 399.78, 403.59}, {2016, 8, 30, 399.79, 403.6}, {
       2016, 8, 31, 399.81, 403.61}, {2016, 9, 1, 399.84, 403.62}, {
       2016, 9, 2, 399.86, 403.63}, {2016, 9, 3, 399.89, 403.64}, {
       2016, 9, 4, 399.92, 403.64}, {2016, 9, 5, 399.96, 403.65}, {
       2016, 9, 6, 400., 403.66}, {2016, 9, 7, 400.03, 403.67}, {
       2016, 9, 8, 400.08, 403.68}, {2016, 9, 9, 400.12, 403.68}, {
       2016, 9, 10, 400.16, 403.69}, {2016, 9, 11, 400.21, 403.7}, {
       2016, 9, 12, 400.26, 403.71}, {2016, 9, 13, 400.31, 403.72}, {
       2016, 9, 14, 400.37, 403.72}, {2016, 9, 15, 400.42, 403.73}, {
       2016, 9, 16, 400.48, 403.74}, {2016, 9, 17, 400.54, 403.75}, {
       2016, 9, 18, 400.6, 403.76}, {2016, 9, 19, 400.66, 403.76}, {
       2016, 9, 20, 400.72, 403.77}, {2016, 9, 21, 400.78, 403.78}, {
       2016, 9, 22, 400.85, 403.79}, {2016, 9, 23, 400.91, 403.8}, {
       2016, 9, 24, 400.98, 403.8}, {2016, 9, 25, 401.05, 403.81}, {
       2016, 9, 26, 401.11, 403.82}, {2016, 9, 27, 401.18, 403.83}, {
       2016, 9, 28, 401.25, 403.83}, {2016, 9, 29, 401.32, 403.84}, {
       2016, 9, 30, 401.38, 403.85}, {2016, 10, 1, 401.45, 403.86}, {
       2016, 10, 2, 401.52, 403.87}, {2016, 10, 3, 401.59, 403.87}, {
       2016, 10, 4, 401.66, 403.88}, {2016, 10, 5, 401.72, 403.89}, {
       2016, 10, 6, 401.79, 403.9}, {2016, 10, 7, 401.86, 403.9}, {
       2016, 10, 8, 401.92, 403.91}, {2016, 10, 9, 401.99, 403.92}, {
       2016, 10, 10, 402.06, 403.93}, {2016, 10, 11, 402.12, 403.93}, {
       2016, 10, 12, 402.18, 403.94}, {2016, 10, 13, 402.25, 403.95}, {
       2016, 10, 14, 402.31, 403.96}, {2016, 10, 15, 402.37, 403.96}, {
       2016, 10, 16, 402.43, 403.97}, {2016, 10, 17, 402.49, 403.98}, {
       2016, 10, 18, 402.54, 403.99}, {2016, 10, 19, 402.6, 403.99}, {
       2016, 10, 20, 402.66, 404.}, {2016, 10, 21, 402.71, 404.01}, {
       2016, 10, 22, 402.77, 404.02}, {2016, 10, 23, 402.82, 404.02}, {
       2016, 10, 24, 402.87, 404.03}, {2016, 10, 25, 402.92, 404.04}, {
       2016, 10, 26, 402.97, 404.05}, {2016, 10, 27, 403.02, 404.05}, {
       2016, 10, 28, 403.07, 404.06}, {2016, 10, 29, 403.12, 404.07}, {
       2016, 10, 30, 403.16, 404.07}, {2016, 10, 31, 403.21, 404.08}, {
       2016, 11, 1, 403.25, 404.09}, {2016, 11, 2, 403.3, 404.1}, {
       2016, 11, 3, 403.34, 404.1}, {2016, 11, 4, 403.38, 404.11}, {
       2016, 11, 5, 403.43, 404.12}, {2016, 11, 6, 403.47, 404.12}, {
       2016, 11, 7, 403.51, 404.13}, {2016, 11, 8, 403.55, 404.14}, {
       2016, 11, 9, 403.59, 404.15}, {2016, 11, 10, 403.63, 404.15}, {
       2016, 11, 11, 403.67, 404.16}, {2016, 11, 12, 403.7, 404.17}, {
       2016, 11, 13, 403.74, 404.17}, {2016, 11, 14, 403.78, 404.18}, {
       2016, 11, 15, 403.82, 404.19}, {2016, 11, 16, 403.86, 404.2}, {
       2016, 11, 17, 403.89, 404.2}, {2016, 11, 18, 403.93, 404.21}, {
       2016, 11, 19, 403.97, 404.22}, {2016, 11, 20, 404.01, 404.22}, {
       2016, 11, 21, 404.04, 404.23}, {2016, 11, 22, 404.08, 404.24}, {
       2016, 11, 23, 404.12, 404.24}, {2016, 11, 24, 404.15, 404.25}, {
       2016, 11, 25, 404.19, 404.26}, {2016, 11, 26, 404.23, 404.26}, {
       2016, 11, 27, 404.27, 404.27}, {2016, 11, 28, 404.3, 404.28}, {
       2016, 11, 29, 404.34, 404.28}, {2016, 11, 30, 404.38, 404.29}, {
       2016, 12, 1, 404.42, 404.3}, {2016, 12, 2, 404.45, 404.3}, {
       2016, 12, 3, 404.49, 404.31}, {2016, 12, 4, 404.53, 404.32}, {
       2016, 12, 5, 404.57, 404.32}, {2016, 12, 6, 404.61, 404.33}, {
       2016, 12, 7, 404.64, 404.34}, {2016, 12, 8, 404.68, 404.34}, {
       2016, 12, 9, 404.72, 404.35}, {2016, 12, 10, 404.76, 404.36}, {
       2016, 12, 11, 404.8, 404.36}, {2016, 12, 12, 404.84, 404.37}, {
       2016, 12, 13, 404.87, 404.38}, {2016, 12, 14, 404.91, 404.38}, {
       2016, 12, 15, 404.95, 404.39}, {2016, 12, 16, 404.99, 404.4}, {
       2016, 12, 17, 405.03, 404.4}, {2016, 12, 18, 405.06, 404.41}, {
       2016, 12, 19, 405.1, 404.42}, {2016, 12, 20, 405.14, 404.42}, {
       2016, 12, 21, 405.18, 404.43}, {2016, 12, 22, 405.22, 404.43}, {
       2016, 12, 23, 405.25, 404.44}, {2016, 12, 24, 405.29, 404.45}, {
       2016, 12, 25, 405.33, 404.45}, {2016, 12, 26, 405.36, 404.46}, {
       2016, 12, 27, 405.4, 404.47}, {2016, 12, 28, 405.43, 404.47}, {
       2016, 12, 29, 405.47, 404.48}, {2016, 12, 30, 405.51, 404.49}, {
       2016, 12, 31, 405.54, 404.49}, {2017, 1, 1, 405.58, 404.5}, {
       2017, 1, 2, 405.61, 404.5}, {2017, 1, 3, 405.64, 404.51}, {
       2017, 1, 4, 405.68, 404.52}, {2017, 1, 5, 405.71, 404.52}, {
       2017, 1, 6, 405.74, 404.53}, {2017, 1, 7, 405.78, 404.53}, {
       2017, 1, 8, 405.81, 404.54}, {2017, 1, 9, 405.84, 404.55}, {
       2017, 1, 10, 405.87, 404.55}, {2017, 1, 11, 405.9, 404.56}, {
       2017, 1, 12, 405.93, 404.57}, {2017, 1, 13, 405.96, 404.57}, {
       2017, 1, 14, 405.99, 404.58}, {2017, 1, 15, 406.02, 404.58}, {
       2017, 1, 16, 406.05, 404.59}, {2017, 1, 17, 406.07, 404.6}, {
       2017, 1, 18, 406.1, 404.6}, {2017, 1, 19, 406.13, 404.61}, {
       2017, 1, 20, 406.15, 404.61}, {2017, 1, 21, 406.18, 404.62}, {
       2017, 1, 22, 406.2, 404.63}, {2017, 1, 23, 406.23, 404.63}, {
       2017, 1, 24, 406.25, 404.64}, {2017, 1, 25, 406.28, 404.64}, {
       2017, 1, 26, 406.3, 404.65}, {2017, 1, 27, 406.32, 404.66}, {
       2017, 1, 28, 406.34, 404.66}, {2017, 1, 29, 406.36, 404.67}, {
       2017, 1, 30, 406.38, 404.67}, {2017, 1, 31, 406.4, 404.68}, {
       2017, 2, 1, 406.42, 404.69}, {2017, 2, 2, 406.44, 404.69}, {
       2017, 2, 3, 406.46, 404.7}, {2017, 2, 4, 406.48, 404.7}, {
       2017, 2, 5, 406.49, 404.71}, {2017, 2, 6, 406.51, 404.71}, {
       2017, 2, 7, 406.52, 404.72}, {2017, 2, 8, 406.54, 404.73}, {
       2017, 2, 9, 406.55, 404.73}, {2017, 2, 10, 406.57, 404.74}, {
       2017, 2, 11, 406.58, 404.74}, {2017, 2, 12, 406.59, 404.75}, {
       2017, 2, 13, 406.6, 404.75}, {2017, 2, 14, 406.62, 404.76}, {
       2017, 2, 15, 406.63, 404.77}, {2017, 2, 16, 406.64, 404.77}, {
       2017, 2, 17, 406.65, 404.78}, {2017, 2, 18, 406.66, 404.78}, {
       2017, 2, 19, 406.66, 404.79}, {2017, 2, 20, 406.67, 404.79}, {
       2017, 2, 21, 406.68, 404.8}, {2017, 2, 22, 406.69, 404.81}, {
       2017, 2, 23, 406.69, 404.81}, {2017, 2, 24, 406.7, 404.82}, {
       2017, 2, 25, 406.71, 404.82}, {2017, 2, 26, 406.71, 404.83}, {
       2017, 2, 27, 406.72, 404.83}, {2017, 2, 28, 406.72, 404.84}, {
       2017, 3, 1, 406.73, 404.84}, {2017, 3, 2, 406.73, 404.85}, {
       2017, 3, 3, 406.73, 404.86}, {2017, 3, 4, 406.74, 404.86}, {
       2017, 3, 5, 406.74, 404.87}, {2017, 3, 6, 406.74, 404.87}, {
       2017, 3, 7, 406.75, 404.88}, {2017, 3, 8, 406.75, 404.88}, {
       2017, 3, 9, 406.75, 404.89}, {2017, 3, 10, 406.76, 404.89}, {
       2017, 3, 11, 406.76, 404.9}, {2017, 3, 12, 406.76, 404.91}, {
       2017, 3, 13, 406.76, 404.91}, {2017, 3, 14, 406.77, 404.92}, {
       2017, 3, 15, 406.77, 404.92}, {2017, 3, 16, 406.77, 404.93}, {
       2017, 3, 17, 406.78, 404.93}, {2017, 3, 18, 406.78, 404.94}, {
       2017, 3, 19, 406.78, 404.94}, {2017, 3, 20, 406.79, 404.95}, {
       2017, 3, 21, 406.79, 404.95}, {2017, 3, 22, 406.8, 404.96}, {
       2017, 3, 23, 406.8, 404.96}, {2017, 3, 24, 406.81, 404.97}, {
       2017, 3, 25, 406.81, 404.98}, {2017, 3, 26, 406.82, 404.98}, {
       2017, 3, 27, 406.82, 404.99}, {2017, 3, 28, 406.83, 404.99}, {
       2017, 3, 29, 406.84, 405.}, {2017, 3, 30, 406.84, 405.}, {
       2017, 3, 31, 406.85, 405.01}, {2017, 4, 1, 406.86, 405.01}, {
       2017, 4, 2, 406.87, 405.02}, {2017, 4, 3, 406.88, 405.02}, {
       2017, 4, 4, 406.89, 405.03}, {2017, 4, 5, 406.9, 405.03}, {
       2017, 4, 6, 406.91, 405.04}, {2017, 4, 7, 406.92, 405.04}, {
       2017, 4, 8, 406.93, 405.05}, {2017, 4, 9, 406.94, 405.06}, {
       2017, 4, 10, 406.95, 405.06}, {2017, 4, 11, 406.96, 405.07}, {
       2017, 4, 12, 406.98, 405.07}, {2017, 4, 13, 406.99, 405.08}, {
       2017, 4, 14, 407., 405.08}, {2017, 4, 15, 407.02, 405.09}, {
       2017, 4, 16, 407.03, 405.09}, {2017, 4, 17, 407.04, 405.1}, {
       2017, 4, 18, 407.06, 405.1}, {2017, 4, 19, 407.07, 405.11}, {
       2017, 4, 20, 407.09, 405.11}, {2017, 4, 21, 407.1, 405.12}, {
       2017, 4, 22, 407.12, 405.12}, {2017, 4, 23, 407.13, 405.13}, {
       2017, 4, 24, 407.14, 405.13}, {2017, 4, 25, 407.16, 405.14}, {
       2017, 4, 26, 407.17, 405.14}, {2017, 4, 27, 407.19, 405.15}, {
       2017, 4, 28, 407.2, 405.15}, {2017, 4, 29, 407.21, 405.16}, {
       2017, 4, 30, 407.22, 405.16}, {2017, 5, 1, 407.24, 405.17}, {
       2017, 5, 2, 407.25, 405.18}, {2017, 5, 3, 407.26, 405.18}, {
       2017, 5, 4, 407.27, 405.19}, {2017, 5, 5, 407.28, 405.19}, {
       2017, 5, 6, 407.29, 405.2}, {2017, 5, 7, 407.29, 405.2}, {
       2017, 5, 8, 407.3, 405.21}, {2017, 5, 9, 407.31, 405.21}, {
       2017, 5, 10, 407.31, 405.22}, {2017, 5, 11, 407.31, 405.22}, {
       2017, 5, 12, 407.31, 405.23}, {2017, 5, 13, 407.32, 405.23}, {
       2017, 5, 14, 407.31, 405.24}, {2017, 5, 15, 407.31, 405.24}, {
       2017, 5, 16, 407.31, 405.25}, {2017, 5, 17, 407.3, 405.25}, {
       2017, 5, 18, 407.3, 405.26}, {2017, 5, 19, 407.29, 405.26}, {
       2017, 5, 20, 407.28, 405.27}, {2017, 5, 21, 407.27, 405.27}, {
       2017, 5, 22, 407.25, 405.28}, {2017, 5, 23, 407.24, 405.28}, {
       2017, 5, 24, 407.22, 405.29}, {2017, 5, 25, 407.2, 405.29}, {
       2017, 5, 26, 407.18, 405.3}, {2017, 5, 27, 407.16, 405.3}, {
       2017, 5, 28, 407.14, 405.31}, {2017, 5, 29, 407.11, 405.31}, {
       2017, 5, 30, 407.08, 405.32}, {2017, 5, 31, 407.05, 405.32}, {
       2017, 6, 1, 407.02, 405.33}, {2017, 6, 2, 406.98, 405.33}, {
       2017, 6, 3, 406.95, 405.34}, {2017, 6, 4, 406.91, 405.34}, {
       2017, 6, 5, 406.87, 405.35}, {2017, 6, 6, 406.82, 405.35}, {
       2017, 6, 7, 406.78, 405.36}, {2017, 6, 8, 406.73, 405.37}, {
       2017, 6, 9, 406.68, 405.37}, {2017, 6, 10, 406.63, 405.38}, {
       2017, 6, 11, 406.58, 405.38}, {2017, 6, 12, 406.53, 405.39}, {
       2017, 6, 13, 406.47, 405.39}, {2017, 6, 14, 406.42, 405.4}, {
       2017, 6, 15, 406.36, 405.4}, {2017, 6, 16, 406.3, 405.41}, {
       2017, 6, 17, 406.23, 405.41}, {2017, 6, 18, 406.17, 405.42}, {
       2017, 6, 19, 406.1, 405.42}, {2017, 6, 20, 406.04, 405.43}, {
       2017, 6, 21, 405.97, 405.43}, {2017, 6, 22, 405.9, 405.44}, {
       2017, 6, 23, 405.83, 405.44}, {2017, 6, 24, 405.76, 405.45}, {
       2017, 6, 25, 405.68, 405.45}, {2017, 6, 26, 405.61, 405.46}, {
       2017, 6, 27, 405.54, 405.46}, {2017, 6, 28, 405.46, 405.47}, {
       2017, 6, 29, 405.38, 405.47}, {2017, 6, 30, 405.31, 405.48}, {
       2017, 7, 1, 405.23, 405.48}, {2017, 7, 2, 405.15, 405.49}, {
       2017, 7, 3, 405.07, 405.49}, {2017, 7, 4, 405., 405.5}, {
       2017, 7, 5, 404.92, 405.5}, {2017, 7, 6, 404.84, 405.51}, {
       2017, 7, 7, 404.76, 405.51}, {2017, 7, 8, 404.68, 405.52}, {
       2017, 7, 9, 404.6, 405.52}, {2017, 7, 10, 404.52, 405.53}, {
       2017, 7, 11, 404.44, 405.53}, {2017, 7, 12, 404.37, 405.54}, {
       2017, 7, 13, 404.29, 405.54}, {2017, 7, 14, 404.21, 405.55}, {
       2017, 7, 15, 404.13, 405.56}, {2017, 7, 16, 404.06, 405.56}, {
       2017, 7, 17, 403.98, 405.57}, {2017, 7, 18, 403.91, 405.57}, {
       2017, 7, 19, 403.83, 405.58}, {2017, 7, 20, 403.76, 405.58}, {
       2017, 7, 21, 403.69, 405.59}, {2017, 7, 22, 403.62, 405.59}, {
       2017, 7, 23, 403.55, 405.6}, {2017, 7, 24, 403.48, 405.6}, {
       2017, 7, 25, 403.41, 405.61}, {2017, 7, 26, 403.35, 405.61}, {
       2017, 7, 27, 403.28, 405.62}, {2017, 7, 28, 403.22, 405.62}, {
       2017, 7, 29, 403.15, 405.63}, {2017, 7, 30, 403.09, 405.63}, {
       2017, 7, 31, 403.03, 405.64}, {2017, 8, 1, 402.98, 405.64}, {
       2017, 8, 2, 402.92, 405.65}, {2017, 8, 3, 402.86, 405.65}, {
       2017, 8, 4, 402.81, 405.66}, {2017, 8, 5, 402.76, 405.66}, {
       2017, 8, 6, 402.71, 405.67}, {2017, 8, 7, 402.66, 405.68}, {
       2017, 8, 8, 402.61, 405.68}, {2017, 8, 9, 402.57, 405.69}, {
       2017, 8, 10, 402.52, 405.69}, {2017, 8, 11, 402.48, 405.7}, {
       2017, 8, 12, 402.44, 405.7}, {2017, 8, 13, 402.4, 405.71}, {
       2017, 8, 14, 402.37, 405.71}, {2017, 8, 15, 402.33, 405.72}, {
       2017, 8, 16, 402.3, 405.72}, {2017, 8, 17, 402.27, 405.73}, {
       2017, 8, 18, 402.24, 405.73}, {2017, 8, 19, 402.21, 405.74}, {
       2017, 8, 20, 402.19, 405.74}, {2017, 8, 21, 402.17, 405.75}, {
       2017, 8, 22, 402.14, 405.75}, {2017, 8, 23, 402.13, 405.76}, {
       2017, 8, 24, 402.11, 405.77}, {2017, 8, 25, 402.09, 405.77}, {
       2017, 8, 26, 402.08, 405.78}, {2017, 8, 27, 402.07, 405.78}, {
       2017, 8, 28, 402.06, 405.79}, {2017, 8, 29, 402.05, 405.79}, {
       2017, 8, 30, 402.05, 405.8}, {2017, 8, 31, 402.05, 405.8}, {
       2017, 9, 1, 402.05, 405.81}, {2017, 9, 2, 402.05, 405.81}, {
       2017, 9, 3, 402.05, 405.82}, {2017, 9, 4, 402.06, 405.82}, {
       2017, 9, 5, 402.07, 405.83}, {2017, 9, 6, 402.08, 405.84}, {
       2017, 9, 7, 402.09, 405.84}, {2017, 9, 8, 402.11, 405.85}, {
       2017, 9, 9, 402.12, 405.85}, {2017, 9, 10, 402.14, 405.86}, {
       2017, 9, 11, 402.16, 405.86}, {2017, 9, 12, 402.19, 405.87}, {
       2017, 9, 13, 402.21, 405.87}, {2017, 9, 14, 402.24, 405.88}, {
       2017, 9, 15, 402.27, 405.88}, {2017, 9, 16, 402.31, 405.89}, {
       2017, 9, 17, 402.34, 405.9}, {2017, 9, 18, 402.38, 405.9}, {
       2017, 9, 19, 402.42, 405.91}, {2017, 9, 20, 402.46, 405.91}, {
       2017, 9, 21, 402.5, 405.92}, {2017, 9, 22, 402.54, 405.92}, {
       2017, 9, 23, 402.59, 405.93}, {2017, 9, 24, 402.64, 405.93}, {
       2017, 9, 25, 402.69, 405.94}, {2017, 9, 26, 402.74, 405.94}, {
       2017, 9, 27, 402.8, 405.95}, {2017, 9, 28, 402.85, 405.96}, {
       2017, 9, 29, 402.91, 405.96}, {2017, 9, 30, 402.97, 405.97}, {
       2017, 10, 1, 403.03, 405.97}, {2017, 10, 2, 403.09, 405.98}, {
       2017, 10, 3, 403.16, 405.98}, {2017, 10, 4, 403.22, 405.99}, {
       2017, 10, 5, 403.29, 405.99}, {2017, 10, 6, 403.35, 406.}, {
       2017, 10, 7, 403.42, 406.01}, {2017, 10, 8, 403.49, 406.01}, {
       2017, 10, 9, 403.56, 406.02}, {2017, 10, 10, 403.63, 406.02}, {
       2017, 10, 11, 403.71, 406.03}, {2017, 10, 12, 403.78, 406.03}, {
       2017, 10, 13, 403.85, 406.04}, {2017, 10, 14, 403.92, 406.05}, {
       2017, 10, 15, 404., 406.05}, {2017, 10, 16, 404.07, 406.06}, {
       2017, 10, 17, 404.15, 406.06}, {2017, 10, 18, 404.22, 406.07}, {
       2017, 10, 19, 404.29, 406.07}, {2017, 10, 20, 404.37, 406.08}, {
       2017, 10, 21, 404.44, 406.08}, {2017, 10, 22, 404.52, 406.09}, {
       2017, 10, 23, 404.59, 406.1}, {2017, 10, 24, 404.66, 406.1}, {
       2017, 10, 25, 404.74, 406.11}, {2017, 10, 26, 404.81, 406.11}, {
       2017, 10, 27, 404.88, 406.12}, {2017, 10, 28, 404.95, 406.12}, {
       2017, 10, 29, 405.02, 406.13}, {2017, 10, 30, 405.09, 406.14}, {
       2017, 10, 31, 405.16, 406.14}, {2017, 11, 1, 405.22, 406.15}, {
       2017, 11, 2, 405.29, 406.15}, {2017, 11, 3, 405.35, 406.16}, {
       2017, 11, 4, 405.42, 406.16}, {2017, 11, 5, 405.48, 406.17}, {
       2017, 11, 6, 405.54, 406.18}, {2017, 11, 7, 405.6, 406.18}, {
       2017, 11, 8, 405.66, 406.19}, {2017, 11, 9, 405.72, 406.19}, {
       2017, 11, 10, 405.77, 406.2}, {2017, 11, 11, 405.83, 406.21}, {
       2017, 11, 12, 405.88, 406.21}, {2017, 11, 13, 405.93, 406.22}, {
       2017, 11, 14, 405.99, 406.22}, {2017, 11, 15, 406.04, 406.23}, {
       2017, 11, 16, 406.09, 406.23}, {2017, 11, 17, 406.13, 406.24}, {
       2017, 11, 18, 406.18, 406.25}, {2017, 11, 19, 406.22, 406.25}, {
       2017, 11, 20, 406.27, 406.26}, {2017, 11, 21, 406.31, 406.26}, {
       2017, 11, 22, 406.35, 406.27}, {2017, 11, 23, 406.4, 406.28}, {
       2017, 11, 24, 406.44, 406.28}, {2017, 11, 25, 406.47, 406.29}, {
       2017, 11, 26, 406.51, 406.29}, {2017, 11, 27, 406.55, 406.3}, {
       2017, 11, 28, 406.59, 406.31}, {2017, 11, 29, 406.62, 406.31}, {
       2017, 11, 30, 406.66, 406.32}, {2017, 12, 1, 406.69, 406.32}, {
       2017, 12, 2, 406.72, 406.33}, {2017, 12, 3, 406.76, 406.34}, {
       2017, 12, 4, 406.79, 406.34}, {2017, 12, 5, 406.82, 406.35}, {
       2017, 12, 6, 406.85, 406.35}, {2017, 12, 7, 406.88, 406.36}, {
       2017, 12, 8, 406.91, 406.37}, {2017, 12, 9, 406.94, 406.37}, {
       2017, 12, 10, 406.97, 406.38}, {2017, 12, 11, 407., 406.38}, {
       2017, 12, 12, 407.03, 406.39}, {2017, 12, 13, 407.06, 406.4}, {
       2017, 12, 14, 407.09, 406.4}, {2017, 12, 15, 407.12, 406.41}, {
       2017, 12, 16, 407.14, 406.41}, {2017, 12, 17, 407.17, 406.42}, {
       2017, 12, 18, 407.2, 406.43}, {2017, 12, 19, 407.23, 406.43}, {
       2017, 12, 20, 407.25, 406.44}, {2017, 12, 21, 407.28, 406.44}, {
       2017, 12, 22, 407.31, 406.45}, {2017, 12, 23, 407.33, 406.46}, {
       2017, 12, 24, 407.36, 406.46}, {2017, 12, 25, 407.39, 406.47}, {
       2017, 12, 26, 407.41, 406.47}, {2017, 12, 27, 407.44, 406.48}, {
       2017, 12, 28, 407.47, 406.49}, {2017, 12, 29, 407.49, 406.49}, {
       2017, 12, 30, 407.52, 406.5}, {2017, 12, 31, 407.54, 406.5}, {
       2018, 1, 1, 407.57, 406.51}, {2018, 1, 2, 407.59, 406.52}, {
       2018, 1, 3, 407.61, 406.52}, {2018, 1, 4, 407.64, 406.53}, {
       2018, 1, 5, 407.66, 406.54}, {2018, 1, 6, 407.69, 406.54}, {
       2018, 1, 7, 407.71, 406.55}, {2018, 1, 8, 407.73, 406.55}, {
       2018, 1, 9, 407.75, 406.56}, {2018, 1, 10, 407.77, 406.57}, {
       2018, 1, 11, 407.8, 406.57}, {2018, 1, 12, 407.82, 406.58}, {
       2018, 1, 13, 407.84, 406.59}, {2018, 1, 14, 407.86, 406.59}, {
       2018, 1, 15, 407.87, 406.6}, {2018, 1, 16, 407.89, 406.6}, {
       2018, 1, 17, 407.91, 406.61}, {2018, 1, 18, 407.93, 406.62}, {
       2018, 1, 19, 407.95, 406.62}, {2018, 1, 20, 407.96, 406.63}, {
       2018, 1, 21, 407.98, 406.63}, {2018, 1, 22, 408., 406.64}, {
       2018, 1, 23, 408.01, 406.65}, {2018, 1, 24, 408.03, 406.65}, {
       2018, 1, 25, 408.04, 406.66}, {2018, 1, 26, 408.05, 406.67}, {
       2018, 1, 27, 408.07, 406.67}, {2018, 1, 28, 408.08, 406.68}, {
       2018, 1, 29, 408.09, 406.69}, {2018, 1, 30, 408.11, 406.69}, {
       2018, 1, 31, 408.12, 406.7}, {2018, 2, 1, 408.13, 406.7}, {
       2018, 2, 2, 408.14, 406.71}, {2018, 2, 3, 408.15, 406.72}, {
       2018, 2, 4, 408.16, 406.72}, {2018, 2, 5, 408.18, 406.73}, {
       2018, 2, 6, 408.19, 406.74}, {2018, 2, 7, 408.2, 406.74}, {
       2018, 2, 8, 408.21, 406.75}, {2018, 2, 9, 408.22, 406.75}, {
       2018, 2, 10, 408.23, 406.76}, {2018, 2, 11, 408.24, 406.77}, {
       2018, 2, 12, 408.25, 406.77}, {2018, 2, 13, 408.26, 406.78}, {
       2018, 2, 14, 408.27, 406.79}, {2018, 2, 15, 408.28, 406.79}, {
       2018, 2, 16, 408.29, 406.8}, {2018, 2, 17, 408.31, 406.81}, {
       2018, 2, 18, 408.32, 406.81}, {2018, 2, 19, 408.33, 406.82}, {
       2018, 2, 20, 408.34, 406.82}, {2018, 2, 21, 408.35, 406.83}, {
       2018, 2, 22, 408.37, 406.84}, {2018, 2, 23, 408.38, 406.84}, {
       2018, 2, 24, 408.39, 406.85}, {2018, 2, 25, 408.41, 406.86}, {
       2018, 2, 26, 408.42, 406.86}, {2018, 2, 27, 408.44, 406.87}, {
       2018, 2, 28, 408.45, 406.88}, {2018, 3, 1, 408.47, 406.88}, {
       2018, 3, 2, 408.48, 406.89}, {2018, 3, 3, 408.5, 406.9}, {
       2018, 3, 4, 408.51, 406.9}, {2018, 3, 5, 408.53, 406.91}, {
       2018, 3, 6, 408.55, 406.91}, {2018, 3, 7, 408.57, 406.92}, {
       2018, 3, 8, 408.58, 406.93}, {2018, 3, 9, 408.6, 406.93}, {
       2018, 3, 10, 408.62, 406.94}, {2018, 3, 11, 408.64, 406.95}, {
       2018, 3, 12, 408.66, 406.95}, {2018, 3, 13, 408.68, 406.96}, {
       2018, 3, 14, 408.7, 406.97}, {2018, 3, 15, 408.72, 406.97}, {
       2018, 3, 16, 408.74, 406.98}, {2018, 3, 17, 408.76, 406.99}, {
       2018, 3, 18, 408.78, 406.99}, {2018, 3, 19, 408.8, 407.}, {
       2018, 3, 20, 408.82, 407.01}, {2018, 3, 21, 408.84, 407.01}, {
       2018, 3, 22, 408.86, 407.02}, {2018, 3, 23, 408.88, 407.03}, {
       2018, 3, 24, 408.9, 407.03}, {2018, 3, 25, 408.92, 407.04}, {
       2018, 3, 26, 408.94, 407.04}, {2018, 3, 27, 408.96, 407.05}, {
       2018, 3, 28, 408.98, 407.06}, {2018, 3, 29, 409., 407.06}, {
       2018, 3, 30, 409.02, 407.07}, {2018, 3, 31, 409.04, 407.08}, {
       2018, 4, 1, 409.06, 407.08}, {2018, 4, 2, 409.08, 407.09}, {
       2018, 4, 3, 409.1, 407.1}, {2018, 4, 4, 409.11, 407.1}, {
       2018, 4, 5, 409.13, 407.11}, {2018, 4, 6, 409.15, 407.12}, {
       2018, 4, 7, 409.17, 407.12}, {2018, 4, 8, 409.19, 407.13}, {
       2018, 4, 9, 409.21, 407.14}, {2018, 4, 10, 409.22, 407.14}, {
       2018, 4, 11, 409.24, 407.15}, {2018, 4, 12, 409.26, 407.16}, {
       2018, 4, 13, 409.27, 407.16}, {2018, 4, 14, 409.29, 407.17}, {
       2018, 4, 15, 409.31, 407.18}, {2018, 4, 16, 409.32, 407.18}, {
       2018, 4, 17, 409.34, 407.19}, {2018, 4, 18, 409.35, 407.2}, {
       2018, 4, 19, 409.37, 407.2}, {2018, 4, 20, 409.38, 407.21}, {
       2018, 4, 21, 409.4, 407.22}, {2018, 4, 22, 409.41, 407.22}, {
       2018, 4, 23, 409.42, 407.23}, {2018, 4, 24, 409.44, 407.24}, {
       2018, 4, 25, 409.45, 407.24}, {2018, 4, 26, 409.46, 407.25}, {
       2018, 4, 27, 409.47, 407.26}, {2018, 4, 28, 409.49, 407.26}, {
       2018, 4, 29, 409.5, 407.27}, {2018, 4, 30, 409.51, 407.28}, {
       2018, 5, 1, 409.52, 407.28}, {2018, 5, 2, 409.53, 407.29}, {
       2018, 5, 3, 409.54, 407.3}, {2018, 5, 4, 409.55, 407.3}, {
       2018, 5, 5, 409.55, 407.31}, {2018, 5, 6, 409.56, 407.32}, {
       2018, 5, 7, 409.57, 407.32}, {2018, 5, 8, 409.57, 407.33}, {
       2018, 5, 9, 409.58, 407.34}, {2018, 5, 10, 409.58, 407.34}, {
       2018, 5, 11, 409.59, 407.35}, {2018, 5, 12, 409.59, 407.36}, {
       2018, 5, 13, 409.59, 407.36}, {2018, 5, 14, 409.59, 407.37}, {
       2018, 5, 15, 409.59, 407.38}, {2018, 5, 16, 409.59, 407.38}, {
       2018, 5, 17, 409.58, 407.39}, {2018, 5, 18, 409.58, 407.4}, {
       2018, 5, 19, 409.57, 407.4}, {2018, 5, 20, 409.57, 407.41}, {
       2018, 5, 21, 409.56, 407.42}, {2018, 5, 22, 409.55, 407.42}, {
       2018, 5, 23, 409.54, 407.43}, {2018, 5, 24, 409.53, 407.44}, {
       2018, 5, 25, 409.51, 407.44}, {2018, 5, 26, 409.5, 407.45}, {
       2018, 5, 27, 409.48, 407.46}, {2018, 5, 28, 409.46, 407.46}, {
       2018, 5, 29, 409.44, 407.47}, {2018, 5, 30, 409.42, 407.48}, {
       2018, 5, 31, 409.39, 407.48}, {2018, 6, 1, 409.37, 407.49}, {
       2018, 6, 2, 409.34, 407.5}, {2018, 6, 3, 409.31, 407.5}, {
       2018, 6, 4, 409.28, 407.51}, {2018, 6, 5, 409.24, 407.52}, {
       2018, 6, 6, 409.21, 407.52}, {2018, 6, 7, 409.17, 407.53}, {
       2018, 6, 8, 409.13, 407.54}, {2018, 6, 9, 409.09, 407.54}, {
       2018, 6, 10, 409.04, 407.55}, {2018, 6, 11, 409., 407.56}, {
       2018, 6, 12, 408.95, 407.56}, {2018, 6, 13, 408.9, 407.57}, {
       2018, 6, 14, 408.85, 407.58}, {2018, 6, 15, 408.79, 407.58}, {
       2018, 6, 16, 408.74, 407.59}, {2018, 6, 17, 408.68, 407.6}, {
       2018, 6, 18, 408.62, 407.6}, {2018, 6, 19, 408.56, 407.61}, {
       2018, 6, 20, 408.5, 407.62}, {2018, 6, 21, 408.43, 407.62}, {
       2018, 6, 22, 408.37, 407.63}, {2018, 6, 23, 408.3, 407.64}, {
       2018, 6, 24, 408.23, 407.64}, {2018, 6, 25, 408.16, 407.65}, {
       2018, 6, 26, 408.09, 407.66}, {2018, 6, 27, 408.01, 407.66}, {
       2018, 6, 28, 407.94, 407.67}, {2018, 6, 29, 407.86, 407.68}, {
       2018, 6, 30, 407.79, 407.68}, {2018, 7, 1, 407.71, 407.69}, {
       2018, 7, 2, 407.63, 407.7}, {2018, 7, 3, 407.55, 407.7}, {
       2018, 7, 4, 407.47, 407.71}, {2018, 7, 5, 407.39, 407.72}, {
       2018, 7, 6, 407.31, 407.72}, {2018, 7, 7, 407.22, 407.73}, {
       2018, 7, 8, 407.14, 407.74}, {2018, 7, 9, 407.06, 407.74}, {
       2018, 7, 10, 406.98, 407.75}, {2018, 7, 11, 406.89, 407.76}, {
       2018, 7, 12, 406.81, 407.76}, {2018, 7, 13, 406.73, 407.77}, {
       2018, 7, 14, 406.64, 407.78}, {2018, 7, 15, 406.56, 407.78}, {
       2018, 7, 16, 406.48, 407.79}, {2018, 7, 17, 406.4, 407.8}, {
       2018, 7, 18, 406.32, 407.81}, {2018, 7, 19, 406.24, 407.81}, {
       2018, 7, 20, 406.16, 407.82}, {2018, 7, 21, 406.08, 407.83}, {
       2018, 7, 22, 406., 407.83}, {2018, 7, 23, 405.93, 407.84}, {
       2018, 7, 24, 405.85, 407.85}, {2018, 7, 25, 405.78, 407.85}, {
       2018, 7, 26, 405.7, 407.86}, {2018, 7, 27, 405.63, 407.87}, {
       2018, 7, 28, 405.56, 407.87}, {2018, 7, 29, 405.49, 407.88}, {
       2018, 7, 30, 405.43, 407.89}, {2018, 7, 31, 405.36, 407.89}, {
       2018, 8, 1, 405.3, 407.9}, {2018, 8, 2, 405.24, 407.91}, {
       2018, 8, 3, 405.18, 407.91}, {2018, 8, 4, 405.12, 407.92}, {
       2018, 8, 5, 405.06, 407.93}, {2018, 8, 6, 405.01, 407.93}, {
       2018, 8, 7, 404.95, 407.94}, {2018, 8, 8, 404.9, 407.95}, {
       2018, 8, 9, 404.86, 407.95}, {2018, 8, 10, 404.81, 407.96}, {
       2018, 8, 11, 404.77, 407.97}, {2018, 8, 12, 404.72, 407.97}, {
       2018, 8, 13, 404.68, 407.98}, {2018, 8, 14, 404.65, 407.99}, {
       2018, 8, 15, 404.61, 407.99}, {2018, 8, 16, 404.58, 408.}, {
       2018, 8, 17, 404.55, 408.01}, {2018, 8, 18, 404.52, 408.02}, {
       2018, 8, 19, 404.49, 408.02}, {2018, 8, 20, 404.47, 408.03}, {
       2018, 8, 21, 404.45, 408.04}, {2018, 8, 22, 404.43, 408.04}, {
       2018, 8, 23, 404.41, 408.05}, {2018, 8, 24, 404.4, 408.06}, {
       2018, 8, 25, 404.39, 408.06}, {2018, 8, 26, 404.38, 408.07}, {
       2018, 8, 27, 404.37, 408.08}, {2018, 8, 28, 404.37, 408.08}, {
       2018, 8, 29, 404.36, 408.09}, {2018, 8, 30, 404.36, 408.1}, {
       2018, 8, 31, 404.37, 408.1}, {2018, 9, 1, 404.37, 408.11}, {
       2018, 9, 2, 404.38, 408.12}, {2018, 9, 3, 404.39, 408.12}, {
       2018, 9, 4, 404.4, 408.13}, {2018, 9, 5, 404.41, 408.14}, {
       2018, 9, 6, 404.43, 408.14}, {2018, 9, 7, 404.44, 408.15}, {
       2018, 9, 8, 404.46, 408.16}, {2018, 9, 9, 404.49, 408.17}, {
       2018, 9, 10, 404.51, 408.17}, {2018, 9, 11, 404.54, 408.18}, {
       2018, 9, 12, 404.56, 408.19}, {2018, 9, 13, 404.59, 408.19}, {
       2018, 9, 14, 404.63, 408.2}, {2018, 9, 15, 404.66, 408.21}, {
       2018, 9, 16, 404.7, 408.21}, {2018, 9, 17, 404.73, 408.22}, {
       2018, 9, 18, 404.77, 408.23}, {2018, 9, 19, 404.81, 408.23}, {
       2018, 9, 20, 404.86, 408.24}, {2018, 9, 21, 404.9, 408.25}, {
       2018, 9, 22, 404.95, 408.25}, {2018, 9, 23, 405., 408.26}, {
       2018, 9, 24, 405.04, 408.27}, {2018, 9, 25, 405.09, 408.27}, {
       2018, 9, 26, 405.15, 408.28}, {2018, 9, 27, 405.2, 408.29}, {
       2018, 9, 28, 405.25, 408.3}, {2018, 9, 29, 405.31, 408.3}, {
       2018, 9, 30, 405.37, 408.31}, {2018, 10, 1, 405.42, 408.32}, {
       2018, 10, 2, 405.48, 408.32}, {2018, 10, 3, 405.54, 408.33}, {
       2018, 10, 4, 405.61, 408.34}, {2018, 10, 5, 405.67, 408.34}, {
       2018, 10, 6, 405.73, 408.35}, {2018, 10, 7, 405.79, 408.36}, {
       2018, 10, 8, 405.86, 408.36}, {2018, 10, 9, 405.92, 408.37}, {
       2018, 10, 10, 405.99, 408.38}, {2018, 10, 11, 406.06, 408.38}, {
       2018, 10, 12, 406.12, 408.39}, {2018, 10, 13, 406.19, 408.4}, {
       2018, 10, 14, 406.26, 408.41}, {2018, 10, 15, 406.33, 408.41}, {
       2018, 10, 16, 406.39, 408.42}, {2018, 10, 17, 406.46, 408.43}, {
       2018, 10, 18, 406.53, 408.43}, {2018, 10, 19, 406.6, 408.44}, {
       2018, 10, 20, 406.67, 408.45}, {2018, 10, 21, 406.74, 408.45}, {
       2018, 10, 22, 406.81, 408.46}, {2018, 10, 23, 406.88, 408.47}, {
       2018, 10, 24, 406.95, 408.47}, {2018, 10, 25, 407.02, 408.48}, {
       2018, 10, 26, 407.08, 408.49}, {2018, 10, 27, 407.15, 408.5}, {
       2018, 10, 28, 407.22, 408.5}, {2018, 10, 29, 407.29, 408.51}, {
       2018, 10, 30, 407.36, 408.52}, {2018, 10, 31, 407.42, 408.52}, {
       2018, 11, 1, 407.49, 408.53}, {2018, 11, 2, 407.56, 408.54}, {
       2018, 11, 3, 407.62, 408.54}, {2018, 11, 4, 407.69, 408.55}, {
       2018, 11, 5, 407.75, 408.56}, {2018, 11, 6, 407.82, 408.56}, {
       2018, 11, 7, 407.88, 408.57}, {2018, 11, 8, 407.94, 408.58}, {
       2018, 11, 9, 408., 408.59}, {2018, 11, 10, 408.06, 408.59}, {
       2018, 11, 11, 408.12, 408.6}, {2018, 11, 12, 408.18, 408.61}, {
       2018, 11, 13, 408.24, 408.61}, {2018, 11, 14, 408.3, 408.62}, {
       2018, 11, 15, 408.36, 408.63}, {2018, 11, 16, 408.41, 408.63}, {
       2018, 11, 17, 408.47, 408.64}, {2018, 11, 18, 408.52, 408.65}, {
       2018, 11, 19, 408.57, 408.65}, {2018, 11, 20, 408.63, 408.66}, {
       2018, 11, 21, 408.68, 408.67}, {2018, 11, 22, 408.73, 408.68}, {
       2018, 11, 23, 408.78, 408.68}, {2018, 11, 24, 408.83, 408.69}, {
       2018, 11, 25, 408.87, 408.7}, {2018, 11, 26, 408.92, 408.7}, {
       2018, 11, 27, 408.97, 408.71}, {2018, 11, 28, 409.01, 408.72}, {
       2018, 11, 29, 409.05, 408.72}, {2018, 11, 30, 409.1, 408.73}, {
       2018, 12, 1, 409.14, 408.74}, {2018, 12, 2, 409.18, 408.75}, {
       2018, 12, 3, 409.22, 408.75}, {2018, 12, 4, 409.26, 408.76}, {
       2018, 12, 5, 409.29, 408.77}, {2018, 12, 6, 409.33, 408.77}, {
       2018, 12, 7, 409.37, 408.78}, {2018, 12, 8, 409.4, 408.79}, {
       2018, 12, 9, 409.44, 408.79}, {2018, 12, 10, 409.47, 408.8}, {
       2018, 12, 11, 409.5, 408.81}, {2018, 12, 12, 409.54, 408.82}, {
       2018, 12, 13, 409.57, 408.82}, {2018, 12, 14, 409.6, 408.83}, {
       2018, 12, 15, 409.63, 408.84}, {2018, 12, 16, 409.66, 408.84}, {
       2018, 12, 17, 409.69, 408.85}, {2018, 12, 18, 409.72, 408.86}, {
       2018, 12, 19, 409.75, 408.87}, {2018, 12, 20, 409.77, 408.87}, {
       2018, 12, 21, 409.8, 408.88}, {2018, 12, 22, 409.83, 408.89}, {
       2018, 12, 23, 409.85, 408.89}, {2018, 12, 24, 409.88, 408.9}, {
       2018, 12, 25, 409.9, 408.91}, {2018, 12, 26, 409.93, 408.91}, {
       2018, 12, 27, 409.95, 408.92}, {2018, 12, 28, 409.98, 408.93}, {
       2018, 12, 29, 410., 408.94}, {2018, 12, 30, 410.02, 408.94}, {
       2018, 12, 31, 410.05, 408.95}, {2019, 1, 1, 410.07, 408.96}, {
       2019, 1, 2, 410.09, 408.96}, {2019, 1, 3, 410.12, 408.97}, {
       2019, 1, 4, 410.14, 408.98}, {2019, 1, 5, 410.16, 408.99}, {
       2019, 1, 6, 410.18, 408.99}, {2019, 1, 7, 410.2, 409.}, {
       2019, 1, 8, 410.23, 409.01}, {2019, 1, 9, 410.25, 409.01}, {
       2019, 1, 10, 410.27, 409.02}, {2019, 1, 11, 410.29, 409.03}, {
       2019, 1, 12, 410.31, 409.04}, {2019, 1, 13, 410.33, 409.04}, {
       2019, 1, 14, 410.35, 409.05}, {2019, 1, 15, 410.37, 409.06}, {
       2019, 1, 16, 410.39, 409.06}, {2019, 1, 17, 410.42, 409.07}, {
       2019, 1, 18, 410.44, 409.08}, {2019, 1, 19, 410.46, 409.09}, {
       2019, 1, 20, 410.48, 409.09}, {2019, 1, 21, 410.5, 409.1}, {
       2019, 1, 22, 410.52, 409.11}, {2019, 1, 23, 410.53, 409.11}, {
       2019, 1, 24, 410.55, 409.12}, {2019, 1, 25, 410.57, 409.13}, {
       2019, 1, 26, 410.59, 409.14}, {2019, 1, 27, 410.61, 409.14}, {
       2019, 1, 28, 410.63, 409.15}, {2019, 1, 29, 410.65, 409.16}, {
       2019, 1, 30, 410.67, 409.16}, {2019, 1, 31, 410.68, 409.17}, {
       2019, 2, 1, 410.7, 409.18}, {2019, 2, 2, 410.72, 409.19}, {
       2019, 2, 3, 410.73, 409.19}, {2019, 2, 4, 410.75, 409.2}, {
       2019, 2, 5, 410.77, 409.21}, {2019, 2, 6, 410.78, 409.21}, {
       2019, 2, 7, 410.8, 409.22}, {2019, 2, 8, 410.81, 409.23}, {
       2019, 2, 9, 410.83, 409.24}, {2019, 2, 10, 410.84, 409.24}, {
       2019, 2, 11, 410.86, 409.25}, {2019, 2, 12, 410.87, 409.26}, {
       2019, 2, 13, 410.88, 409.26}, {2019, 2, 14, 410.9, 409.27}, {
       2019, 2, 15, 410.91, 409.28}, {2019, 2, 16, 410.92, 409.29}, {
       2019, 2, 17, 410.93, 409.29}, {2019, 2, 18, 410.95, 409.3}, {
       2019, 2, 19, 410.96, 409.31}, {2019, 2, 20, 410.97, 409.32}, {
       2019, 2, 21, 410.98, 409.32}, {2019, 2, 22, 410.99, 409.33}, {
       2019, 2, 23, 411., 409.34}, {2019, 2, 24, 411.01, 409.34}, {
       2019, 2, 25, 411.02, 409.35}, {2019, 2, 26, 411.03, 409.36}, {
       2019, 2, 27, 411.04, 409.37}, {2019, 2, 28, 411.05, 409.37}, {
       2019, 3, 1, 411.06, 409.38}, {2019, 3, 2, 411.07, 409.39}, {
       2019, 3, 3, 411.07, 409.4}, {2019, 3, 4, 411.08, 409.4}, {
       2019, 3, 5, 411.09, 409.41}, {2019, 3, 6, 411.1, 409.42}, {
       2019, 3, 7, 411.11, 409.42}, {2019, 3, 8, 411.12, 409.43}, {
       2019, 3, 9, 411.13, 409.44}, {2019, 3, 10, 411.13, 409.45}, {
       2019, 3, 11, 411.14, 409.45}, {2019, 3, 12, 411.15, 409.46}, {
       2019, 3, 13, 411.16, 409.47}, {2019, 3, 14, 411.17, 409.48}, {
       2019, 3, 15, 411.18, 409.48}, {2019, 3, 16, 411.19, 409.49}, {
       2019, 3, 17, 411.2, 409.5}, {2019, 3, 18, 411.21, 409.5}, {
       2019, 3, 19, 411.22, 409.51}, {2019, 3, 20, 411.23, 409.52}, {
       2019, 3, 21, 411.24, 409.53}, {2019, 3, 22, 411.26, 409.53}, {
       2019, 3, 23, 411.27, 409.54}, {2019, 3, 24, 411.28, 409.55}, {
       2019, 3, 25, 411.29, 409.56}, {2019, 3, 26, 411.31, 409.56}, {
       2019, 3, 27, 411.32, 409.57}, {2019, 3, 28, 411.33, 409.58}, {
       2019, 3, 29, 411.35, 409.59}, {2019, 3, 30, 411.36, 409.59}, {
       2019, 3, 31, 411.38, 409.6}, {2019, 4, 1, 411.39, 409.61}, {
       2019, 4, 2, 411.41, 409.62}, {2019, 4, 3, 411.43, 409.62}, {
       2019, 4, 4, 411.44, 409.63}, {2019, 4, 5, 411.46, 409.64}, {
       2019, 4, 6, 411.48, 409.64}, {2019, 4, 7, 411.5, 409.65}, {
       2019, 4, 8, 411.52, 409.66}, {2019, 4, 9, 411.53, 409.67}, {
       2019, 4, 10, 411.55, 409.67}, {2019, 4, 11, 411.57, 409.68}, {
       2019, 4, 12, 411.59, 409.69}, {2019, 4, 13, 411.61, 409.7}, {
       2019, 4, 14, 411.63, 409.7}, {2019, 4, 15, 411.65, 409.71}, {
       2019, 4, 16, 411.67, 409.72}, {2019, 4, 17, 411.69, 409.73}, {
       2019, 4, 18, 411.72, 409.73}, {2019, 4, 19, 411.74, 409.74}, {
       2019, 4, 20, 411.76, 409.75}, {2019, 4, 21, 411.78, 409.76}, {
       2019, 4, 22, 411.8, 409.76}, {2019, 4, 23, 411.82, 409.77}, {
       2019, 4, 24, 411.84, 409.78}, {2019, 4, 25, 411.86, 409.79}, {
       2019, 4, 26, 411.88, 409.79}, {2019, 4, 27, 411.9, 409.8}, {
       2019, 4, 28, 411.91, 409.81}, {2019, 4, 29, 411.93, 409.82}, {
       2019, 4, 30, 411.95, 409.82}, {2019, 5, 1, 411.96, 409.83}, {
       2019, 5, 2, 411.98, 409.84}, {2019, 5, 3, 412., 409.85}, {
       2019, 5, 4, 412.01, 409.85}, {2019, 5, 5, 412.02, 409.86}, {
       2019, 5, 6, 412.03, 409.87}, {2019, 5, 7, 412.05, 409.87}, {
       2019, 5, 8, 412.06, 409.88}, {2019, 5, 9, 412.06, 409.89}, {
       2019, 5, 10, 412.07, 409.9}, {2019, 5, 11, 412.08, 409.9}, {
       2019, 5, 12, 412.08, 409.91}, {2019, 5, 13, 412.08, 409.92}, {
       2019, 5, 14, 412.09, 409.93}, {2019, 5, 15, 412.09, 409.93}, {
       2019, 5, 16, 412.08, 409.94}, {2019, 5, 17, 412.08, 409.95}, {
       2019, 5, 18, 412.08, 409.96}, {2019, 5, 19, 412.07, 409.96}, {
       2019, 5, 20, 412.06, 409.97}, {2019, 5, 21, 412.05, 409.98}, {
       2019, 5, 22, 412.04, 409.99}, {2019, 5, 23, 412.02, 409.99}, {
       2019, 5, 24, 412., 410.}, {2019, 5, 25, 411.98, 410.01}, {
       2019, 5, 26, 411.96, 410.02}, {2019, 5, 27, 411.94, 410.02}, {
       2019, 5, 28, 411.91, 410.03}, {2019, 5, 29, 411.89, 410.04}, {
       2019, 5, 30, 411.86, 410.05}, {2019, 5, 31, 411.82, 410.05}, {
       2019, 6, 1, 411.79, 410.06}, {2019, 6, 2, 411.75, 410.07}, {
       2019, 6, 3, 411.71, 410.08}, {2019, 6, 4, 411.67, 410.08}, {
       2019, 6, 5, 411.63, 410.09}, {2019, 6, 6, 411.58, 410.1}, {
       2019, 6, 7, 411.54, 410.11}, {2019, 6, 8, 411.49, 410.11}, {
       2019, 6, 9, 411.43, 410.12}, {2019, 6, 10, 411.38, 410.13}, {
       2019, 6, 11, 411.32, 410.14}, {2019, 6, 12, 411.26, 410.14}, {
       2019, 6, 13, 411.2, 410.15}, {2019, 6, 14, 411.14, 410.16}, {
       2019, 6, 15, 411.08, 410.17}, {2019, 6, 16, 411.01, 410.17}, {
       2019, 6, 17, 410.94, 410.18}, {2019, 6, 18, 410.87, 410.19}, {
       2019, 6, 19, 410.8, 410.2}, {2019, 6, 20, 410.73, 410.21}, {
       2019, 6, 21, 410.65, 410.21}, {2019, 6, 22, 410.58, 410.22}, {
       2019, 6, 23, 410.5, 410.23}, {2019, 6, 24, 410.42, 410.24}, {
       2019, 6, 25, 410.34, 410.24}, {2019, 6, 26, 410.26, 410.25}, {
       2019, 6, 27, 410.18, 410.26}, {2019, 6, 28, 410.1, 410.27}, {
       2019, 6, 29, 410.02, 410.27}, {2019, 6, 30, 409.93, 410.28}, {
       2019, 7, 1, 409.85, 410.29}, {2019, 7, 2, 409.77, 410.3}, {
       2019, 7, 3, 409.68, 410.3}, {2019, 7, 4, 409.6, 410.31}, {
       2019, 7, 5, 409.51, 410.32}, {2019, 7, 6, 409.43, 410.33}, {
       2019, 7, 7, 409.34, 410.33}, {2019, 7, 8, 409.26, 410.34}, {
       2019, 7, 9, 409.18, 410.35}, {2019, 7, 10, 409.09, 410.36}, {
       2019, 7, 11, 409.01, 410.36}, {2019, 7, 12, 408.93, 410.37}, {
       2019, 7, 13, 408.85, 410.38}, {2019, 7, 14, 408.77, 410.39}, {
       2019, 7, 15, 408.69, 410.39}, {2019, 7, 16, 408.62, 410.4}, {
       2019, 7, 17, 408.54, 410.41}, {2019, 7, 18, 408.46, 410.42}, {
       2019, 7, 19, 408.39, 410.42}, {2019, 7, 20, 408.32, 410.43}, {
       2019, 7, 21, 408.25, 410.44}, {2019, 7, 22, 408.18, 410.45}, {
       2019, 7, 23, 408.12, 410.45}, {2019, 7, 24, 408.05, 410.46}, {
       2019, 7, 25, 407.99, 410.47}, {2019, 7, 26, 407.93, 410.48}, {
       2019, 7, 27, 407.87, 410.48}, {2019, 7, 28, 407.81, 410.49}, {
       2019, 7, 29, 407.76, 410.5}, {2019, 7, 30, 407.71, 410.51}, {
       2019, 7, 31, 407.66, 410.51}, {2019, 8, 1, 407.61, 410.52}, {
       2019, 8, 2, 407.57, 410.53}, {2019, 8, 3, 407.53, 410.54}, {
       2019, 8, 4, 407.49, 410.54}, {2019, 8, 5, 407.45, 410.55}, {
       2019, 8, 6, 407.41, 410.56}, {2019, 8, 7, 407.38, 410.57}, {
       2019, 8, 8, 407.35, 410.57}, {2019, 8, 9, 407.32, 410.58}, {
       2019, 8, 10, 407.3, 410.59}, {2019, 8, 11, 407.27, 410.6}, {
       2019, 8, 12, 407.25, 410.6}, {2019, 8, 13, 407.24, 410.61}, {
       2019, 8, 14, 407.22, 410.62}, {2019, 8, 15, 407.21, 410.63}, {
       2019, 8, 16, 407.2, 410.63}, {2019, 8, 17, 407.19, 410.64}, {
       2019, 8, 18, 407.18, 410.65}, {2019, 8, 19, 407.18, 410.66}, {
       2019, 8, 20, 407.18, 410.66}, {2019, 8, 21, 407.18, 410.67}, {
       2019, 8, 22, 407.18, 410.68}, {2019, 8, 23, 407.18, 410.69}, {
       2019, 8, 24, 407.19, 410.69}, {2019, 8, 25, 407.2, 410.7}, {
       2019, 8, 26, 407.21, 410.71}, {2019, 8, 27, 407.22, 410.72}, {
       2019, 8, 28, 407.24, 410.72}, {2019, 8, 29, 407.25, 410.73}, {
       2019, 8, 30, 407.27, 410.74}, {2019, 8, 31, 407.29, 410.75}, {
       2019, 9, 1, 407.31, 410.75}, {2019, 9, 2, 407.34, 410.76}, {
       2019, 9, 3, 407.36, 410.77}, {2019, 9, 4, 407.39, 410.78}, {
       2019, 9, 5, 407.42, 410.78}, {2019, 9, 6, 407.45, 410.79}, {
       2019, 9, 7, 407.48, 410.8}, {2019, 9, 8, 407.51, 410.81}, {
       2019, 9, 9, 407.54, 410.81}, {2019, 9, 10, 407.58, 410.82}, {
       2019, 9, 11, 407.62, 410.83}, {2019, 9, 12, 407.65, 410.84}, {
       2019, 9, 13, 407.69, 410.84}, {2019, 9, 14, 407.73, 410.85}, {
       2019, 9, 15, 407.77, 410.86}, {2019, 9, 16, 407.81, 410.87}, {
       2019, 9, 17, 407.86, 410.87}, {2019, 9, 18, 407.9, 410.88}, {
       2019, 9, 19, 407.95, 410.89}, {2019, 9, 20, 407.99, 410.9}, {
       2019, 9, 21, 408.04, 410.9}, {2019, 9, 22, 408.09, 410.91}, {
       2019, 9, 23, 408.13, 410.92}, {2019, 9, 24, 408.18, 410.93}, {
       2019, 9, 25, 408.23, 410.93}, {2019, 9, 26, 408.28, 410.94}, {
       2019, 9, 27, 408.33, 410.95}, {2019, 9, 28, 408.38, 410.95}, {
       2019, 9, 29, 408.44, 410.96}, {2019, 9, 30, 408.49, 410.97}, {
       2019, 10, 1, 408.54, 410.98}, {2019, 10, 2, 408.6, 410.98}, {
       2019, 10, 3, 408.65, 410.99}, {2019, 10, 4, 408.7, 411.}, {
       2019, 10, 5, 408.76, 411.01}, {2019, 10, 6, 408.81, 411.01}, {
       2019, 10, 7, 408.87, 411.02}, {2019, 10, 8, 408.93, 411.03}, {
       2019, 10, 9, 408.98, 411.04}, {2019, 10, 10, 409.04, 411.04}, {
       2019, 10, 11, 409.1, 411.05}, {2019, 10, 12, 409.15, 411.06}, {
       2019, 10, 13, 409.21, 411.06}, {2019, 10, 14, 409.27, 411.07}, {
       2019, 10, 15, 409.32, 411.08}, {2019, 10, 16, 409.38, 411.09}, {
       2019, 10, 17, 409.44, 411.09}, {2019, 10, 18, 409.49, 411.1}, {
       2019, 10, 19, 409.55, 411.11}, {2019, 10, 20, 409.61, 411.12}, {
       2019, 10, 21, 409.67, 411.12}, {2019, 10, 22, 409.72, 411.13}, {
       2019, 10, 23, 409.78, 411.14}, {2019, 10, 24, 409.84, 411.15}, {
       2019, 10, 25, 409.89, 411.15}, {2019, 10, 26, 409.95, 411.16}, {
       2019, 10, 27, 410., 411.17}, {2019, 10, 28, 410.06, 411.17}, {
       2019, 10, 29, 410.11, 411.18}, {2019, 10, 30, 410.17, 411.19}, {
       2019, 10, 31, 410.22, 411.2}, {2019, 11, 1, 410.27, 411.2}, {
       2019, 11, 2, 410.33, 411.21}, {2019, 11, 3, 410.38, 411.22}, {
       2019, 11, 4, 410.43, 411.22}, {2019, 11, 5, 410.48, 411.23}, {
       2019, 11, 6, 410.53, 411.24}, {2019, 11, 7, 410.58, 411.25}, {
       2019, 11, 8, 410.63, 411.25}, {2019, 11, 9, 410.68, 411.26}, {
       2019, 11, 10, 410.73, 411.27}, {2019, 11, 11, 410.78, 411.28}, {
       2019, 11, 12, 410.83, 411.28}, {2019, 11, 13, 410.88, 411.29}, {
       2019, 11, 14, 410.92, 411.3}, {2019, 11, 15, 410.97, 411.3}, {
       2019, 11, 16, 411.01, 411.31}, {2019, 11, 17, 411.06, 411.32}, {
       2019, 11, 18, 411.1, 411.33}, {2019, 11, 19, 411.15, 411.33}, {
       2019, 11, 20, 411.19, 411.34}, {2019, 11, 21, 411.23, 411.35}, {
       2019, 11, 22, 411.27, 411.35}, {2019, 11, 23, 411.31, 411.36}, {
       2019, 11, 24, 411.36, 411.37}, {2019, 11, 25, 411.4, 411.38}, {
       2019, 11, 26, 411.44, 411.38}, {2019, 11, 27, 411.48, 411.39}, {
       2019, 11, 28, 411.52, 411.4}, {2019, 11, 29, 411.55, 411.4}, {
       2019, 11, 30, 411.59, 411.41}, {2019, 12, 1, 411.63, 411.42}, {
       2019, 12, 2, 411.67, 411.42}, {2019, 12, 3, 411.71, 411.43}, {
       2019, 12, 4, 411.75, 411.44}, {2019, 12, 5, 411.78, 411.45}, {
       2019, 12, 6, 411.82, 411.45}, {2019, 12, 7, 411.86, 411.46}, {
       2019, 12, 8, 411.89, 411.47}, {2019, 12, 9, 411.93, 411.47}, {
       2019, 12, 10, 411.97, 411.48}, {2019, 12, 11, 412., 411.49}, {
       2019, 12, 12, 412.04, 411.5}, {2019, 12, 13, 412.08, 411.5}, {
       2019, 12, 14, 412.11, 411.51}, {2019, 12, 15, 412.15, 411.52}, {
       2019, 12, 16, 412.19, 411.52}, {2019, 12, 17, 412.22, 411.53}, {
       2019, 12, 18, 412.26, 411.54}, {2019, 12, 19, 412.3, 411.54}, {
       2019, 12, 20, 412.33, 411.55}, {2019, 12, 21, 412.37, 411.56}, {
       2019, 12, 22, 412.41, 411.56}, {2019, 12, 23, 412.44, 411.57}, {
       2019, 12, 24, 412.48, 411.58}, {2019, 12, 25, 412.52, 411.59}, {
       2019, 12, 26, 412.55, 411.59}, {2019, 12, 27, 412.59, 411.6}, {
       2019, 12, 28, 412.63, 411.61}, {2019, 12, 29, 412.66, 411.61}, {
       2019, 12, 30, 412.7, 411.62}, {2019, 12, 31, 412.74, 411.63}, {
       2020, 1, 1, 412.77, 411.63}, {2020, 1, 2, 412.81, 411.64}, {
       2020, 1, 3, 412.84, 411.65}, {2020, 1, 4, 412.88, 411.65}, {
       2020, 1, 5, 412.91, 411.66}, {2020, 1, 6, 412.95, 411.67}, {
       2020, 1, 7, 412.98, 411.67}, {2020, 1, 8, 413.01, 411.68}, {
       2020, 1, 9, 413.05, 411.69}, {2020, 1, 10, 413.08, 411.69}, {
       2020, 1, 11, 413.11, 411.7}, {2020, 1, 12, 413.14, 411.71}, {
       2020, 1, 13, 413.17, 411.72}, {2020, 1, 14, 413.2, 411.72}, {
       2020, 1, 15, 413.23, 411.73}, {2020, 1, 16, 413.26, 411.74}, {
       2020, 1, 17, 413.29, 411.74}, {2020, 1, 18, 413.32, 411.75}, {
       2020, 1, 19, 413.34, 411.76}, {2020, 1, 20, 413.37, 411.76}, {
       2020, 1, 21, 413.39, 411.77}, {2020, 1, 22, 413.42, 411.78}, {
       2020, 1, 23, 413.44, 411.78}, {2020, 1, 24, 413.46, 411.79}, {
       2020, 1, 25, 413.48, 411.8}, {2020, 1, 26, 413.5, 411.8}, {
       2020, 1, 27, 413.52, 411.81}, {2020, 1, 28, 413.54, 411.82}, {
       2020, 1, 29, 413.56, 411.82}, {2020, 1, 30, 413.57, 411.83}, {
       2020, 1, 31, 413.59, 411.84}, {2020, 2, 1, 413.6, 411.84}, {
       2020, 2, 2, 413.62, 411.85}, {2020, 2, 3, 413.63, 411.86}, {
       2020, 2, 4, 413.64, 411.86}, {2020, 2, 5, 413.65, 411.87}, {
       2020, 2, 6, 413.66, 411.88}, {2020, 2, 7, 413.67, 411.88}, {
       2020, 2, 8, 413.68, 411.89}, {2020, 2, 9, 413.69, 411.89}, {
       2020, 2, 10, 413.7, 411.9}, {2020, 2, 11, 413.7, 411.91}, {
       2020, 2, 12, 413.71, 411.91}, {2020, 2, 13, 413.71, 411.92}, {
       2020, 2, 14, 413.72, 411.93}, {2020, 2, 15, 413.72, 411.93}, {
       2020, 2, 16, 413.73, 411.94}, {2020, 2, 17, 413.73, 411.95}, {
       2020, 2, 18, 413.74, 411.95}, {2020, 2, 19, 413.74, 411.96}, {
       2020, 2, 20, 413.74, 411.97}, {2020, 2, 21, 413.75, 411.97}, {
       2020, 2, 22, 413.75, 411.98}, {2020, 2, 23, 413.75, 411.99}, {
       2020, 2, 24, 413.76, 411.99}, {2020, 2, 25, 413.76, 412.}, {
       2020, 2, 26, 413.76, 412.01}, {2020, 2, 27, 413.77, 412.01}, {
       2020, 2, 28, 413.77, 412.02}, {2020, 2, 29, 413.78, 412.02}, {
       2020, 3, 1, 413.78, 412.03}, {2020, 3, 2, 413.79, 412.04}, {
       2020, 3, 3, 413.79, 412.04}, {2020, 3, 4, 413.8, 412.05}, {
       2020, 3, 5, 413.8, 412.06}, {2020, 3, 6, 413.81, 412.06}, {
       2020, 3, 7, 413.81, 412.07}, {2020, 3, 8, 413.82, 412.08}, {
       2020, 3, 9, 413.83, 412.08}, {2020, 3, 10, 413.84, 412.09}, {
       2020, 3, 11, 413.84, 412.1}, {2020, 3, 12, 413.85, 412.1}, {
       2020, 3, 13, 413.86, 412.11}, {2020, 3, 14, 413.87, 412.11}, {
       2020, 3, 15, 413.88, 412.12}, {2020, 3, 16, 413.89, 412.13}, {
       2020, 3, 17, 413.91, 412.13}, {2020, 3, 18, 413.92, 412.14}, {
       2020, 3, 19, 413.93, 412.15}, {2020, 3, 20, 413.94, 412.15}, {
       2020, 3, 21, 413.96, 412.16}, {2020, 3, 22, 413.97, 412.16}, {
       2020, 3, 23, 413.99, 412.17}, {2020, 3, 24, 414., 412.18}, {
       2020, 3, 25, 414.01, 412.18}, {2020, 3, 26, 414.03, 412.19}, {
       2020, 3, 27, 414.04, 412.2}, {2020, 3, 28, 414.06, 412.2}, {
       2020, 3, 29, 414.08, 412.21}, {2020, 3, 30, 414.09, 412.21}, {
       2020, 3, 31, 414.11, 412.22}, {2020, 4, 1, 414.13, 412.23}, {
       2020, 4, 2, 414.14, 412.23}, {2020, 4, 3, 414.16, 412.24}, {
       2020, 4, 4, 414.17, 412.25}, {2020, 4, 5, 414.19, 412.25}, {
       2020, 4, 6, 414.21, 412.26}, {2020, 4, 7, 414.22, 412.26}, {
       2020, 4, 8, 414.24, 412.27}, {2020, 4, 9, 414.26, 412.28}, {
       2020, 4, 10, 414.27, 412.28}, {2020, 4, 11, 414.29, 412.29}, {
       2020, 4, 12, 414.3, 412.29}, {2020, 4, 13, 414.32, 412.3}, {
       2020, 4, 14, 414.33, 412.31}, {2020, 4, 15, 414.35, 412.31}, {
       2020, 4, 16, 414.36, 412.32}, {2020, 4, 17, 414.37, 412.33}, {
       2020, 4, 18, 414.39, 412.33}, {2020, 4, 19, 414.4, 412.34}, {
       2020, 4, 20, 414.41, 412.34}, {2020, 4, 21, 414.42, 412.35}, {
       2020, 4, 22, 414.44, 412.36}, {2020, 4, 23, 414.45, 412.36}, {
       2020, 4, 24, 414.46, 412.37}, {2020, 4, 25, 414.47, 412.37}, {
       2020, 4, 26, 414.47, 412.38}, {2020, 4, 27, 414.48, 412.39}, {
       2020, 4, 28, 414.49, 412.39}, {2020, 4, 29, 414.5, 412.4}, {
       2020, 4, 30, 414.5, 412.4}, {2020, 5, 1, 414.51, 412.41}, {
       2020, 5, 2, 414.51, 412.42}, {2020, 5, 3, 414.52, 412.42}, {
       2020, 5, 4, 414.52, 412.43}, {2020, 5, 5, 414.52, 412.43}, {
       2020, 5, 6, 414.52, 412.44}, {2020, 5, 7, 414.53, 412.45}, {
       2020, 5, 8, 414.53, 412.45}, {2020, 5, 9, 414.52, 412.46}, {
       2020, 5, 10, 414.52, 412.46}, {2020, 5, 11, 414.52, 412.47}, {
       2020, 5, 12, 414.51, 412.48}, {2020, 5, 13, 414.51, 412.48}, {
       2020, 5, 14, 414.5, 412.49}, {2020, 5, 15, 414.5, 412.49}, {
       2020, 5, 16, 414.49, 412.5}, {2020, 5, 17, 414.48, 412.51}, {
       2020, 5, 18, 414.47, 412.51}, {2020, 5, 19, 414.46, 412.52}, {
       2020, 5, 20, 414.44, 412.52}, {2020, 5, 21, 414.43, 412.53}, {
       2020, 5, 22, 414.41, 412.54}, {2020, 5, 23, 414.39, 412.54}, {
       2020, 5, 24, 414.38, 412.55}, {2020, 5, 25, 414.36, 412.55}, {
       2020, 5, 26, 414.33, 412.56}, {2020, 5, 27, 414.31, 412.57}, {
       2020, 5, 28, 414.29, 412.57}, {2020, 5, 29, 414.26, 412.58}, {
       2020, 5, 30, 414.23, 412.58}, {2020, 5, 31, 414.2, 412.59}, {
       2020, 6, 1, 414.17, 412.59}, {2020, 6, 2, 414.14, 412.6}, {
       2020, 6, 3, 414.11, 412.61}, {2020, 6, 4, 414.07, 412.61}, {
       2020, 6, 5, 414.03, 412.62}, {2020, 6, 6, 413.99, 412.62}, {
       2020, 6, 7, 413.95, 412.63}, {2020, 6, 8, 413.91, 412.64}, {
       2020, 6, 9, 413.86, 412.64}, {2020, 6, 10, 413.81, 412.65}, {
       2020, 6, 11, 413.77, 412.65}, {2020, 6, 12, 413.71, 412.66}, {
       2020, 6, 13, 413.66, 412.66}, {2020, 6, 14, 413.61, 412.67}, {
       2020, 6, 15, 413.55, 412.68}, {2020, 6, 16, 413.49, 412.68}, {
       2020, 6, 17, 413.43, 412.69}, {2020, 6, 18, 413.37, 412.69}, {
       2020, 6, 19, 413.31, 412.7}, {2020, 6, 20, 413.24, 412.71}, {
       2020, 6, 21, 413.17, 412.71}, {2020, 6, 22, 413.1, 412.72}, {
       2020, 6, 23, 413.03, 412.72}, {2020, 6, 24, 412.96, 412.73}, {
       2020, 6, 25, 412.89, 412.73}, {2020, 6, 26, 412.81, 412.74}, {
       2020, 6, 27, 412.74, 412.75}, {2020, 6, 28, 412.66, 412.75}, {
       2020, 6, 29, 412.58, 412.76}, {2020, 6, 30, 412.5, 412.76}, {
       2020, 7, 1, 412.42, 412.77}, {2020, 7, 2, 412.33, 412.78}, {
       2020, 7, 3, 412.25, 412.78}, {2020, 7, 4, 412.16, 412.79}, {
       2020, 7, 5, 412.08, 412.79}, {2020, 7, 6, 411.99, 412.8}, {
       2020, 7, 7, 411.91, 412.8}, {2020, 7, 8, 411.82, 412.81}, {
       2020, 7, 9, 411.73, 412.82}, {2020, 7, 10, 411.64, 412.82}, {
       2020, 7, 11, 411.56, 412.83}, {2020, 7, 12, 411.47, 412.83}, {
       2020, 7, 13, 411.38, 412.84}, {2020, 7, 14, 411.29, 412.84}, {
       2020, 7, 15, 411.2, 412.85}, {2020, 7, 16, 411.12, 412.86}, {
       2020, 7, 17, 411.03, 412.86}, {2020, 7, 18, 410.94, 412.87}, {
       2020, 7, 19, 410.86, 412.87}, {2020, 7, 20, 410.77, 412.88}, {
       2020, 7, 21, 410.69, 412.88}, {2020, 7, 22, 410.61, 412.89}, {
       2020, 7, 23, 410.52, 412.9}, {2020, 7, 24, 410.44, 412.9}, {
       2020, 7, 25, 410.36, 412.91}, {2020, 7, 26, 410.29, 412.91}, {
       2020, 7, 27, 410.21, 412.92}, {2020, 7, 28, 410.14, 412.92}, {
       2020, 7, 29, 410.07, 412.93}, {2020, 7, 30, 410., 412.94}, {
       2020, 7, 31, 409.93, 412.94}, {2020, 8, 1, 409.86, 412.95}, {
       2020, 8, 2, 409.8, 412.95}, {2020, 8, 3, 409.74, 412.96}, {
       2020, 8, 4, 409.68, 412.96}, {2020, 8, 5, 409.62, 412.97}, {
       2020, 8, 6, 409.57, 412.98}, {2020, 8, 7, 409.52, 412.98}, {
       2020, 8, 8, 409.47, 412.99}, {2020, 8, 9, 409.42, 412.99}, {
       2020, 8, 10, 409.38, 413.}, {2020, 8, 11, 409.34, 413.}, {
       2020, 8, 12, 409.3, 413.01}, {2020, 8, 13, 409.27, 413.02}, {
       2020, 8, 14, 409.24, 413.02}, {2020, 8, 15, 409.21, 413.03}, {
       2020, 8, 16, 409.18, 413.03}, {2020, 8, 17, 409.16, 413.04}, {
       2020, 8, 18, 409.14, 413.04}, {2020, 8, 19, 409.13, 413.05}, {
       2020, 8, 20, 409.11, 413.06}, {2020, 8, 21, 409.11, 413.06}, {
       2020, 8, 22, 409.1, 413.07}, {2020, 8, 23, 409.1, 413.07}, {
       2020, 8, 24, 409.1, 413.08}, {2020, 8, 25, 409.1, 413.08}, {
       2020, 8, 26, 409.1, 413.09}, {2020, 8, 27, 409.11, 413.1}, {
       2020, 8, 28, 409.12, 413.1}, {2020, 8, 29, 409.14, 413.11}, {
       2020, 8, 30, 409.16, 413.11}, {2020, 8, 31, 409.18, 413.12}, {
       2020, 9, 1, 409.2, 413.12}, {2020, 9, 2, 409.23, 413.13}, {
       2020, 9, 3, 409.26, 413.14}, {2020, 9, 4, 409.29, 413.14}, {
       2020, 9, 5, 409.32, 413.15}, {2020, 9, 6, 409.36, 413.15}, {
       2020, 9, 7, 409.4, 413.16}, {2020, 9, 8, 409.44, 413.16}, {
       2020, 9, 9, 409.48, 413.17}, {2020, 9, 10, 409.53, 413.18}, {
       2020, 9, 11, 409.58, 413.18}, {2020, 9, 12, 409.63, 413.19}, {
       2020, 9, 13, 409.68, 413.19}, {2020, 9, 14, 409.74, 413.2}, {
       2020, 9, 15, 409.8, 413.2}, {2020, 9, 16, 409.85, 413.21}, {
       2020, 9, 17, 409.91, 413.22}, {2020, 9, 18, 409.98, 413.22}, {
       2020, 9, 19, 410.04, 413.23}, {2020, 9, 20, 410.1, 413.23}, {
       2020, 9, 21, 410.17, 413.24}, {2020, 9, 22, 410.24, 413.24}, {
       2020, 9, 23, 410.31, 413.25}, {2020, 9, 24, 410.38, 413.26}, {
       2020, 9, 25, 410.45, 413.26}, {2020, 9, 26, 410.52, 413.27}, {
       2020, 9, 27, 410.59, 413.27}, {2020, 9, 28, 410.67, 413.28}, {
       2020, 9, 29, 410.74, 413.28}, {2020, 9, 30, 410.81, 413.29}, {
       2020, 10, 1, 410.89, 413.3}, {2020, 10, 2, 410.96, 413.3}, {
       2020, 10, 3, 411.04, 413.31}, {2020, 10, 4, 411.12, 413.31}, {
       2020, 10, 5, 411.19, 413.32}, {2020, 10, 6, 411.27, 413.32}, {
       2020, 10, 7, 411.35, 413.33}, {2020, 10, 8, 411.42, 413.34}, {
       2020, 10, 9, 411.5, 413.34}, {2020, 10, 10, 411.57, 413.35}, {
       2020, 10, 11, 411.65, 413.35}, {2020, 10, 12, 411.72, 413.36}, {
       2020, 10, 13, 411.8, 413.36}, {2020, 10, 14, 411.87, 413.37}, {
       2020, 10, 15, 411.95, 413.38}, {2020, 10, 16, 412.02, 413.38}, {
       2020, 10, 17, 412.09, 413.39}, {2020, 10, 18, 412.16, 413.39}, {
       2020, 10, 19, 412.24, 413.4}, {2020, 10, 20, 412.31, 413.41}, {
       2020, 10, 21, 412.38, 413.41}, {2020, 10, 22, 412.44, 413.42}, {
       2020, 10, 23, 412.51, 413.42}, {2020, 10, 24, 412.58, 413.43}, {
       2020, 10, 25, 412.64, 413.43}, {2020, 10, 26, 412.71, 413.44}, {
       2020, 10, 27, 412.77, 413.45}, {2020, 10, 28, 412.83, 413.45}, {
       2020, 10, 29, 412.89, 413.46}, {2020, 10, 30, 412.95, 413.46}, {
       2020, 10, 31, 413.01, 413.47}, {2020, 11, 1, 413.07, 413.48}, {
       2020, 11, 2, 413.12, 413.48}, {2020, 11, 3, 413.18, 413.49}, {
       2020, 11, 4, 413.23, 413.49}, {2020, 11, 5, 413.29, 413.5}, {
       2020, 11, 6, 413.34, 413.5}, {2020, 11, 7, 413.39, 413.51}, {
       2020, 11, 8, 413.44, 413.52}, {2020, 11, 9, 413.48, 413.52}, {
       2020, 11, 10, 413.53, 413.53}, {2020, 11, 11, 413.57, 413.53}, {
       2020, 11, 12, 413.62, 413.54}, {2020, 11, 13, 413.66, 413.55}, {
       2020, 11, 14, 413.7, 413.55}, {2020, 11, 15, 413.74, 413.56}, {
       2020, 11, 16, 413.78, 413.56}, {2020, 11, 17, 413.81, 413.57}, {
       2020, 11, 18, 413.85, 413.57}, {2020, 11, 19, 413.89, 413.58}, {
       2020, 11, 20, 413.92, 413.59}, {2020, 11, 21, 413.95, 413.59}, {
       2020, 11, 22, 413.98, 413.6}, {2020, 11, 23, 414.01, 413.6}, {
       2020, 11, 24, 414.04, 413.61}, {2020, 11, 25, 414.07, 413.62}, {
       2020, 11, 26, 414.1, 413.62}, {2020, 11, 27, 414.12, 413.63}, {
       2020, 11, 28, 414.15, 413.63}, {2020, 11, 29, 414.17, 413.64}, {
       2020, 11, 30, 414.2, 413.65}, {2020, 12, 1, 414.22, 413.65}, {
       2020, 12, 2, 414.24, 413.66}, {2020, 12, 3, 414.26, 413.66}, {
       2020, 12, 4, 414.29, 413.67}, {2020, 12, 5, 414.31, 413.68}, {
       2020, 12, 6, 414.32, 413.68}, {2020, 12, 7, 414.34, 413.69}, {
       2020, 12, 8, 414.36, 413.69}, {2020, 12, 9, 414.38, 413.7}, {
       2020, 12, 10, 414.4, 413.71}, {2020, 12, 11, 414.41, 413.71}, {
       2020, 12, 12, 414.43, 413.72}, {2020, 12, 13, 414.45, 413.72}, {
       2020, 12, 14, 414.46, 413.73}, {2020, 12, 15, 414.48, 413.74}, {
       2020, 12, 16, 414.49, 413.74}, {2020, 12, 17, 414.51, 413.75}, {
       2020, 12, 18, 414.52, 413.75}, {2020, 12, 19, 414.54, 413.76}, {
       2020, 12, 20, 414.55, 413.77}, {2020, 12, 21, 414.57, 413.77}, {
       2020, 12, 22, 414.58, 413.78}, {2020, 12, 23, 414.6, 413.78}, {
       2020, 12, 24, 414.61, 413.79}, {2020, 12, 25, 414.63, 413.8}, {
       2020, 12, 26, 414.64, 413.8}, {2020, 12, 27, 414.66, 413.81}, {
       2020, 12, 28, 414.67, 413.81}, {2020, 12, 29, 414.69, 413.82}, {
       2020, 12, 30, 414.7, 413.83}, {2020, 12, 31, 414.72, 413.83}, {
       2021, 1, 1, 414.73, 413.84}, {2021, 1, 2, 414.75, 413.85}, {
       2021, 1, 3, 414.77, 413.85}, {2021, 1, 4, 414.79, 413.86}, {
       2021, 1, 5, 414.8, 413.86}, {2021, 1, 6, 414.82, 413.87}, {
       2021, 1, 7, 414.84, 413.88}, {2021, 1, 8, 414.86, 413.88}, {
       2021, 1, 9, 414.88, 413.89}, {2021, 1, 10, 414.9, 413.89}, {
       2021, 1, 11, 414.92, 413.9}, {2021, 1, 12, 414.94, 413.91}, {
       2021, 1, 13, 414.96, 413.91}, {2021, 1, 14, 414.98, 413.92}, {
       2021, 1, 15, 415., 413.93}, {2021, 1, 16, 415.02, 413.93}, {
       2021, 1, 17, 415.04, 413.94}, {2021, 1, 18, 415.07, 413.94}, {
       2021, 1, 19, 415.09, 413.95}, {2021, 1, 20, 415.11, 413.96}, {
       2021, 1, 21, 415.13, 413.96}, {2021, 1, 22, 415.16, 413.97}, {
       2021, 1, 23, 415.18, 413.97}, {2021, 1, 24, 415.21, 413.98}, {
       2021, 1, 25, 415.23, 413.99}, {2021, 1, 26, 415.25, 413.99}, {
       2021, 1, 27, 415.28, 414.}, {2021, 1, 28, 415.3, 414.01}, {
       2021, 1, 29, 415.33, 414.01}, {2021, 1, 30, 415.35, 414.02}, {
       2021, 1, 31, 415.38, 414.02}, {2021, 2, 1, 415.4, 414.03}, {
       2021, 2, 2, 415.43, 414.04}, {2021, 2, 3, 415.45, 414.04}, {
       2021, 2, 4, 415.48, 414.05}, {2021, 2, 5, 415.5, 414.06}, {
       2021, 2, 6, 415.53, 414.06}, {2021, 2, 7, 415.55, 414.07}, {
       2021, 2, 8, 415.57, 414.08}, {2021, 2, 9, 415.6, 414.08}, {
       2021, 2, 10, 415.62, 414.09}, {2021, 2, 11, 415.64, 414.09}, {
       2021, 2, 12, 415.67, 414.1}, {2021, 2, 13, 415.69, 414.11}, {
       2021, 2, 14, 415.71, 414.11}, {2021, 2, 15, 415.73, 414.12}, {
       2021, 2, 16, 415.75, 414.13}, {2021, 2, 17, 415.77, 414.13}, {
       2021, 2, 18, 415.79, 414.14}, {2021, 2, 19, 415.81, 414.15}, {
       2021, 2, 20, 415.83, 414.15}, {2021, 2, 21, 415.85, 414.16}, {
       2021, 2, 22, 415.87, 414.16}, {2021, 2, 23, 415.88, 414.17}, {
       2021, 2, 24, 415.9, 414.18}, {2021, 2, 25, 415.92, 414.18}, {
       2021, 2, 26, 415.93, 414.19}, {2021, 2, 27, 415.95, 414.2}, {
       2021, 2, 28, 415.96, 414.2}, {2021, 3, 1, 415.98, 414.21}, {
       2021, 3, 2, 415.99, 414.22}, {2021, 3, 3, 416., 414.22}, {
       2021, 3, 4, 416.02, 414.23}, {2021, 3, 5, 416.03, 414.24}, {
       2021, 3, 6, 416.04, 414.24}, {2021, 3, 7, 416.05, 414.25}, {
       2021, 3, 8, 416.06, 414.25}, {2021, 3, 9, 416.07, 414.26}, {
       2021, 3, 10, 416.08, 414.27}, {2021, 3, 11, 416.09, 414.27}, {
       2021, 3, 12, 416.1, 414.28}, {2021, 3, 13, 416.11, 414.29}, {
       2021, 3, 14, 416.12, 414.29}, {2021, 3, 15, 416.13, 414.3}, {
       2021, 3, 16, 416.13, 414.31}, {2021, 3, 17, 416.14, 414.31}, {
       2021, 3, 18, 416.15, 414.32}, {2021, 3, 19, 416.16, 414.33}, {
       2021, 3, 20, 416.17, 414.33}, {2021, 3, 21, 416.17, 414.34}, {
       2021, 3, 22, 416.18, 414.35}, {2021, 3, 23, 416.19, 414.35}, {
       2021, 3, 24, 416.2, 414.36}, {2021, 3, 25, 416.2, 414.37}, {
       2021, 3, 26, 416.21, 414.37}, {2021, 3, 27, 416.22, 414.38}, {
       2021, 3, 28, 416.23, 414.38}, {2021, 3, 29, 416.24, 414.39}, {
       2021, 3, 30, 416.24, 414.4}, {2021, 3, 31, 416.25, 414.4}, {
       2021, 4, 1, 416.26, 414.41}, {2021, 4, 2, 416.27, 414.42}, {
       2021, 4, 3, 416.28, 414.42}, {2021, 4, 4, 416.29, 414.43}, {
       2021, 4, 5, 416.3, 414.44}, {2021, 4, 6, 416.31, 414.44}, {
       2021, 4, 7, 416.32, 414.45}, {2021, 4, 8, 416.33, 414.46}, {
       2021, 4, 9, 416.35, 414.46}, {2021, 4, 10, 416.36, 414.47}, {
       2021, 4, 11, 416.37, 414.48}, {2021, 4, 12, 416.38, 414.48}, {
       2021, 4, 13, 416.4, 414.49}, {2021, 4, 14, 416.41, 414.5}, {
       2021, 4, 15, 416.42, 414.5}, {2021, 4, 16, 416.44, 414.51}, {
       2021, 4, 17, 416.45, 414.52}, {2021, 4, 18, 416.47, 414.52}, {
       2021, 4, 19, 416.48, 414.53}, {2021, 4, 20, 416.5, 414.54}, {
       2021, 4, 21, 416.51, 414.54}, {2021, 4, 22, 416.53, 414.55}, {
       2021, 4, 23, 416.54, 414.56}, {2021, 4, 24, 416.56, 414.56}, {
       2021, 4, 25, 416.57, 414.57}, {2021, 4, 26, 416.59, 414.58}, {
       2021, 4, 27, 416.6, 414.58}, {2021, 4, 28, 416.62, 414.59}, {
       2021, 4, 29, 416.63, 414.6}, {2021, 4, 30, 416.65, 414.6}, {
       2021, 5, 1, 416.66, 414.61}, {2021, 5, 2, 416.68, 414.62}, {
       2021, 5, 3, 416.69, 414.62}, {2021, 5, 4, 416.7, 414.63}, {
       2021, 5, 5, 416.71, 414.64}, {2021, 5, 6, 416.73, 414.64}, {
       2021, 5, 7, 416.74, 414.65}, {2021, 5, 8, 416.75, 414.66}, {
       2021, 5, 9, 416.76, 414.66}, {2021, 5, 10, 416.76, 414.67}, {
       2021, 5, 11, 416.77, 414.68}, {2021, 5, 12, 416.78, 414.68}, {
       2021, 5, 13, 416.78, 414.69}, {2021, 5, 14, 416.79, 414.7}, {
       2021, 5, 15, 416.79, 414.7}, {2021, 5, 16, 416.79, 414.71}, {
       2021, 5, 17, 416.79, 414.72}, {2021, 5, 18, 416.79, 414.72}, {
       2021, 5, 19, 416.79, 414.73}, {2021, 5, 20, 416.78, 414.74}, {
       2021, 5, 21, 416.78, 414.75}, {2021, 5, 22, 416.77, 414.75}, {
       2021, 5, 23, 416.76, 414.76}, {2021, 5, 24, 416.75, 414.77}, {
       2021, 5, 25, 416.73, 414.77}, {2021, 5, 26, 416.72, 414.78}, {
       2021, 5, 27, 416.7, 414.79}, {2021, 5, 28, 416.68, 414.79}, {
       2021, 5, 29, 416.66, 414.8}, {2021, 5, 30, 416.64, 414.81}, {
       2021, 5, 31, 416.61, 414.81}, {2021, 6, 1, 416.59, 414.82}, {
       2021, 6, 2, 416.56, 414.83}, {2021, 6, 3, 416.52, 414.83}, {
       2021, 6, 4, 416.49, 414.84}, {2021, 6, 5, 416.45, 414.85}, {
       2021, 6, 6, 416.42, 414.85}, {2021, 6, 7, 416.38, 414.86}, {
       2021, 6, 8, 416.33, 414.87}, {2021, 6, 9, 416.29, 414.87}, {
       2021, 6, 10, 416.24, 414.88}, {2021, 6, 11, 416.19, 414.89}, {
       2021, 6, 12, 416.14, 414.89}, {2021, 6, 13, 416.08, 414.9}, {
       2021, 6, 14, 416.03, 414.91}, {2021, 6, 15, 415.97, 414.91}, {
       2021, 6, 16, 415.91, 414.92}, {2021, 6, 17, 415.85, 414.93}, {
       2021, 6, 18, 415.78, 414.94}, {2021, 6, 19, 415.72, 414.94}, {
       2021, 6, 20, 415.65, 414.95}, {2021, 6, 21, 415.58, 414.96}, {
       2021, 6, 22, 415.51, 414.96}, {2021, 6, 23, 415.43, 414.97}, {
       2021, 6, 24, 415.36, 414.98}, {2021, 6, 25, 415.28, 414.98}, {
       2021, 6, 26, 415.2, 414.99}, {2021, 6, 27, 415.12, 415.}, {
       2021, 6, 28, 415.04, 415.}, {2021, 6, 29, 414.96, 415.01}, {
       2021, 6, 30, 414.88, 415.02}, {2021, 7, 1, 414.79, 415.02}, {
       2021, 7, 2, 414.71, 415.03}, {2021, 7, 3, 414.62, 415.04}, {
       2021, 7, 4, 414.53, 415.04}, {2021, 7, 5, 414.44, 415.05}, {
       2021, 7, 6, 414.36, 415.06}, {2021, 7, 7, 414.27, 415.07}, {
       2021, 7, 8, 414.18, 415.07}, {2021, 7, 9, 414.09, 415.08}, {
       2021, 7, 10, 414., 415.09}, {2021, 7, 11, 413.91, 415.09}, {
       2021, 7, 12, 413.82, 415.1}, {2021, 7, 13, 413.73, 415.11}, {
       2021, 7, 14, 413.64, 415.11}, {2021, 7, 15, 413.55, 415.12}, {
       2021, 7, 16, 413.46, 415.13}, {2021, 7, 17, 413.37, 415.13}, {
       2021, 7, 18, 413.28, 415.14}, {2021, 7, 19, 413.2, 415.15}, {
       2021, 7, 20, 413.11, 415.15}, {2021, 7, 21, 413.03, 415.16}, {
       2021, 7, 22, 412.95, 415.17}, {2021, 7, 23, 412.86, 415.17}, {
       2021, 7, 24, 412.78, 415.18}, {2021, 7, 25, 412.7, 415.19}, {
       2021, 7, 26, 412.63, 415.2}, {2021, 7, 27, 412.55, 415.2}, {
       2021, 7, 28, 412.48, 415.21}, {2021, 7, 29, 412.4, 415.22}, {
       2021, 7, 30, 412.33, 415.22}, {2021, 7, 31, 412.27, 415.23}, {
       2021, 8, 1, 412.2, 415.24}, {2021, 8, 2, 412.14, 415.24}, {
       2021, 8, 3, 412.08, 415.25}, {2021, 8, 4, 412.02, 415.26}, {
       2021, 8, 5, 411.96, 415.26}, {2021, 8, 6, 411.9, 415.27}, {
       2021, 8, 7, 411.85, 415.28}, {2021, 8, 8, 411.8, 415.28}, {
       2021, 8, 9, 411.76, 415.29}, {2021, 8, 10, 411.71, 415.3}, {
       2021, 8, 11, 411.67, 415.3}, {2021, 8, 12, 411.63, 415.31}, {
       2021, 8, 13, 411.6, 415.32}, {2021, 8, 14, 411.56, 415.33}, {
       2021, 8, 15, 411.53, 415.33}, {2021, 8, 16, 411.51, 415.34}, {
       2021, 8, 17, 411.48, 415.35}, {2021, 8, 18, 411.46, 415.35}, {
       2021, 8, 19, 411.44, 415.36}, {2021, 8, 20, 411.43, 415.37}, {
       2021, 8, 21, 411.41, 415.37}, {2021, 8, 22, 411.4, 415.38}, {
       2021, 8, 23, 411.4, 415.39}, {2021, 8, 24, 411.39, 415.39}, {
       2021, 8, 25, 411.39, 415.4}, {2021, 8, 26, 411.39, 415.41}, {
       2021, 8, 27, 411.4, 415.41}, {2021, 8, 28, 411.4, 415.42}, {
       2021, 8, 29, 411.41, 415.43}, {2021, 8, 30, 411.42, 415.43}, {
       2021, 8, 31, 411.44, 415.44}, {2021, 9, 1, 411.46, 415.45}, {
       2021, 9, 2, 411.47, 415.45}, {2021, 9, 3, 411.5, 415.46}, {
       2021, 9, 4, 411.52, 415.47}, {2021, 9, 5, 411.55, 415.48}, {
       2021, 9, 6, 411.58, 415.48}, {2021, 9, 7, 411.61, 415.49}, {
       2021, 9, 8, 411.64, 415.5}, {2021, 9, 9, 411.68, 415.5}, {
       2021, 9, 10, 411.72, 415.51}, {2021, 9, 11, 411.76, 415.52}, {
       2021, 9, 12, 411.8, 415.52}, {2021, 9, 13, 411.84, 415.53}, {
       2021, 9, 14, 411.89, 415.54}, {2021, 9, 15, 411.93, 415.54}, {
       2021, 9, 16, 411.98, 415.55}, {2021, 9, 17, 412.03, 415.56}, {
       2021, 9, 18, 412.09, 415.56}, {2021, 9, 19, 412.14, 415.57}, {
       2021, 9, 20, 412.19, 415.58}, {2021, 9, 21, 412.25, 415.58}, {
       2021, 9, 22, 412.31, 415.59}, {2021, 9, 23, 412.36, 415.6}, {
       2021, 9, 24, 412.42, 415.6}, {2021, 9, 25, 412.48, 415.61}, {
       2021, 9, 26, 412.54, 415.62}, {2021, 9, 27, 412.61, 415.62}, {
       2021, 9, 28, 412.67, 415.63}, {2021, 9, 29, 412.73, 415.64}, {
       2021, 9, 30, 412.8, 415.64}, {2021, 10, 1, 412.86, 415.65}, {
       2021, 10, 2, 412.93, 415.66}, {2021, 10, 3, 412.99, 415.66}, {
       2021, 10, 4, 413.06, 415.67}, {2021, 10, 5, 413.12, 415.68}, {
       2021, 10, 6, 413.19, 415.68}, {2021, 10, 7, 413.26, 415.69}, {
       2021, 10, 8, 413.32, 415.7}, {2021, 10, 9, 413.39, 415.7}, {
       2021, 10, 10, 413.46, 415.71}, {2021, 10, 11, 413.52, 415.72}, {
       2021, 10, 12, 413.59, 415.72}, {2021, 10, 13, 413.66, 415.73}, {
       2021, 10, 14, 413.72, 415.74}, {2021, 10, 15, 413.79, 415.74}, {
       2021, 10, 16, 413.86, 415.75}, {2021, 10, 17, 413.92, 415.76}, {
       2021, 10, 18, 413.99, 415.76}, {2021, 10, 19, 414.05, 415.77}, {
       2021, 10, 20, 414.12, 415.78}, {2021, 10, 21, 414.19, 415.78}, {
       2021, 10, 22, 414.25, 415.79}, {2021, 10, 23, 414.31, 415.8}, {
       2021, 10, 24, 414.38, 415.8}, {2021, 10, 25, 414.44, 415.81}, {
       2021, 10, 26, 414.5, 415.82}, {2021, 10, 27, 414.57, 415.82}, {
       2021, 10, 28, 414.63, 415.83}, {2021, 10, 29, 414.69, 415.84}, {
       2021, 10, 30, 414.75, 415.84}, {2021, 10, 31, 414.81, 415.85}, {
       2021, 11, 1, 414.88, 415.86}, {2021, 11, 2, 414.94, 415.86}, {
       2021, 11, 3, 415., 415.87}, {2021, 11, 4, 415.06, 415.88}, {
       2021, 11, 5, 415.11, 415.88}, {2021, 11, 6, 415.17, 415.89}, {
       2021, 11, 7, 415.23, 415.9}, {2021, 11, 8, 415.29, 415.9}, {
       2021, 11, 9, 415.35, 415.91}, {2021, 11, 10, 415.4, 415.92}, {
       2021, 11, 11, 415.46, 415.92}, {2021, 11, 12, 415.52, 415.93}, {
       2021, 11, 13, 415.57, 415.94}, {2021, 11, 14, 415.63, 415.94}, {
       2021, 11, 15, 415.69, 415.95}, {2021, 11, 16, 415.74, 415.96}, {
       2021, 11, 17, 415.8, 415.96}, {2021, 11, 18, 415.85, 415.97}, {
       2021, 11, 19, 415.91, 415.98}, {2021, 11, 20, 415.96, 415.98}, {
       2021, 11, 21, 416.02, 415.99}, {2021, 11, 22, 416.07, 416.}, {
       2021, 11, 23, 416.12, 416.}, {2021, 11, 24, 416.18, 416.01}, {
       2021, 11, 25, 416.23, 416.02}, {2021, 11, 26, 416.29, 416.02}, {
       2021, 11, 27, 416.34, 416.03}, {2021, 11, 28, 416.39, 416.04}, {
       2021, 11, 29, 416.45, 416.04}, {2021, 11, 30, 416.5, 416.05}, {
       2021, 12, 1, 416.55, 416.05}, {2021, 12, 2, 416.6, 416.06}, {
       2021, 12, 3, 416.66, 416.07}, {2021, 12, 4, 416.71, 416.07}, {
       2021, 12, 5, 416.76, 416.08}, {2021, 12, 6, 416.81, 416.09}, {
       2021, 12, 7, 416.86, 416.09}, {2021, 12, 8, 416.91, 416.1}, {
       2021, 12, 9, 416.96, 416.11}, {2021, 12, 10, 417.01, 416.11}, {
       2021, 12, 11, 417.06, 416.12}, {2021, 12, 12, 417.11, 416.13}, {
       2021, 12, 13, 417.16, 416.13}, {2021, 12, 14, 417.21, 416.14}, {
       2021, 12, 15, 417.26, 416.15}, {2021, 12, 16, 417.31, 416.15}, {
       2021, 12, 17, 417.36, 416.16}, {2021, 12, 18, 417.41, 416.16}, {
       2021, 12, 19, 417.45, 416.17}, {2021, 12, 20, 417.5, 416.18}, {
       2021, 12, 21, 417.54, 416.18}, {2021, 12, 22, 417.59, 416.19}, {
       2021, 12, 23, 417.63, 416.2}, {2021, 12, 24, 417.68, 416.2}, {
       2021, 12, 25, 417.72, 416.21}, {2021, 12, 26, 417.76, 416.22}, {
       2021, 12, 27, 417.81, 416.22}, {2021, 12, 28, 417.85, 416.23}, {
       2021, 12, 29, 417.89, 416.24}, {2021, 12, 30, 417.92, 416.24}, {
       2021, 12, 31, 417.96, 416.25}, {2022, 1, 1, 418., 416.25}, {
       2022, 1, 2, 418.04, 416.26}, {2022, 1, 3, 418.07, 416.27}, {
       2022, 1, 4, 418.11, 416.27}, {2022, 1, 5, 418.14, 416.28}, {
       2022, 1, 6, 418.17, 416.29}, {2022, 1, 7, 418.2, 416.29}, {
       2022, 1, 8, 418.23, 416.3}, {2022, 1, 9, 418.26, 416.31}, {
       2022, 1, 10, 418.29, 416.31}, {2022, 1, 11, 418.31, 416.32}, {
       2022, 1, 12, 418.34, 416.32}, {2022, 1, 13, 418.36, 416.33}, {
       2022, 1, 14, 418.39, 416.34}, {2022, 1, 15, 418.41, 416.34}, {
       2022, 1, 16, 418.43, 416.35}, {2022, 1, 17, 418.45, 416.36}, {
       2022, 1, 18, 418.47, 416.36}, {2022, 1, 19, 418.48, 416.37}, {
       2022, 1, 20, 418.5, 416.37}, {2022, 1, 21, 418.51, 416.38}, {
       2022, 1, 22, 418.53, 416.39}, {2022, 1, 23, 418.54, 416.39}, {
       2022, 1, 24, 418.55, 416.4}, {2022, 1, 25, 418.56, 416.41}, {
       2022, 1, 26, 418.57, 416.41}, {2022, 1, 27, 418.58, 416.42}, {
       2022, 1, 28, 418.58, 416.42}, {2022, 1, 29, 418.59, 416.43}, {
       2022, 1, 30, 418.59, 416.44}, {2022, 1, 31, 418.6, 416.44}, {
       2022, 2, 1, 418.6, 416.45}, {2022, 2, 2, 418.6, 416.46}, {
       2022, 2, 3, 418.61, 416.46}, {2022, 2, 4, 418.61, 416.47}, {
       2022, 2, 5, 418.61, 416.47}, {2022, 2, 6, 418.6, 416.48}, {
       2022, 2, 7, 418.6, 416.49}, {2022, 2, 8, 418.6, 416.49}, {
       2022, 2, 9, 418.6, 416.5}, {2022, 2, 10, 418.59, 416.51}, {
       2022, 2, 11, 418.59, 416.51}, {2022, 2, 12, 418.58, 416.52}, {
       2022, 2, 13, 418.58, 416.52}, {2022, 2, 14, 418.57, 416.53}, {
       2022, 2, 15, 418.57, 416.54}, {2022, 2, 16, 418.56, 416.54}, {
       2022, 2, 17, 418.55, 416.55}, {2022, 2, 18, 418.55, 416.55}, {
       2022, 2, 19, 418.54, 416.56}, {2022, 2, 20, 418.53, 416.57}, {
       2022, 2, 21, 418.53, 416.57}, {2022, 2, 22, 418.52, 416.58}, {
       2022, 2, 23, 418.51, 416.59}, {2022, 2, 24, 418.5, 416.59}, {
       2022, 2, 25, 418.49, 416.6}, {2022, 2, 26, 418.49, 416.6}, {
       2022, 2, 27, 418.48, 416.61}, {2022, 2, 28, 418.47, 416.62}, {
       2022, 3, 1, 418.46, 416.62}, {2022, 3, 2, 418.45, 416.63}, {
       2022, 3, 3, 418.45, 416.63}, {2022, 3, 4, 418.44, 416.64}, {
       2022, 3, 5, 418.43, 416.65}, {2022, 3, 6, 418.42, 416.65}, {
       2022, 3, 7, 418.42, 416.66}, {2022, 3, 8, 418.41, 416.66}, {
       2022, 3, 9, 418.4, 416.67}, {2022, 3, 10, 418.4, 416.68}, {
       2022, 3, 11, 418.39, 416.68}, {2022, 3, 12, 418.39, 416.69}, {
       2022, 3, 13, 418.38, 416.69}, {2022, 3, 14, 418.38, 416.7}, {
       2022, 3, 15, 418.37, 416.71}, {2022, 3, 16, 418.37, 416.71}, {
       2022, 3, 17, 418.37, 416.72}, {2022, 3, 18, 418.36, 416.72}, {
       2022, 3, 19, 418.36, 416.73}, {2022, 3, 20, 418.36, 416.74}, {
       2022, 3, 21, 418.36, 416.74}, {2022, 3, 22, 418.36, 416.75}, {
       2022, 3, 23, 418.36, 416.75}, {2022, 3, 24, 418.36, 416.76}, {
       2022, 3, 25, 418.36, 416.77}, {2022, 3, 26, 418.36, 416.77}, {
       2022, 3, 27, 418.36, 416.78}, {2022, 3, 28, 418.37, 416.78}, {
       2022, 3, 29, 418.37, 416.79}, {2022, 3, 30, 418.37, 416.8}, {
       2022, 3, 31, 418.38, 416.8}, {2022, 4, 1, 418.39, 416.81}, {
       2022, 4, 2, 418.39, 416.81}, {2022, 4, 3, 418.4, 416.82}, {
       2022, 4, 4, 418.41, 416.83}, {2022, 4, 5, 418.42, 416.83}, {
       2022, 4, 6, 418.43, 416.84}, {2022, 4, 7, 418.44, 416.84}, {
       2022, 4, 8, 418.45, 416.85}, {2022, 4, 9, 418.46, 416.86}, {
       2022, 4, 10, 418.47, 416.86}, {2022, 4, 11, 418.49, 416.87}, {
       2022, 4, 12, 418.5, 416.87}, {2022, 4, 13, 418.52, 416.88}, {
       2022, 4, 14, 418.53, 416.89}, {2022, 4, 15, 418.55, 416.89}, {
       2022, 4, 16, 418.57, 416.9}, {2022, 4, 17, 418.59, 416.9}, {
       2022, 4, 18, 418.6, 416.91}, {2022, 4, 19, 418.62, 416.92}, {
       2022, 4, 20, 418.64, 416.92}, {2022, 4, 21, 418.66, 416.93}, {
       2022, 4, 22, 418.68, 416.93}, {2022, 4, 23, 418.7, 416.94}, {
       2022, 4, 24, 418.72, 416.95}, {2022, 4, 25, 418.75, 416.95}, {
       2022, 4, 26, 418.77, 416.96}, {2022, 4, 27, 418.79, 416.96}, {
       2022, 4, 28, 418.81, 416.97}, {2022, 4, 29, 418.83, 416.97}, {
       2022, 4, 30, 418.85, 416.98}, {2022, 5, 1, 418.87, 416.99}, {
       2022, 5, 2, 418.89, 416.99}, {2022, 5, 3, 418.91, 417.}, {
       2022, 5, 4, 418.93, 417.}, {2022, 5, 5, 418.95, 417.01}, {
       2022, 5, 6, 418.97, 417.02}, {2022, 5, 7, 418.99, 417.02}, {
       2022, 5, 8, 419.01, 417.03}, {2022, 5, 9, 419.02, 417.03}, {
       2022, 5, 10, 419.04, 417.04}, {2022, 5, 11, 419.05, 417.04}, {
       2022, 5, 12, 419.06, 417.05}, {2022, 5, 13, 419.07, 417.06}, {
       2022, 5, 14, 419.08, 417.06}, {2022, 5, 15, 419.09, 417.07}, {
       2022, 5, 16, 419.1, 417.07}, {2022, 5, 17, 419.1, 417.08}, {
       2022, 5, 18, 419.1, 417.09}, {2022, 5, 19, 419.1, 417.09}, {
       2022, 5, 20, 419.1, 417.1}, {2022, 5, 21, 419.1, 417.1}, {
       2022, 5, 22, 419.09, 417.11}, {2022, 5, 23, 419.08, 417.11}, {
       2022, 5, 24, 419.07, 417.12}, {2022, 5, 25, 419.06, 417.13}, {
       2022, 5, 26, 419.04, 417.13}, {2022, 5, 27, 419.02, 417.14}, {
       2022, 5, 28, 419., 417.14}, {2022, 5, 29, 418.98, 417.15}, {
       2022, 5, 30, 418.95, 417.16}, {2022, 5, 31, 418.92, 417.16}, {
       2022, 6, 1, 418.89, 417.17}, {2022, 6, 2, 418.85, 417.17}, {
       2022, 6, 3, 418.82, 417.18}, {2022, 6, 4, 418.78, 417.18}, {
       2022, 6, 5, 418.73, 417.19}, {2022, 6, 6, 418.69, 417.2}, {
       2022, 6, 7, 418.64, 417.2}, {2022, 6, 8, 418.59, 417.21}, {
       2022, 6, 9, 418.53, 417.21}, {2022, 6, 10, 418.48, 417.22}, {
       2022, 6, 11, 418.42, 417.22}, {2022, 6, 12, 418.36, 417.23}, {
       2022, 6, 13, 418.29, 417.24}, {2022, 6, 14, 418.23, 417.24}, {
       2022, 6, 15, 418.16, 417.25}, {2022, 6, 16, 418.09, 417.25}, {
       2022, 6, 17, 418.01, 417.26}, {2022, 6, 18, 417.94, 417.26}, {
       2022, 6, 19, 417.86, 417.27}, {2022, 6, 20, 417.78, 417.28}, {
       2022, 6, 21, 417.7, 417.28}, {2022, 6, 22, 417.62, 417.29}, {
       2022, 6, 23, 417.54, 417.29}, {2022, 6, 24, 417.46, 417.3}, {
       2022, 6, 25, 417.37, 417.31}, {2022, 6, 26, 417.29, 417.31}, {
       2022, 6, 27, 417.2, 417.32}, {2022, 6, 28, 417.11, 417.32}, {
       2022, 6, 29, 417.02, 417.33}, {2022, 6, 30, 416.93, 417.33}, {
       2022, 7, 1, 416.84, 417.34}, {2022, 7, 2, 416.76, 417.35}, {
       2022, 7, 3, 416.67, 417.35}, {2022, 7, 4, 416.58, 417.36}, {
       2022, 7, 5, 416.49, 417.36}, {2022, 7, 6, 416.4, 417.37}, {
       2022, 7, 7, 416.31, 417.37}, {2022, 7, 8, 416.22, 417.38}, {
       2022, 7, 9, 416.13, 417.39}, {2022, 7, 10, 416.05, 417.39}, {
       2022, 7, 11, 415.96, 417.4}, {2022, 7, 12, 415.88, 417.4}, {
       2022, 7, 13, 415.79, 417.41}, {2022, 7, 14, 415.71, 417.41}, {
       2022, 7, 15, 415.63, 417.42}, {2022, 7, 16, 415.55, 417.43}, {
       2022, 7, 17, 415.47, 417.43}, {2022, 7, 18, 415.39, 417.44}, {
       2022, 7, 19, 415.32, 417.44}, {2022, 7, 20, 415.24, 417.45}, {
       2022, 7, 21, 415.17, 417.45}, {2022, 7, 22, 415.1, 417.46}, {
       2022, 7, 23, 415.03, 417.46}, {2022, 7, 24, 414.97, 417.47}, {
       2022, 7, 25, 414.9, 417.48}}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`UnknownShape[False]], 20, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 3920], 
     "Meta" -> Association[], "RowTarget" -> 20, "ColumnTarget" -> 10, 
     "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`UnknownShape[False]], 20, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
       TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 3920], 
     "Path" -> {}, "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 1, 
     "DataRowCount" -> 3920, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# \
--------------------------------------------------------------------"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# \
--------------------------------------------------------------------"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# USE OF NOAA GML DATA"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"# USE OF NOAA GML DATA"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"#"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"#"}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# These data are made freely available to the \
public and the"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# These data are made freely available to the \
public and the"}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# scientific community in the belief that their \
wide dissemination"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# scientific community in the belief that their \
wide dissemination"}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# will lead to greater understanding and new \
scientific insights."}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# will lead to greater understanding and new \
scientific insights."}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                   "# The availability of these data does not constitute \
publication"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# The availability of these data does not \
constitute publication"}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{7}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# of the data.  NOAA relies on the ethics and \
integrity of the user to"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# of the data.  NOAA relies on the ethics and \
integrity of the user to"}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{8}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# ensure that GML receives fair credit for their \
work.  If the data"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# ensure that GML receives fair credit for their \
work.  If the data"}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{9}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# are obtained for potential use in a publication \
or presentation", ""}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# are obtained for potential use in a publication \
or presentation", ""}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{10}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# GML should be informed at the outset of the \
nature of this work."}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# GML should be informed at the outset of the \
nature of this work."}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{11}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# If the GML data are essential to the work", 
                    "or if an important"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# If the GML data are essential to the work", 
                    "or if an important"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{12}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# result or conclusion depends on the GML data", 
                    "co-authorship"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# result or conclusion depends on the GML data", 
                    "co-authorship"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{13}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# may be appropriate.  This should be discussed at \
an early stage in"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# may be appropriate.  This should be discussed at \
an early stage in"}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{14}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# the work.  Manuscripts using the GML data should \
be sent to GML"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# the work.  Manuscripts using the GML data should \
be sent to GML"}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{15}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# for review before they are submitted for \
publication so we can"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# for review before they are submitted for \
publication so we can"}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{16}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# ensure that the quality and limitations of the \
data are accurately"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# ensure that the quality and limitations of the \
data are accurately"}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{17}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"# represented."}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"# represented."}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{18}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"#"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"#"}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{19}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# Contact:  Kirk Thoning (303 497 6078; \
kirk.w.thoning@noaa.gov)"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# Contact:  Kirk Thoning (303 497 6078; \
kirk.w.thoning@noaa.gov)"}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{20}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 3920, 1], {1, 3920 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 3920, 1], {1, 3920 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[3920, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[3920, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 3920, 1], {1, 3920 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 3920, 1], {1, 3920 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{559., {287.134033203125, 292.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{559., {287.134033203125, 292.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.86799211415975*^9, 3.867992146201097*^9, 
  3.867992252051359*^9, 3.867992858499382*^9, 3.86801217207059*^9},
 CellLabel->
  "Out[716]=",ExpressionUUID->"182e9400-4385-4eb1-8b44-de43228af4ba"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> {{
       "# --------------------------------------------------------------------\
"}, {"# USE OF NOAA GML DATA"}, {"#"}, {
       "# These data are made freely available to the public and the"}, {
       "# scientific community in the belief that their wide dissemination"}, \
{"# will lead to greater understanding and new scientific insights."}, {
       "# The availability of these data does not constitute publication"}, {
       "# of the data.  NOAA relies on the ethics and integrity of the user \
to"}, {"# ensure that GML receives fair credit for their work.  If the \
data"}, {"# are obtained for potential use in a publication or presentation", 
        ""}, {"# GML should be informed at the outset of the nature of this \
work."}, {
       "# If the GML data are essential to the work", "or if an important"}, {
       "# result or conclusion depends on the GML data", "co-authorship"}, {
       "# may be appropriate.  This should be discussed at an early stage \
in"}, {"# the work.  Manuscripts using the GML data should be sent to GML"}, {
       "# for review before they are submitted for publication so we can"}, {
       "# ensure that the quality and limitations of the data are \
accurately"}, {"# represented."}, {"#"}, {
       "# Contact:   Pieter Tans (303 497 6678; pieter.tans@noaa.gov)"}, {
       "#"}, {"# File Creation:  Mon Jul 11 09:59:42 2022"}, {"#"}, {
       "# RECIPROCITY"}, {"#"}, {
       "# Use of these data implies an agreement to reciprocate."}, {
       "# Laboratories making similar measurements agree to make their"}, {
       "# own data available to the general public and to the scientific"}, {
       "# community in an equally complete and easily accessible form."}, {
       "# Modelers are encouraged to make available to the community", ""}, {
       "# upon request", "their own tools used in the interpretation"}, {
       "# of the GML data", "namely well documented model code", 
        "transport"}, {
       "# fields", "and additional information necessary for other"}, {
       "# scientists to repeat the work and to run modified versions."}, {
       "# Model availability includes collaborative support for new"}, {
       "# users of the models."}, {
       "# --------------------------------------------------------------------\
"}, {"#"}, {"#"}, {
       "# See www.esrl.noaa.gov/gmd/ccgg/trends/ for additional details."}, {
       "#"}, {"# Data from March 1958 through April 1974 have been obtained \
by C. David Keeling"}, {
       "# of the Scripps Institution of Oceanography (SIO) and were obtained \
from the"}, {"# Scripps website (scrippsco2.ucsd.edu)."}, {"#"}, {
       "# The estimated uncertainty in the annual mean is the standard \
deviation"}, {
       "# of the differences of annual mean values determined independently \
by"}, {"# NOAA/ESRL and the Scripps Institution of Oceanography."}, {"#"}, {
       "# NOTE: In general", 
        "the data presented for the last year are subject to change", ""}, {
       "# depending on recalibration of the reference gas mixtures used", 
        "and other quality"}, {
       "# control procedures. Occasionally", 
        "earlier years may also be changed for the same"}, {
       "# reasons.  Usually these changes are minor."}, {"#"}, {
       "# CO2 expressed as a mole fraction in dry air", "micromol/mol", 
        "abbreviated as ppm"}, {"year", "mean", "unc"}, {
       1959, 315.98, 0.12}, {1960, 316.91, 0.12}, {1961, 317.64, 0.12}, {
       1962, 318.45, 0.12}, {1963, 318.99, 0.12}, {1964, 319.62, 0.12}, {
       1965, 320.04, 0.12}, {1966, 321.37, 0.12}, {1967, 322.18, 0.12}, {
       1968, 323.05, 0.12}, {1969, 324.62, 0.12}, {1970, 325.68, 0.12}, {
       1971, 326.32, 0.12}, {1972, 327.46, 0.12}, {1973, 329.68, 0.12}, {
       1974, 330.19, 0.12}, {1975, 331.12, 0.12}, {1976, 332.03, 0.12}, {
       1977, 333.84, 0.12}, {1978, 335.41, 0.12}, {1979, 336.84, 0.12}, {
       1980, 338.76, 0.12}, {1981, 340.12, 0.12}, {1982, 341.48, 0.12}, {
       1983, 343.15, 0.12}, {1984, 344.85, 0.12}, {1985, 346.35, 0.12}, {
       1986, 347.61, 0.12}, {1987, 349.31, 0.12}, {1988, 351.69, 0.12}, {
       1989, 353.2, 0.12}, {1990, 354.45, 0.12}, {1991, 355.7, 0.12}, {
       1992, 356.54, 0.12}, {1993, 357.21, 0.12}, {1994, 358.96, 0.12}, {
       1995, 360.97, 0.12}, {1996, 362.74, 0.12}, {1997, 363.88, 0.12}, {
       1998, 366.84, 0.12}, {1999, 368.54, 0.12}, {2000, 369.71, 0.12}, {
       2001, 371.32, 0.12}, {2002, 373.45, 0.12}, {2003, 375.98, 0.12}, {
       2004, 377.7, 0.12}, {2005, 379.98, 0.12}, {2006, 382.09, 0.12}, {
       2007, 384.02, 0.12}, {2008, 385.83, 0.12}, {2009, 387.64, 0.12}, {
       2010, 390.1, 0.12}, {2011, 391.85, 0.12}, {2012, 394.06, 0.12}, {
       2013, 396.74, 0.12}, {2014, 398.81, 0.12}, {2015, 401.01, 0.12}, {
       2016, 404.41, 0.12}, {2017, 406.76, 0.12}, {2018, 408.72, 0.12}, {
       2019, 411.66, 0.12}, {2020, 414.24, 0.12}, {2021, 416.45, 0.12}}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`UnknownShape[False]], 20, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 119], 
     "Meta" -> Association[], "RowTarget" -> 20, "ColumnTarget" -> 10, 
     "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`UnknownShape[False]], 20, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
       TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 119], 
     "Path" -> {}, "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 1, 
     "DataRowCount" -> 119, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# \
--------------------------------------------------------------------"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# \
--------------------------------------------------------------------"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# USE OF NOAA GML DATA"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   Style[{"# USE OF NOAA GML DATA"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"#"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"#"}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# These data are made freely available to the \
public and the"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# These data are made freely available to the \
public and the"}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# scientific community in the belief that their \
wide dissemination"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# scientific community in the belief that their \
wide dissemination"}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# will lead to greater understanding and new \
scientific insights."}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# will lead to greater understanding and new \
scientific insights."}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# The availability of these data does not \
constitute publication"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# The availability of these data does not \
constitute publication"}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{7}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# of the data.  NOAA relies on the ethics and \
integrity of the user to"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# of the data.  NOAA relies on the ethics and \
integrity of the user to"}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{8}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# ensure that GML receives fair credit for their \
work.  If the data"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# ensure that GML receives fair credit for their \
work.  If the data"}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{9}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# are obtained for potential use in a publication \
or presentation", ""}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# are obtained for potential use in a publication \
or presentation", ""}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{10}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# GML should be informed at the outset of the \
nature of this work."}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# GML should be informed at the outset of the \
nature of this work."}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{11}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# If the GML data are essential to the work", 
                    "or if an important"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# If the GML data are essential to the work", 
                    "or if an important"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{12}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# result or conclusion depends on the GML data", 
                    "co-authorship"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# result or conclusion depends on the GML data", 
                    "co-authorship"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{13}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                   "# may be appropriate.  This should be discussed at an \
early stage in"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# may be appropriate.  This should be discussed at \
an early stage in"}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{14}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# the work.  Manuscripts using the GML data should \
be sent to GML"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# the work.  Manuscripts using the GML data should \
be sent to GML"}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{15}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# for review before they are submitted for \
publication so we can"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# for review before they are submitted for \
publication so we can"}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{16}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# ensure that the quality and limitations of the \
data are accurately"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# ensure that the quality and limitations of the \
data are accurately"}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{17}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"# represented."}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"# represented."}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{18}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"#"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"#"}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{19}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# Contact:   Pieter Tans (303 497 6678; \
pieter.tans@noaa.gov)"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# Contact:   Pieter Tans (303 497 6678; \
pieter.tans@noaa.gov)"}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{20}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 119, 1], {1, 119 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 119, 1], {1, 119 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[119, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[119, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 119, 1], {1, 119 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 119, 1], {1, 119 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{559., {287.134033203125, 292.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{559., {287.134033203125, 292.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.86799211415975*^9, 3.867992146201097*^9, 
  3.867992252051359*^9, 3.867992858499382*^9, 3.868012172080043*^9},
 CellLabel->
  "Out[717]=",ExpressionUUID->"e4eeb254-441a-4b61-9ad8-14b820a417da"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> {{
       "# --------------------------------------------------------------------\
"}, {"# USE OF NOAA GML DATA"}, {"#"}, {
       "# These data are made freely available to the public and the"}, {
       "# scientific community in the belief that their wide dissemination"}, \
{"# will lead to greater understanding and new scientific insights."}, {
       "# The availability of these data does not constitute publication"}, {
       "# of the data.  NOAA relies on the ethics and integrity of the user \
to"}, {"# ensure that GML receives fair credit for their work.  If the \
data"}, {"# are obtained for potential use in a publication or presentation", 
        ""}, {"# GML should be informed at the outset of the nature of this \
work."}, {
       "# If the GML data are essential to the work", "or if an important"}, {
       "# result or conclusion depends on the GML data", "co-authorship"}, {
       "# may be appropriate.  This should be discussed at an early stage \
in"}, {"# the work.  Manuscripts using the GML data should be sent to GML"}, {
       "# for review before they are submitted for publication so we can"}, {
       "# ensure that the quality and limitations of the data are \
accurately"}, {"# represented."}, {"#"}, {
       "# Contact:   Pieter Tans (303 497 6678; pieter.tans@noaa.gov)"}, {
       "#"}, {"# File Creation:  Mon Jul 11 09:59:42 2022"}, {"#"}, {
       "# RECIPROCITY"}, {"#"}, {
       "# Use of these data implies an agreement to reciprocate."}, {
       "# Laboratories making similar measurements agree to make their"}, {
       "# own data available to the general public and to the scientific"}, {
       "# community in an equally complete and easily accessible form."}, {
       "# Modelers are encouraged to make available to the community", ""}, {
       "# upon request", "their own tools used in the interpretation"}, {
       "# of the GML data", "namely well documented model code", 
        "transport"}, {
       "# fields", "and additional information necessary for other"}, {
       "# scientists to repeat the work and to run modified versions."}, {
       "# Model availability includes collaborative support for new"}, {
       "# users of the models."}, {
       "# --------------------------------------------------------------------\
"}, {"#"}, {"#"}, {
       "# See www.esrl.noaa.gov/gmd/ccgg/trends/ for additional details."}, {
       "#"}, {"# Data from March 1958 through April 1974 have been obtained \
by C. David Keeling"}, {
       "# of the Scripps Institution of Oceanography (SIO) and were obtained \
from the"}, {"# Scripps website (scrippsco2.ucsd.edu)."}, {
       "# Monthly mean CO2 constructed from daily mean values"}, {
       "# Scripps data downloaded from \
http://scrippsco2.ucsd.edu/data/atmospheric_co2"}, {
       "# Monthly values are corrected to center of month based on average \
seasonal"}, {
       "# cycle. Missing days can be asymmetric which would produce a high or \
low bias."}, {
       "# Missing months have been interpolated", 
        "for NOAA data indicated by negative stdev"}, {
       "# and uncertainty. We have no information for SIO data about Ndays", 
        "stdv", "unc"}, {
       "# so that they are also indicated by negative numbers"}, {
       "year", "month", "decimal date", "average", "deseasonalized", "ndays", 
        "sdev", "unc"}, {
       1958, 3, 1958.2027, 315.7, 314.43, -1, -9.99, -0.99}, {
       1958, 4, 1958.2877, 317.45, 315.16, -1, -9.99, -0.99}, {
       1958, 5, 1958.3699, 317.51, 314.71, -1, -9.99, -0.99}, {
       1958, 6, 1958.4548, 317.24, 315.14, -1, -9.99, -0.99}, {
       1958, 7, 1958.537, 315.86, 315.18, -1, -9.99, -0.99}, {
       1958, 8, 1958.6219, 314.93, 316.18, -1, -9.99, -0.99}, {
       1958, 9, 1958.7068, 313.2, 316.08, -1, -9.99, -0.99}, {
       1958, 10, 1958.789, 312.43, 315.41, -1, -9.99, -0.99}, {
       1958, 11, 1958.874, 313.33, 315.2, -1, -9.99, -0.99}, {
       1958, 12, 1958.9562, 314.67, 315.43, -1, -9.99, -0.99}, {
       1959, 1, 1959.0411, 315.58, 315.55, -1, -9.99, -0.99}, {
       1959, 2, 1959.126, 316.48, 315.86, -1, -9.99, -0.99}, {
       1959, 3, 1959.2027, 316.65, 315.38, -1, -9.99, -0.99}, {
       1959, 4, 1959.2877, 317.72, 315.41, -1, -9.99, -0.99}, {
       1959, 5, 1959.3699, 318.29, 315.49, -1, -9.99, -0.99}, {
       1959, 6, 1959.4548, 318.15, 316.03, -1, -9.99, -0.99}, {
       1959, 7, 1959.537, 316.54, 315.86, -1, -9.99, -0.99}, {
       1959, 8, 1959.6219, 314.8, 316.06, -1, -9.99, -0.99}, {
       1959, 9, 1959.7068, 313.84, 316.73, -1, -9.99, -0.99}, {
       1959, 10, 1959.789, 313.33, 316.33, -1, -9.99, -0.99}, {
       1959, 11, 1959.874, 314.81, 316.68, -1, -9.99, -0.99}, {
       1959, 12, 1959.9562, 315.58, 316.35, -1, -9.99, -0.99}, {
       1960, 1, 1960.041, 316.43, 316.4, -1, -9.99, -0.99}, {
       1960, 2, 1960.1257, 316.98, 316.36, -1, -9.99, -0.99}, {
       1960, 3, 1960.2049, 317.58, 316.28, -1, -9.99, -0.99}, {
       1960, 4, 1960.2896, 319.03, 316.7, -1, -9.99, -0.99}, {
       1960, 5, 1960.3716, 320.04, 317.22, -1, -9.99, -0.99}, {
       1960, 6, 1960.4563, 319.59, 317.47, -1, -9.99, -0.99}, {
       1960, 7, 1960.5383, 318.18, 317.52, -1, -9.99, -0.99}, {
       1960, 8, 1960.623, 315.9, 317.19, -1, -9.99, -0.99}, {
       1960, 9, 1960.7077, 314.17, 317.08, -1, -9.99, -0.99}, {
       1960, 10, 1960.7896, 313.83, 316.83, -1, -9.99, -0.99}, {
       1960, 11, 1960.8743, 315., 316.88, -1, -9.99, -0.99}, {
       1960, 12, 1960.9563, 316.19, 316.96, -1, -9.99, -0.99}, {
       1961, 1, 1961.0411, 316.89, 316.86, -1, -9.99, -0.99}, {
       1961, 2, 1961.126, 317.7, 317.08, -1, -9.99, -0.99}, {
       1961, 3, 1961.2027, 318.54, 317.26, -1, -9.99, -0.99}, {
       1961, 4, 1961.2877, 319.48, 317.16, -1, -9.99, -0.99}, {
       1961, 5, 1961.3699, 320.58, 317.76, -1, -9.99, -0.99}, {
       1961, 6, 1961.4548, 319.77, 317.63, -1, -9.99, -0.99}, {
       1961, 7, 1961.537, 318.57, 317.88, -1, -9.99, -0.99}, {
       1961, 8, 1961.6219, 316.79, 318.06, -1, -9.99, -0.99}, {
       1961, 9, 1961.7068, 314.99, 317.9, -1, -9.99, -0.99}, {
       1961, 10, 1961.789, 315.31, 318.32, -1, -9.99, -0.99}, {
       1961, 11, 1961.874, 316.1, 317.99, -1, -9.99, -0.99}, {
       1961, 12, 1961.9562, 317.01, 317.79, -1, -9.99, -0.99}, {
       1962, 1, 1962.0411, 317.94, 317.91, -1, -9.99, -0.99}, {
       1962, 2, 1962.126, 318.55, 317.92, -1, -9.99, -0.99}, {
       1962, 3, 1962.2027, 319.68, 318.39, -1, -9.99, -0.99}, {
       1962, 4, 1962.2877, 320.57, 318.24, -1, -9.99, -0.99}, {
       1962, 5, 1962.3699, 321.02, 318.18, -1, -9.99, -0.99}, {
       1962, 6, 1962.4548, 320.62, 318.47, -1, -9.99, -0.99}, {
       1962, 7, 1962.537, 319.61, 318.92, -1, -9.99, -0.99}, {
       1962, 8, 1962.6219, 317.4, 318.68, -1, -9.99, -0.99}, {
       1962, 9, 1962.7068, 316.25, 319.17, -1, -9.99, -0.99}, {
       1962, 10, 1962.789, 315.42, 318.45, -1, -9.99, -0.99}, {
       1962, 11, 1962.874, 316.69, 318.58, -1, -9.99, -0.99}, {
       1962, 12, 1962.9562, 317.7, 318.47, -1, -9.99, -0.99}, {
       1963, 1, 1963.0411, 318.74, 318.7, -1, -9.99, -0.99}, {
       1963, 2, 1963.126, 319.07, 318.44, -1, -9.99, -0.99}, {
       1963, 3, 1963.2027, 319.86, 318.57, -1, -9.99, -0.99}, {
       1963, 4, 1963.2877, 321.38, 319.05, -1, -9.99, -0.99}, {
       1963, 5, 1963.3699, 322.25, 319.4, -1, -9.99, -0.99}, {
       1963, 6, 1963.4548, 321.48, 319.32, -1, -9.99, -0.99}, {
       1963, 7, 1963.537, 319.74, 319.05, -1, -9.99, -0.99}, {
       1963, 8, 1963.6219, 317.77, 319.05, -1, -9.99, -0.99}, {
       1963, 9, 1963.7068, 316.21, 319.14, -1, -9.99, -0.99}, {
       1963, 10, 1963.789, 315.99, 319.02, -1, -9.99, -0.99}, {
       1963, 11, 1963.874, 317.07, 318.97, -1, -9.99, -0.99}, {
       1963, 12, 1963.9562, 318.35, 319.13, -1, -9.99, -0.99}, {
       1964, 1, 1964.041, 319.57, 319.54, -1, -9.99, -0.99}, {
       1964, 2, 1964.1257, 320.01, 319.37, -1, -9.99, -0.99}, {
       1964, 3, 1964.2049, 320.74, 319.41, -1, -9.99, -0.99}, {
       1964, 4, 1964.2896, 321.84, 319.45, -1, -9.99, -0.99}, {
       1964, 5, 1964.3716, 322.26, 319.4, -1, -9.99, -0.99}, {
       1964, 6, 1964.4563, 321.89, 319.75, -1, -9.99, -0.99}, {
       1964, 7, 1964.5383, 320.44, 319.77, -1, -9.99, -0.99}, {
       1964, 8, 1964.623, 318.69, 320., -1, -9.99, -0.99}, {
       1964, 9, 1964.7077, 316.7, 319.66, -1, -9.99, -0.99}, {
       1964, 10, 1964.7896, 316.87, 319.91, -1, -9.99, -0.99}, {
       1964, 11, 1964.8743, 317.68, 319.58, -1, -9.99, -0.99}, {
       1964, 12, 1964.9563, 318.71, 319.49, -1, -9.99, -0.99}, {
       1965, 1, 1965.0411, 319.44, 319.4, -1, -9.99, -0.99}, {
       1965, 2, 1965.126, 320.44, 319.81, -1, -9.99, -0.99}, {
       1965, 3, 1965.2027, 320.89, 319.59, -1, -9.99, -0.99}, {
       1965, 4, 1965.2877, 322.14, 319.78, -1, -9.99, -0.99}, {
       1965, 5, 1965.3699, 322.17, 319.3, -1, -9.99, -0.99}, {
       1965, 6, 1965.4548, 321.87, 319.7, -1, -9.99, -0.99}, {
       1965, 7, 1965.537, 321.21, 320.51, -1, -9.99, -0.99}, {
       1965, 8, 1965.6219, 318.87, 320.15, -1, -9.99, -0.99}, {
       1965, 9, 1965.7068, 317.81, 320.77, -1, -9.99, -0.99}, {
       1965, 10, 1965.789, 317.3, 320.36, -1, -9.99, -0.99}, {
       1965, 11, 1965.874, 318.87, 320.78, -1, -9.99, -0.99}, {
       1965, 12, 1965.9562, 319.42, 320.2, -1, -9.99, -0.99}, {
       1966, 1, 1966.0411, 320.62, 320.59, -1, -9.99, -0.99}, {
       1966, 2, 1966.126, 321.6, 320.96, -1, -9.99, -0.99}, {
       1966, 3, 1966.2027, 322.39, 321.08, -1, -9.99, -0.99}, {
       1966, 4, 1966.2877, 323.7, 321.34, -1, -9.99, -0.99}, {
       1966, 5, 1966.3699, 324.08, 321.2, -1, -9.99, -0.99}, {
       1966, 6, 1966.4548, 323.75, 321.57, -1, -9.99, -0.99}, {
       1966, 7, 1966.537, 322.38, 321.68, -1, -9.99, -0.99}, {
       1966, 8, 1966.6219, 320.36, 321.65, -1, -9.99, -0.99}, {
       1966, 9, 1966.7068, 318.64, 321.6, -1, -9.99, -0.99}, {
       1966, 10, 1966.789, 318.1, 321.17, -1, -9.99, -0.99}, {
       1966, 11, 1966.874, 319.78, 321.7, -1, -9.99, -0.99}, {
       1966, 12, 1966.9562, 321.03, 321.81, -1, -9.99, -0.99}, {
       1967, 1, 1967.0411, 322.33, 322.29, -1, -9.99, -0.99}, {
       1967, 2, 1967.126, 322.5, 321.86, -1, -9.99, -0.99}, {
       1967, 3, 1967.2027, 323.04, 321.73, -1, -9.99, -0.99}, {
       1967, 4, 1967.2877, 324.42, 322.04, -1, -9.99, -0.99}, {
       1967, 5, 1967.3699, 325., 322.12, -1, -9.99, -0.99}, {
       1967, 6, 1967.4548, 324.09, 321.91, -1, -9.99, -0.99}, {
       1967, 7, 1967.537, 322.54, 321.84, -1, -9.99, -0.99}, {
       1967, 8, 1967.6219, 320.92, 322.21, -1, -9.99, -0.99}, {
       1967, 9, 1967.7068, 319.25, 322.23, -1, -9.99, -0.99}, {
       1967, 10, 1967.789, 319.39, 322.47, -1, -9.99, -0.99}, {
       1967, 11, 1967.874, 320.73, 322.65, -1, -9.99, -0.99}, {
       1967, 12, 1967.9562, 321.96, 322.75, -1, -9.99, -0.99}, {
       1968, 1, 1968.041, 322.57, 322.54, -1, -9.99, -0.99}, {
       1968, 2, 1968.1257, 323.15, 322.51, -1, -9.99, -0.99}, {
       1968, 3, 1968.2049, 323.89, 322.55, -1, -9.99, -0.99}, {
       1968, 4, 1968.2896, 325.02, 322.62, -1, -9.99, -0.99}, {
       1968, 5, 1968.3716, 325.57, 322.68, -1, -9.99, -0.99}, {
       1968, 6, 1968.4563, 325.36, 323.19, -1, -9.99, -0.99}, {
       1968, 7, 1968.5383, 324.14, 323.46, -1, -9.99, -0.99}, {
       1968, 8, 1968.623, 322.11, 323.43, -1, -9.99, -0.99}, {
       1968, 9, 1968.7077, 320.33, 323.32, -1, -9.99, -0.99}, {
       1968, 10, 1968.7896, 320.25, 323.33, -1, -9.99, -0.99}, {
       1968, 11, 1968.8743, 321.32, 323.25, -1, -9.99, -0.99}, {
       1968, 12, 1968.9563, 322.89, 323.69, -1, -9.99, -0.99}, {
       1969, 1, 1969.0411, 324., 323.97, -1, -9.99, -0.99}, {
       1969, 2, 1969.126, 324.42, 323.77, -1, -9.99, -0.99}, {
       1969, 3, 1969.2027, 325.63, 324.31, -1, -9.99, -0.99}, {
       1969, 4, 1969.2877, 326.66, 324.27, -1, -9.99, -0.99}, {
       1969, 5, 1969.3699, 327.38, 324.48, -1, -9.99, -0.99}, {
       1969, 6, 1969.4548, 326.71, 324.51, -1, -9.99, -0.99}, {
       1969, 7, 1969.537, 325.88, 325.17, -1, -9.99, -0.99}, {
       1969, 8, 1969.6219, 323.66, 324.97, -1, -9.99, -0.99}, {
       1969, 9, 1969.7068, 322.38, 325.37, -1, -9.99, -0.99}, {
       1969, 10, 1969.789, 321.78, 324.88, -1, -9.99, -0.99}, {
       1969, 11, 1969.874, 322.86, 324.79, -1, -9.99, -0.99}, {
       1969, 12, 1969.9562, 324.12, 324.91, -1, -9.99, -0.99}, {
       1970, 1, 1970.0411, 325.06, 325.03, -1, -9.99, -0.99}, {
       1970, 2, 1970.126, 325.98, 325.34, -1, -9.99, -0.99}, {
       1970, 3, 1970.2027, 326.93, 325.61, -1, -9.99, -0.99}, {
       1970, 4, 1970.2877, 328.13, 325.74, -1, -9.99, -0.99}, {
       1970, 5, 1970.3699, 328.08, 325.16, -1, -9.99, -0.99}, {
       1970, 6, 1970.4548, 327.67, 325.46, -1, -9.99, -0.99}, {
       1970, 7, 1970.537, 326.34, 325.63, -1, -9.99, -0.99}, {
       1970, 8, 1970.6219, 324.69, 325.99, -1, -9.99, -0.99}, {
       1970, 9, 1970.7068, 323.1, 326.1, -1, -9.99, -0.99}, {
       1970, 10, 1970.789, 323.06, 326.18, -1, -9.99, -0.99}, {
       1970, 11, 1970.874, 324.01, 325.95, -1, -9.99, -0.99}, {
       1970, 12, 1970.9562, 325.13, 325.93, -1, -9.99, -0.99}, {
       1971, 1, 1971.0411, 326.17, 326.14, -1, -9.99, -0.99}, {
       1971, 2, 1971.126, 326.68, 326.03, -1, -9.99, -0.99}, {
       1971, 3, 1971.2027, 327.17, 325.85, -1, -9.99, -0.99}, {
       1971, 4, 1971.2877, 327.79, 325.38, -1, -9.99, -0.99}, {
       1971, 5, 1971.3699, 328.93, 326., -1, -9.99, -0.99}, {
       1971, 6, 1971.4548, 328.57, 326.36, -1, -9.99, -0.99}, {
       1971, 7, 1971.537, 327.36, 326.65, -1, -9.99, -0.99}, {
       1971, 8, 1971.6219, 325.43, 326.74, -1, -9.99, -0.99}, {
       1971, 9, 1971.7068, 323.36, 326.37, -1, -9.99, -0.99}, {
       1971, 10, 1971.789, 323.56, 326.69, -1, -9.99, -0.99}, {
       1971, 11, 1971.874, 324.8, 326.75, -1, -9.99, -0.99}, {
       1971, 12, 1971.9562, 326.01, 326.82, -1, -9.99, -0.99}, {
       1972, 1, 1972.041, 326.77, 326.73, -1, -9.99, -0.99}, {
       1972, 2, 1972.1257, 327.63, 326.98, -1, -9.99, -0.99}, {
       1972, 3, 1972.2049, 327.75, 326.39, -1, -9.99, -0.99}, {
       1972, 4, 1972.2896, 329.72, 327.29, -1, -9.99, -0.99}, {
       1972, 5, 1972.3716, 330.07, 327.14, -1, -9.99, -0.99}, {
       1972, 6, 1972.4563, 329.09, 326.88, -1, -9.99, -0.99}, {
       1972, 7, 1972.5383, 328.04, 327.36, -1, -9.99, -0.99}, {
       1972, 8, 1972.623, 326.32, 327.67, -1, -9.99, -0.99}, {
       1972, 9, 1972.7077, 324.84, 327.87, -1, -9.99, -0.99}, {
       1972, 10, 1972.7896, 325.2, 328.33, -1, -9.99, -0.99}, {
       1972, 11, 1972.8743, 326.5, 328.45, -1, -9.99, -0.99}, {
       1972, 12, 1972.9563, 327.55, 328.36, -1, -9.99, -0.99}, {
       1973, 1, 1973.0411, 328.55, 328.51, -1, -9.99, -0.99}, {
       1973, 2, 1973.126, 329.56, 328.91, -1, -9.99, -0.99}, {
       1973, 3, 1973.2027, 330.3, 328.96, -1, -9.99, -0.99}, {
       1973, 4, 1973.2877, 331.5, 329.08, -1, -9.99, -0.99}, {
       1973, 5, 1973.3699, 332.48, 329.54, -1, -9.99, -0.99}, {
       1973, 6, 1973.4548, 332.07, 329.84, -1, -9.99, -0.99}, {
       1973, 7, 1973.537, 330.87, 330.15, -1, -9.99, -0.99}, {
       1973, 8, 1973.6219, 329.31, 330.63, -1, -9.99, -0.99}, {
       1973, 9, 1973.7068, 327.51, 330.55, -1, -9.99, -0.99}, {
       1973, 10, 1973.789, 327.18, 330.32, -1, -9.99, -0.99}, {
       1973, 11, 1973.874, 328.16, 330.13, -1, -9.99, -0.99}, {
       1973, 12, 1973.9562, 328.64, 329.45, -1, -9.99, -0.99}, {
       1974, 1, 1974.0411, 329.35, 329.32, -1, -9.99, -0.99}, {
       1974, 2, 1974.126, 330.71, 330.05, -1, -9.99, -0.99}, {
       1974, 3, 1974.2027, 331.48, 330.14, -1, -9.99, -0.99}, {
       1974, 4, 1974.2877, 332.65, 330.22, -1, -9.99, -0.99}, {
       1974, 5, 1974.375, 333.19, 330.21, 13, 0.31, 0.16}, {
       1974, 6, 1974.4583, 332.2, 329.79, 25, 0.37, 0.14}, {
       1974, 7, 1974.5417, 331.07, 330.21, 24, 0.24, 0.09}, {
       1974, 8, 1974.625, 329.15, 330.54, 26, 0.31, 0.12}, {
       1974, 9, 1974.7083, 327.33, 330.44, 22, 0.47, 0.19}, {
       1974, 10, 1974.7917, 327.28, 330.52, 24, 0.22, 0.09}, {
       1974, 11, 1974.875, 328.31, 330.5, 26, 0.43, 0.16}, {
       1974, 12, 1974.9583, 329.58, 330.56, 29, 0.29, 0.1}, {
       1975, 1, 1975.0417, 330.73, 330.84, 29, 0.43, 0.15}, {
       1975, 2, 1975.125, 331.46, 330.85, 26, 0.46, 0.17}, {
       1975, 3, 1975.2083, 331.94, 330.37, 17, 0.33, 0.15}, {
       1975, 4, 1975.2917, 333.11, 330.53, 23, 0.59, 0.24}, {
       1975, 5, 1975.375, 333.95, 330.97, 28, 0.35, 0.13}, {
       1975, 6, 1975.4583, 333.42, 331.01, 27, 0.48, 0.18}, {
       1975, 7, 1975.5417, 331.97, 331.11, 24, 0.45, 0.18}, {
       1975, 8, 1975.625, 329.95, 331.33, 24, 0.47, 0.18}, {
       1975, 9, 1975.7083, 328.5, 331.6, 22, 0.53, 0.22}, {
       1975, 10, 1975.7917, 328.36, 331.61, 11, 0.21, 0.12}, {
       1975, 11, 1975.875, 329.38, 331.57, 18, 0.31, 0.14}, {
       1975, 12, 1975.9583, 330.62, 331.6, -1, -9.99, -0.99}, {
       1976, 1, 1976.0417, 331.56, 331.67, 19, 0.23, 0.1}, {
       1976, 2, 1976.125, 332.74, 332.13, 22, 0.49, 0.2}, {
       1976, 3, 1976.2083, 333.36, 331.79, 18, 0.52, 0.23}, {
       1976, 4, 1976.2917, 334.74, 332.16, 18, 0.77, 0.35}, {
       1976, 5, 1976.375, 334.72, 331.75, 21, 0.56, 0.23}, {
       1976, 6, 1976.4583, 333.98, 331.56, 15, 0.21, 0.1}, {
       1976, 7, 1976.5417, 333.08, 332.22, 15, 0.24, 0.12}, {
       1976, 8, 1976.625, 330.68, 332.07, 23, 0.51, 0.2}, {
       1976, 9, 1976.7083, 328.96, 332.07, 13, 0.69, 0.37}, {
       1976, 10, 1976.7917, 328.72, 331.97, 19, 0.57, 0.25}, {
       1976, 11, 1976.875, 330.16, 332.35, 25, 0.36, 0.14}, {
       1976, 12, 1976.9583, 331.62, 332.6, 20, 0.38, 0.16}, {
       1977, 1, 1977.0417, 332.68, 332.77, 23, 0.4, 0.16}, {
       1977, 2, 1977.125, 333.17, 332.57, 20, 0.34, 0.15}, {
       1977, 3, 1977.2083, 334.96, 333.4, 23, 0.51, 0.21}, {
       1977, 4, 1977.2917, 336.14, 333.54, 20, 0.5, 0.21}, {
       1977, 5, 1977.375, 336.93, 333.99, 20, 0.31, 0.13}, {
       1977, 6, 1977.4583, 336.17, 333.79, 22, 0.4, 0.16}, {
       1977, 7, 1977.5417, 334.89, 334., 20, 0.23, 0.1}, {
       1977, 8, 1977.625, 332.56, 333.9, 18, 0.46, 0.21}, {
       1977, 9, 1977.7083, 331.29, 334.36, 19, 0.46, 0.2}, {
       1977, 10, 1977.7917, 331.28, 334.5, 23, 0.29, 0.12}, {
       1977, 11, 1977.875, 332.46, 334.69, 21, 0.43, 0.18}, {
       1977, 12, 1977.9583, 333.6, 334.59, 25, 0.36, 0.14}, {
       1978, 1, 1978.0417, 334.94, 335.01, 22, 0.52, 0.21}, {
       1978, 2, 1978.125, 335.26, 334.59, 25, 0.5, 0.19}, {
       1978, 3, 1978.2083, 336.66, 335., 28, 0.59, 0.21}, {
       1978, 4, 1978.2917, 337.69, 335.07, 18, 0.44, 0.2}, {
       1978, 5, 1978.375, 338.02, 335.07, 26, 0.46, 0.17}, {
       1978, 6, 1978.4583, 338.01, 335.59, 17, 0.31, 0.15}, {
       1978, 7, 1978.5417, 336.5, 335.65, 20, 0.32, 0.14}, {
       1978, 8, 1978.625, 334.42, 335.87, 19, 0.32, 0.14}, {
       1978, 9, 1978.7083, 332.36, 335.51, 17, 0.75, 0.35}, {
       1978, 10, 1978.7917, 332.45, 335.72, 21, 0.34, 0.14}, {
       1978, 11, 1978.875, 333.76, 335.99, 24, 0.25, 0.1}, {
       1978, 12, 1978.9583, 334.91, 335.89, 26, 0.33, 0.12}, {
       1979, 1, 1979.0417, 336.14, 336.22, 27, 0.55, 0.2}, {
       1979, 2, 1979.125, 336.69, 336., 25, 0.3, 0.11}, {
       1979, 3, 1979.2083, 338.27, 336.56, 21, 0.63, 0.26}, {
       1979, 4, 1979.2917, 338.82, 336.11, 24, 0.67, 0.26}, {
       1979, 5, 1979.375, 339.24, 336.24, 20, 0.5, 0.22}, {
       1979, 6, 1979.4583, 339.26, 336.83, 19, 0.35, 0.15}, {
       1979, 7, 1979.5417, 337.54, 336.69, 26, 0.59, 0.22}, {
       1979, 8, 1979.625, 335.72, 337.2, 24, 0.6, 0.23}, {
       1979, 9, 1979.7083, 333.97, 337.19, 19, 0.65, 0.29}, {
       1979, 10, 1979.7917, 334.24, 337.57, 25, 0.42, 0.16}, {
       1979, 11, 1979.875, 335.32, 337.59, 27, 0.3, 0.11}, {
       1979, 12, 1979.9583, 336.82, 337.83, 22, 0.23, 0.09}, {
       1980, 1, 1980.0417, 337.9, 338.13, 29, 0.57, 0.2}, {
       1980, 2, 1980.125, 338.34, 337.85, 26, 0.49, 0.18}, {
       1980, 3, 1980.2083, 340.07, 338.51, 23, 0.54, 0.22}, {
       1980, 4, 1980.2917, 340.93, 338.31, 24, 0.29, 0.11}, {
       1980, 5, 1980.375, 341.45, 338.4, 24, 0.54, 0.21}, {
       1980, 6, 1980.4583, 341.36, 338.85, 20, 0.39, 0.17}, {
       1980, 7, 1980.5417, 339.45, 338.56, 26, 0.6, 0.22}, {
       1980, 8, 1980.625, 337.67, 339.07, 16, 1.05, 0.5}, {
       1980, 9, 1980.7083, 336.25, 339.38, 15, 0.69, 0.34}, {
       1980, 10, 1980.7917, 336.14, 339.4, 26, 0.26, 0.1}, {
       1980, 11, 1980.875, 337.3, 339.46, 27, 0.26, 0.1}, {
       1980, 12, 1980.9583, 338.29, 339.26, 24, 0.25, 0.1}, {
       1981, 1, 1981.0417, 339.29, 339.42, 28, 0.39, 0.14}, {
       1981, 2, 1981.125, 340.55, 339.97, 25, 0.65, 0.25}, {
       1981, 3, 1981.2083, 341.63, 340.09, 25, 0.48, 0.19}, {
       1981, 4, 1981.2917, 342.6, 340., 26, 0.46, 0.17}, {
       1981, 5, 1981.375, 343.04, 339.98, 30, 0.19, 0.07}, {
       1981, 6, 1981.4583, 342.54, 340.05, 25, 0.29, 0.11}, {
       1981, 7, 1981.5417, 340.82, 339.92, 24, 0.46, 0.18}, {
       1981, 8, 1981.625, 338.48, 339.87, 25, 0.48, 0.18}, {
       1981, 9, 1981.7083, 336.95, 340.16, 27, 0.55, 0.2}, {
       1981, 10, 1981.7917, 337.05, 340.39, 25, 0.39, 0.15}, {
       1981, 11, 1981.875, 338.57, 340.74, 26, 0.31, 0.12}, {
       1981, 12, 1981.9583, 339.91, 340.85, 20, 0.28, 0.12}, {
       1982, 1, 1982.0417, 340.93, 341.09, 28, 0.3, 0.11}, {
       1982, 2, 1982.125, 341.76, 341.15, 24, 0.49, 0.19}, {
       1982, 3, 1982.2083, 342.77, 341.18, 17, 0.41, 0.19}, {
       1982, 4, 1982.2917, 343.96, 341.34, 7, 0.42, 0.31}, {
       1982, 5, 1982.375, 344.77, 341.68, 27, 0.37, 0.14}, {
       1982, 6, 1982.4583, 343.88, 341.42, 27, 0.37, 0.14}, {
       1982, 7, 1982.5417, 342.42, 341.61, 28, 0.35, 0.13}, {
       1982, 8, 1982.625, 340.24, 341.64, 25, 0.61, 0.23}, {
       1982, 9, 1982.7083, 338.38, 341.56, 21, 0.59, 0.25}, {
       1982, 10, 1982.7917, 338.41, 341.77, 26, 0.5, 0.19}, {
       1982, 11, 1982.875, 339.44, 341.58, 24, 0.39, 0.15}, {
       1982, 12, 1982.9583, 340.78, 341.7, 26, 0.3, 0.11}, {
       1983, 1, 1983.0417, 341.57, 341.75, 28, 0.47, 0.17}, {
       1983, 2, 1983.125, 342.79, 342.24, 24, 0.37, 0.15}, {
       1983, 3, 1983.2083, 343.37, 341.86, 27, 0.88, 0.32}, {
       1983, 4, 1983.2917, 345.4, 342.78, 23, 0.29, 0.12}, {
       1983, 5, 1983.375, 346.14, 342.97, 28, 0.51, 0.19}, {
       1983, 6, 1983.4583, 345.76, 343.29, 20, 0.3, 0.13}, {
       1983, 7, 1983.5417, 344.32, 343.56, 22, 0.57, 0.23}, {
       1983, 8, 1983.625, 342.51, 343.89, 16, 0.73, 0.35}, {
       1983, 9, 1983.7083, 340.46, 343.59, 15, 0.5, 0.25}, {
       1983, 10, 1983.7917, 340.53, 343.86, 20, 0.31, 0.13}, {
       1983, 11, 1983.875, 341.79, 343.92, 27, 0.33, 0.12}, {
       1983, 12, 1983.9583, 343.2, 344.12, 21, 0.25, 0.1}, {
       1984, 1, 1984.0417, 344.21, 344.32, 23, 0.4, 0.16}, {
       1984, 2, 1984.125, 344.92, 344.38, 23, 0.32, 0.13}, {
       1984, 3, 1984.2083, 345.68, 344.26, 19, 0.3, 0.13}, {
       1984, 4, 1984.2917, 347.14, 344.54, 2, -9.99, -0.99}, {
       1984, 5, 1984.375, 347.78, 344.59, 20, 0.42, 0.18}, {
       1984, 6, 1984.4583, 347.16, 344.72, 20, 0.31, 0.13}, {
       1984, 7, 1984.5417, 345.79, 345.02, 18, 0.33, 0.15}, {
       1984, 8, 1984.625, 343.74, 345.11, 12, 0.45, 0.25}, {
       1984, 9, 1984.7083, 341.59, 344.75, 14, 0.72, 0.37}, {
       1984, 10, 1984.7917, 341.86, 345.19, 12, 0.36, 0.2}, {
       1984, 11, 1984.875, 343.31, 345.4, 18, 0.41, 0.19}, {
       1984, 12, 1984.9583, 345., 345.88, 14, 0.53, 0.27}, {
       1985, 1, 1985.0417, 345.48, 345.59, 25, 0.38, 0.14}, {
       1985, 2, 1985.125, 346.41, 345.91, 15, 0.37, 0.18}, {
       1985, 3, 1985.2083, 347.91, 346.57, 17, 0.34, 0.16}, {
       1985, 4, 1985.2917, 348.66, 346.1, 21, 0.61, 0.25}, {
       1985, 5, 1985.375, 349.28, 346.13, 20, 0.51, 0.22}, {
       1985, 6, 1985.4583, 348.65, 346.22, 21, 0.34, 0.14}, {
       1985, 7, 1985.5417, 346.9, 346.08, 17, 0.36, 0.17}, {
       1985, 8, 1985.625, 345.26, 346.57, 16, 0.57, 0.27}, {
       1985, 9, 1985.7083, 343.47, 346.58, 24, 0.57, 0.22}, {
       1985, 10, 1985.7917, 343.35, 346.6, 20, 0.29, 0.13}, {
       1985, 11, 1985.875, 344.73, 346.82, 21, 0.4, 0.17}, {
       1985, 12, 1985.9583, 346.12, 347.04, 26, 0.62, 0.23}, {
       1986, 1, 1986.0417, 346.78, 346.81, 25, 0.31, 0.12}, {
       1986, 2, 1986.125, 347.48, 346.97, 25, 0.45, 0.17}, {
       1986, 3, 1986.2083, 348.25, 346.94, 16, 0.7, 0.34}, {
       1986, 4, 1986.2917, 349.86, 347.32, 19, 0.38, 0.17}, {
       1986, 5, 1986.375, 350.52, 347.42, 18, 0.31, 0.14}, {
       1986, 6, 1986.4583, 349.98, 347.6, 17, 0.25, 0.11}, {
       1986, 7, 1986.5417, 348.25, 347.43, 20, 0.47, 0.2}, {
       1986, 8, 1986.625, 346.17, 347.51, 18, 0.48, 0.21}, {
       1986, 9, 1986.7083, 345.48, 348.61, 17, 0.63, 0.29}, {
       1986, 10, 1986.7917, 344.82, 348.04, 25, 0.32, 0.12}, {
       1986, 11, 1986.875, 346.22, 348.28, 21, 0.3, 0.13}, {
       1986, 12, 1986.9583, 347.49, 348.36, 24, 0.35, 0.14}, {
       1987, 1, 1987.0417, 348.73, 348.66, 25, 0.46, 0.17}, {
       1987, 2, 1987.125, 348.92, 348.23, 25, 0.58, 0.22}, {
       1987, 3, 1987.2083, 349.81, 348.39, 21, 0.35, 0.15}, {
       1987, 4, 1987.2917, 351.4, 348.86, 26, 0.68, 0.25}, {
       1987, 5, 1987.375, 352.15, 349.09, 28, 0.37, 0.13}, {
       1987, 6, 1987.4583, 351.59, 349.28, 22, 0.21, 0.09}, {
       1987, 7, 1987.5417, 350.21, 349.51, 17, 0.73, 0.34}, {
       1987, 8, 1987.625, 348.2, 349.65, 15, 0.85, 0.42}, {
       1987, 9, 1987.7083, 346.66, 349.85, 23, 0.61, 0.24}, {
       1987, 10, 1987.7917, 346.72, 349.96, 22, 0.41, 0.17}, {
       1987, 11, 1987.875, 348.08, 350.14, 23, 0.33, 0.13}, {
       1987, 12, 1987.9583, 349.28, 350.14, 27, 0.2, 0.08}, {
       1988, 1, 1988.0417, 350.51, 350.49, 24, 0.21, 0.08}, {
       1988, 2, 1988.125, 351.7, 350.99, 23, 0.57, 0.23}, {
       1988, 3, 1988.2083, 352.5, 350.99, 25, 0.78, 0.3}, {
       1988, 4, 1988.2917, 353.67, 351.03, 27, 0.48, 0.18}, {
       1988, 5, 1988.375, 354.35, 351.22, 28, 0.37, 0.13}, {
       1988, 6, 1988.4583, 353.88, 351.55, 26, 0.3, 0.11}, {
       1988, 7, 1988.5417, 352.8, 352.15, 27, 0.49, 0.18}, {
       1988, 8, 1988.625, 350.49, 352.01, 26, 0.62, 0.23}, {
       1988, 9, 1988.7083, 348.97, 352.18, 26, 0.47, 0.18}, {
       1988, 10, 1988.7917, 349.37, 352.62, 26, 0.31, 0.12}, {
       1988, 11, 1988.875, 350.43, 352.53, 25, 0.2, 0.08}, {
       1988, 12, 1988.9583, 351.62, 352.52, 28, 0.36, 0.13}, {
       1989, 1, 1989.0417, 353.07, 352.99, 28, 0.45, 0.16}, {
       1989, 2, 1989.125, 353.43, 352.69, 25, 0.38, 0.15}, {
       1989, 3, 1989.2083, 354.08, 352.6, 29, 0.53, 0.19}, {
       1989, 4, 1989.2917, 355.72, 353.07, 28, 0.47, 0.17}, {
       1989, 5, 1989.375, 355.95, 352.78, 27, 0.49, 0.18}, {
       1989, 6, 1989.4583, 355.44, 353.06, 26, 0.42, 0.16}, {
       1989, 7, 1989.5417, 354.05, 353.38, 26, 0.41, 0.15}, {
       1989, 8, 1989.625, 351.84, 353.43, 25, 0.48, 0.18}, {
       1989, 9, 1989.7083, 350.09, 353.37, 24, 0.69, 0.27}, {
       1989, 10, 1989.7917, 350.33, 353.57, 25, 0.34, 0.13}, {
       1989, 11, 1989.875, 351.55, 353.68, 27, 0.36, 0.13}, {
       1989, 12, 1989.9583, 352.91, 353.84, 27, 0.48, 0.18}, {
       1990, 1, 1990.0417, 353.86, 353.78, 25, 0.34, 0.13}, {
       1990, 2, 1990.125, 355.1, 354.37, 28, 0.66, 0.24}, {
       1990, 3, 1990.2083, 355.75, 354.27, 27, 0.57, 0.21}, {
       1990, 4, 1990.2917, 356.38, 353.76, 28, 0.55, 0.2}, {
       1990, 5, 1990.375, 357.38, 354.23, 28, 0.3, 0.11}, {
       1990, 6, 1990.4583, 356.39, 354.02, 29, 0.4, 0.14}, {
       1990, 7, 1990.5417, 354.89, 354.24, 30, 0.89, 0.31}, {
       1990, 8, 1990.625, 353.06, 354.68, 22, 0.62, 0.25}, {
       1990, 9, 1990.7083, 351.38, 354.69, 27, 0.72, 0.26}, {
       1990, 10, 1990.7917, 351.69, 354.94, 28, 0.3, 0.11}, {
       1990, 11, 1990.875, 353.14, 355.18, 24, 0.2, 0.08}, {
       1990, 12, 1990.9583, 354.41, 355.26, 28, 0.51, 0.19}, {
       1991, 1, 1991.0417, 354.93, 354.9, 28, 0.51, 0.18}, {
       1991, 2, 1991.125, 355.82, 355.11, 26, 0.54, 0.2}, {
       1991, 3, 1991.2083, 357.33, 355.79, 30, 0.73, 0.25}, {
       1991, 4, 1991.2917, 358.77, 356.13, 30, 0.66, 0.23}, {
       1991, 5, 1991.375, 359.23, 356.1, 29, 0.52, 0.19}, {
       1991, 6, 1991.4583, 358.23, 355.88, 29, 0.3, 0.11}, {
       1991, 7, 1991.5417, 356.3, 355.69, 24, 0.46, 0.18}, {
       1991, 8, 1991.625, 353.97, 355.6, 23, 0.39, 0.15}, {
       1991, 9, 1991.7083, 352.34, 355.66, 27, 0.37, 0.14}, {
       1991, 10, 1991.7917, 352.43, 355.69, 27, 0.25, 0.09}, {
       1991, 11, 1991.875, 353.89, 355.87, 28, 0.25, 0.09}, {
       1991, 12, 1991.9583, 355.21, 356.02, 30, 0.34, 0.12}, {
       1992, 1, 1992.0417, 356.34, 356.29, 31, 0.6, 0.21}, {
       1992, 2, 1992.125, 357.21, 356.47, 27, 0.56, 0.21}, {
       1992, 3, 1992.2083, 357.97, 356.38, 24, 0.72, 0.28}, {
       1992, 4, 1992.2917, 359.22, 356.51, 27, 0.53, 0.2}, {
       1992, 5, 1992.375, 359.71, 356.52, 26, 0.74, 0.28}, {
       1992, 6, 1992.4583, 359.43, 357.07, 30, 0.49, 0.17}, {
       1992, 7, 1992.5417, 357.15, 356.58, 25, 0.63, 0.24}, {
       1992, 8, 1992.625, 354.99, 356.67, 24, 0.62, 0.24}, {
       1992, 9, 1992.7083, 353.01, 356.36, 25, 0.98, 0.38}, {
       1992, 10, 1992.7917, 353.41, 356.72, 29, 0.56, 0.2}, {
       1992, 11, 1992.875, 354.42, 356.48, 29, 0.34, 0.12}, {
       1992, 12, 1992.9583, 355.68, 356.5, 31, 0.32, 0.11}, {
       1993, 1, 1993.0417, 357.1, 357.06, 28, 0.58, 0.21}, {
       1993, 2, 1993.125, 357.42, 356.54, 28, 0.49, 0.18}, {
       1993, 3, 1993.2083, 358.59, 356.88, 30, 0.72, 0.25}, {
       1993, 4, 1993.2917, 359.39, 356.71, 25, 0.53, 0.2}, {
       1993, 5, 1993.375, 360.3, 357.14, 30, 0.45, 0.16}, {
       1993, 6, 1993.4583, 359.64, 357.24, 28, 0.35, 0.13}, {
       1993, 7, 1993.5417, 357.45, 356.87, 25, 0.78, 0.3}, {
       1993, 8, 1993.625, 355.76, 357.44, 27, 0.62, 0.23}, {
       1993, 9, 1993.7083, 354.14, 357.51, 23, 0.73, 0.29}, {
       1993, 10, 1993.7917, 354.23, 357.61, 28, 0.29, 0.11}, {
       1993, 11, 1993.875, 355.53, 357.65, 29, 0.26, 0.09}, {
       1993, 12, 1993.9583, 357.03, 357.92, 29, 0.28, 0.1}, {
       1994, 1, 1994.0417, 358.36, 358.25, 27, 0.33, 0.12}, {
       1994, 2, 1994.125, 359.04, 358.21, 25, 0.5, 0.19}, {
       1994, 3, 1994.2083, 360.11, 358.41, 29, 0.82, 0.29}, {
       1994, 4, 1994.2917, 361.36, 358.59, 28, 0.5, 0.18}, {
       1994, 5, 1994.375, 361.78, 358.59, 30, 0.45, 0.16}, {
       1994, 6, 1994.4583, 360.94, 358.57, 27, 0.3, 0.11}, {
       1994, 7, 1994.5417, 359.51, 358.91, 31, 0.41, 0.14}, {
       1994, 8, 1994.625, 357.59, 359.29, 24, 0.43, 0.17}, {
       1994, 9, 1994.7083, 355.86, 359.31, 24, 0.58, 0.23}, {
       1994, 10, 1994.7917, 356.21, 359.63, 28, 0.28, 0.1}, {
       1994, 11, 1994.875, 357.65, 359.8, 28, 0.51, 0.18}, {
       1994, 12, 1994.9583, 359.1, 359.96, 28, 0.46, 0.17}, {
       1995, 1, 1995.0417, 360.04, 359.91, 30, 0.47, 0.16}, {
       1995, 2, 1995.125, 361., 360.18, 28, 0.52, 0.19}, {
       1995, 3, 1995.2083, 361.98, 360.37, 29, 0.78, 0.28}, {
       1995, 4, 1995.2917, 363.44, 360.76, 29, 0.65, 0.23}, {
       1995, 5, 1995.375, 363.83, 360.72, 29, 0.66, 0.24}, {
       1995, 6, 1995.4583, 363.33, 360.98, 27, 0.37, 0.14}, {
       1995, 7, 1995.5417, 361.78, 361.1, 28, 0.36, 0.13}, {
       1995, 8, 1995.625, 359.33, 360.93, 24, 0.7, 0.28}, {
       1995, 9, 1995.7083, 358.32, 361.7, 24, 0.68, 0.26}, {
       1995, 10, 1995.7917, 358.14, 361.52, 29, 0.26, 0.09}, {
       1995, 11, 1995.875, 359.61, 361.75, 26, 0.24, 0.09}, {
       1995, 12, 1995.9583, 360.82, 361.67, 30, 0.36, 0.12}, {
       1996, 1, 1996.0417, 362.2, 361.98, 29, 0.38, 0.13}, {
       1996, 2, 1996.125, 363.36, 362.47, 28, 0.55, 0.2}, {
       1996, 3, 1996.2083, 364.28, 362.64, 28, 0.67, 0.24}, {
       1996, 4, 1996.2917, 364.69, 361.99, 29, 0.59, 0.21}, {
       1996, 5, 1996.375, 365.25, 362.23, 30, 0.57, 0.2}, {
       1996, 6, 1996.4583, 365.06, 362.82, 30, 0.38, 0.13}, {
       1996, 7, 1996.5417, 363.69, 362.98, 31, 0.32, 0.11}, {
       1996, 8, 1996.625, 361.55, 363.13, 27, 0.49, 0.18}, {
       1996, 9, 1996.7083, 359.69, 363.14, 25, 0.75, 0.29}, {
       1996, 10, 1996.7917, 359.72, 363.12, 29, 0.32, 0.11}, {
       1996, 11, 1996.875, 361.04, 363.18, 29, 0.29, 0.1}, {
       1996, 12, 1996.9583, 362.39, 363.23, 29, 0.36, 0.13}, {
       1997, 1, 1997.0417, 363.24, 363.03, 31, 0.4, 0.14}, {
       1997, 2, 1997.125, 364.21, 363.4, 28, 0.62, 0.22}, {
       1997, 3, 1997.2083, 364.65, 363.02, 31, 0.4, 0.14}, {
       1997, 4, 1997.2917, 366.49, 363.82, 21, 0.46, 0.19}, {
       1997, 5, 1997.375, 366.77, 363.87, 29, 0.53, 0.19}, {
       1997, 6, 1997.4583, 365.73, 363.56, 27, 0.23, 0.09}, {
       1997, 7, 1997.5417, 364.46, 363.74, 24, 0.47, 0.18}, {
       1997, 8, 1997.625, 362.4, 363.98, 25, 0.57, 0.22}, {
       1997, 9, 1997.7083, 360.44, 363.83, 26, 0.63, 0.24}, {
       1997, 10, 1997.7917, 360.98, 364.28, 27, 0.32, 0.12}, {
       1997, 11, 1997.875, 362.65, 364.71, 30, 0.31, 0.11}, {
       1997, 12, 1997.9583, 364.51, 365.28, 30, 0.41, 0.14}, {
       1998, 1, 1998.0417, 365.39, 365.19, 30, 0.43, 0.15}, {
       1998, 2, 1998.125, 366.1, 365.29, 28, 0.62, 0.23}, {
       1998, 3, 1998.2083, 367.36, 365.73, 31, 0.82, 0.28}, {
       1998, 4, 1998.2917, 368.79, 366.17, 29, 0.63, 0.22}, {
       1998, 5, 1998.375, 369.56, 366.68, 30, 0.77, 0.27}, {
       1998, 6, 1998.4583, 369.13, 366.95, 28, 0.24, 0.09}, {
       1998, 7, 1998.5417, 367.98, 367.29, 23, 0.65, 0.26}, {
       1998, 8, 1998.625, 366.1, 367.69, 30, 0.3, 0.1}, {
       1998, 9, 1998.7083, 364.16, 367.51, 28, 0.4, 0.14}, {
       1998, 10, 1998.7917, 364.54, 367.82, 30, 0.26, 0.09}, {
       1998, 11, 1998.875, 365.67, 367.7, 23, 0.25, 0.1}, {
       1998, 12, 1998.9583, 367.3, 368.05, 26, 0.36, 0.14}, {
       1999, 1, 1999.0417, 368.35, 368.13, 27, 0.47, 0.17}, {
       1999, 2, 1999.125, 369.28, 368.46, 21, 0.47, 0.2}, {
       1999, 3, 1999.2083, 369.84, 368.24, 25, 0.81, 0.31}, {
       1999, 4, 1999.2917, 371.15, 368.62, 29, 0.67, 0.24}, {
       1999, 5, 1999.375, 371.12, 368.31, 26, 0.59, 0.22}, {
       1999, 6, 1999.4583, 370.46, 368.3, 26, 0.44, 0.16}, {
       1999, 7, 1999.5417, 369.61, 368.93, 27, 0.63, 0.23}, {
       1999, 8, 1999.625, 367.06, 368.63, 25, 0.38, 0.14}, {
       1999, 9, 1999.7083, 364.95, 368.28, 28, 0.74, 0.27}, {
       1999, 10, 1999.7917, 365.52, 368.8, 31, 0.28, 0.1}, {
       1999, 11, 1999.875, 366.88, 368.86, 28, 0.25, 0.09}, {
       1999, 12, 1999.9583, 368.26, 368.93, 26, 0.29, 0.11}, {
       2000, 1, 2000.0417, 369.45, 369.24, 26, 0.48, 0.18}, {
       2000, 2, 2000.125, 369.71, 368.99, 19, 0.48, 0.21}, {
       2000, 3, 2000.2083, 370.75, 369.24, 30, 0.47, 0.16}, {
       2000, 4, 2000.2917, 371.98, 369.44, 27, 0.58, 0.21}, {
       2000, 5, 2000.375, 371.75, 368.87, 28, 0.53, 0.19}, {
       2000, 6, 2000.4583, 371.87, 369.66, 28, 0.24, 0.09}, {
       2000, 7, 2000.5417, 370.02, 369.36, 25, 0.31, 0.12}, {
       2000, 8, 2000.625, 368.27, 369.87, 27, 0.42, 0.15}, {
       2000, 9, 2000.7083, 367.15, 370.46, 25, 0.36, 0.14}, {
       2000, 10, 2000.7917, 367.18, 370.42, 30, 0.27, 0.09}, {
       2000, 11, 2000.875, 368.53, 370.48, 25, 0.3, 0.12}, {
       2000, 12, 2000.9583, 369.83, 370.46, 30, 0.38, 0.13}, {
       2001, 1, 2001.0417, 370.76, 370.6, 30, 0.56, 0.2}, {
       2001, 2, 2001.125, 371.69, 370.95, 26, 0.61, 0.23}, {
       2001, 3, 2001.2083, 372.63, 371.06, 26, 0.46, 0.17}, {
       2001, 4, 2001.2917, 373.55, 370.99, 29, 0.56, 0.2}, {
       2001, 5, 2001.375, 374.03, 371.11, 24, 0.41, 0.16}, {
       2001, 6, 2001.4583, 373.4, 371.17, 26, 0.37, 0.14}, {
       2001, 7, 2001.5417, 371.68, 371.08, 25, 0.62, 0.24}, {
       2001, 8, 2001.625, 369.78, 371.39, 27, 0.6, 0.22}, {
       2001, 9, 2001.7083, 368.34, 371.61, 28, 0.49, 0.18}, {
       2001, 10, 2001.7917, 368.61, 371.85, 31, 0.33, 0.11}, {
       2001, 11, 2001.875, 369.94, 371.92, 24, 0.24, 0.09}, {
       2001, 12, 2001.9583, 371.42, 372.09, 29, 0.4, 0.14}, {
       2002, 1, 2002.0417, 372.7, 372.48, 28, 0.52, 0.19}, {
       2002, 2, 2002.125, 373.37, 372.49, 28, 0.66, 0.24}, {
       2002, 3, 2002.2083, 374.3, 372.61, 24, 0.62, 0.24}, {
       2002, 4, 2002.2917, 375.19, 372.54, 29, 0.55, 0.19}, {
       2002, 5, 2002.375, 375.93, 372.98, 29, 0.57, 0.2}, {
       2002, 6, 2002.4583, 375.69, 373.46, 28, 0.46, 0.17}, {
       2002, 7, 2002.5417, 374.16, 373.58, 25, 0.47, 0.18}, {
       2002, 8, 2002.625, 372.03, 373.7, 28, 0.65, 0.24}, {
       2002, 9, 2002.7083, 370.92, 374.29, 23, 0.74, 0.3}, {
       2002, 10, 2002.7917, 370.73, 374.06, 31, 0.62, 0.21}, {
       2002, 11, 2002.875, 372.43, 374.52, 29, 0.43, 0.15}, {
       2002, 12, 2002.9583, 373.98, 374.72, 31, 0.46, 0.16}, {
       2003, 1, 2003.0417, 375.07, 374.82, 30, 0.51, 0.18}, {
       2003, 2, 2003.125, 375.82, 374.95, 27, 0.58, 0.21}, {
       2003, 3, 2003.2083, 376.64, 374.99, 28, 0.63, 0.23}, {
       2003, 4, 2003.2917, 377.92, 375.24, 27, 0.37, 0.14}, {
       2003, 5, 2003.375, 378.78, 375.73, 30, 0.78, 0.27}, {
       2003, 6, 2003.4583, 378.46, 376.21, 25, 0.39, 0.15}, {
       2003, 7, 2003.5417, 376.88, 376.37, 29, 0.7, 0.25}, {
       2003, 8, 2003.625, 374.57, 376.27, 23, 0.57, 0.23}, {
       2003, 9, 2003.7083, 373.34, 376.65, 25, 0.37, 0.14}, {
       2003, 10, 2003.7917, 373.31, 376.65, 30, 0.33, 0.12}, {
       2003, 11, 2003.875, 374.84, 376.99, 26, 0.45, 0.17}, {
       2003, 12, 2003.9583, 376.17, 376.93, 27, 0.4, 0.15}, {
       2004, 1, 2004.0417, 377.17, 376.96, 30, 0.45, 0.16}, {
       2004, 2, 2004.125, 378.05, 377.19, 29, 0.74, 0.26}, {
       2004, 3, 2004.2083, 379.06, 377.4, 27, 0.84, 0.31}, {
       2004, 4, 2004.2917, 380.54, 377.8, 26, 0.52, 0.19}, {
       2004, 5, 2004.375, 380.8, 377.66, 28, 0.61, 0.22}, {
       2004, 6, 2004.4583, 379.87, 377.57, 21, 0.47, 0.19}, {
       2004, 7, 2004.5417, 377.65, 377.12, 25, 0.5, 0.19}, {
       2004, 8, 2004.625, 376.17, 377.9, 16, 0.45, 0.21}, {
       2004, 9, 2004.7083, 374.43, 377.8, 15, 0.56, 0.28}, {
       2004, 10, 2004.7917, 374.63, 378., 29, 0.19, 0.07}, {
       2004, 11, 2004.875, 376.33, 378.49, 29, 0.62, 0.22}, {
       2004, 12, 2004.9583, 377.68, 378.48, 30, 0.29, 0.1}, {
       2005, 1, 2005.0417, 378.63, 378.37, 31, 0.32, 0.11}, {
       2005, 2, 2005.125, 379.91, 379.1, 24, 0.6, 0.24}, {
       2005, 3, 2005.2083, 380.95, 379.45, 26, 1.16, 0.44}, {
       2005, 4, 2005.2917, 382.48, 379.84, 26, 0.53, 0.2}, {
       2005, 5, 2005.375, 382.64, 379.49, 31, 0.61, 0.21}, {
       2005, 6, 2005.4583, 382.4, 380.07, 28, 0.21, 0.08}, {
       2005, 7, 2005.5417, 380.93, 380.38, 29, 0.38, 0.13}, {
       2005, 8, 2005.625, 378.93, 380.61, 26, 0.53, 0.2}, {
       2005, 9, 2005.7083, 376.89, 380.2, 27, 0.51, 0.19}, {
       2005, 10, 2005.7917, 377.19, 380.5, 14, 0.15, 0.08}, {
       2005, 11, 2005.875, 378.54, 380.69, 23, 0.45, 0.18}, {
       2005, 12, 2005.9583, 380.31, 381.09, 26, 0.39, 0.15}, {
       2006, 1, 2006.0417, 381.58, 381.33, 24, 0.31, 0.12}, {
       2006, 2, 2006.125, 382.4, 381.58, 25, 0.51, 0.2}, {
       2006, 3, 2006.2083, 382.86, 381.32, 29, 0.55, 0.2}, {
       2006, 4, 2006.2917, 384.8, 382.11, 25, 0.49, 0.19}, {
       2006, 5, 2006.375, 385.22, 382.06, 24, 0.45, 0.17}, {
       2006, 6, 2006.4583, 384.24, 381.93, 28, 0.43, 0.16}, {
       2006, 7, 2006.5417, 382.65, 382.1, 24, 0.32, 0.12}, {
       2006, 8, 2006.625, 380.6, 382.27, 27, 0.47, 0.17}, {
       2006, 9, 2006.7083, 379.04, 382.35, 25, 0.42, 0.16}, {
       2006, 10, 2006.7917, 379.33, 382.66, 23, 0.4, 0.16}, {
       2006, 11, 2006.875, 380.35, 382.52, 29, 0.39, 0.14}, {
       2006, 12, 2006.9583, 382.02, 382.84, 27, 0.38, 0.14}, {
       2007, 1, 2007.0417, 383.1, 382.88, 24, 0.76, 0.3}, {
       2007, 2, 2007.125, 384.12, 383.22, 21, 0.81, 0.34}, {
       2007, 3, 2007.2083, 384.81, 383.17, 27, 0.63, 0.23}, {
       2007, 4, 2007.2917, 386.73, 383.95, 25, 0.76, 0.29}, {
       2007, 5, 2007.375, 386.78, 383.56, 29, 0.64, 0.23}, {
       2007, 6, 2007.4583, 386.33, 384.06, 26, 0.42, 0.16}, {
       2007, 7, 2007.5417, 384.73, 384.25, 27, 0.44, 0.16}, {
       2007, 8, 2007.625, 382.24, 383.95, 22, 0.64, 0.26}, {
       2007, 9, 2007.7083, 381.2, 384.56, 21, 0.45, 0.19}, {
       2007, 10, 2007.7917, 381.37, 384.72, 29, 0.19, 0.07}, {
       2007, 11, 2007.875, 382.7, 384.9, 30, 0.31, 0.11}, {
       2007, 12, 2007.9583, 384.19, 385.07, 22, 0.34, 0.14}, {
       2008, 1, 2008.0417, 385.78, 385.54, 31, 0.56, 0.19}, {
       2008, 2, 2008.125, 386.06, 385.2, 26, 0.58, 0.22}, {
       2008, 3, 2008.2083, 386.28, 384.72, 30, 0.6, 0.21}, {
       2008, 4, 2008.2917, 387.33, 384.71, 22, 1.19, 0.49}, {
       2008, 5, 2008.375, 388.78, 385.69, 25, 0.57, 0.22}, {
       2008, 6, 2008.4583, 387.99, 385.68, 23, 0.49, 0.2}, {
       2008, 7, 2008.5417, 386.61, 386.04, 10, 0.96, 0.58}, {
       2008, 8, 2008.625, 384.32, 385.98, 25, 0.66, 0.25}, {
       2008, 9, 2008.7083, 383.41, 386.68, 27, 0.34, 0.12}, {
       2008, 10, 2008.7917, 383.21, 386.49, 23, 0.27, 0.11}, {
       2008, 11, 2008.875, 384.41, 386.59, 28, 0.29, 0.11}, {
       2008, 12, 2008.9583, 385.79, 386.64, 29, 0.27, 0.1}, {
       2009, 1, 2009.0417, 387.17, 386.86, 30, 0.38, 0.13}, {
       2009, 2, 2009.125, 387.7, 386.81, 26, 0.49, 0.18}, {
       2009, 3, 2009.2083, 389.04, 387.54, 28, 0.68, 0.25}, {
       2009, 4, 2009.2917, 389.76, 387.15, 29, 0.85, 0.3}, {
       2009, 5, 2009.375, 390.36, 387.24, 30, 0.51, 0.18}, {
       2009, 6, 2009.4583, 389.7, 387.46, 29, 0.6, 0.21}, {
       2009, 7, 2009.5417, 388.25, 387.77, 22, 0.31, 0.13}, {
       2009, 8, 2009.625, 386.29, 387.99, 28, 0.62, 0.22}, {
       2009, 9, 2009.7083, 384.95, 388.22, 28, 0.56, 0.2}, {
       2009, 10, 2009.7917, 384.64, 387.88, 30, 0.31, 0.11}, {
       2009, 11, 2009.875, 386.23, 388.36, 30, 0.29, 0.1}, {
       2009, 12, 2009.9583, 387.63, 388.44, 20, 0.47, 0.2}, {
       2010, 1, 2010.0417, 388.91, 388.62, 30, 0.92, 0.32}, {
       2010, 2, 2010.125, 390.41, 389.47, 20, 1.31, 0.56}, {
       2010, 3, 2010.2083, 391.37, 389.85, 25, 1.05, 0.4}, {
       2010, 4, 2010.2917, 392.67, 390.12, 26, 0.65, 0.24}, {
       2010, 5, 2010.375, 393.21, 390.09, 29, 0.65, 0.23}, {
       2010, 6, 2010.4583, 392.38, 390.1, 28, 0.42, 0.15}, {
       2010, 7, 2010.5417, 390.41, 389.93, 29, 0.47, 0.17}, {
       2010, 8, 2010.625, 388.54, 390.21, 26, 0.41, 0.16}, {
       2010, 9, 2010.7083, 387.03, 390.32, 29, 0.55, 0.19}, {
       2010, 10, 2010.7917, 387.43, 390.72, 31, 0.27, 0.09}, {
       2010, 11, 2010.875, 388.87, 390.99, 29, 0.42, 0.15}, {
       2010, 12, 2010.9583, 389.99, 390.8, 29, 0.47, 0.17}, {
       2011, 1, 2011.0417, 391.5, 391.19, 29, 0.88, 0.31}, {
       2011, 2, 2011.125, 392.05, 391.12, 28, 0.47, 0.17}, {
       2011, 3, 2011.2083, 392.8, 391.27, 29, 0.97, 0.35}, {
       2011, 4, 2011.2917, 393.44, 390.83, 28, 0.73, 0.26}, {
       2011, 5, 2011.375, 394.41, 391.24, 29, 0.93, 0.33}, {
       2011, 6, 2011.4583, 393.95, 391.64, 28, 0.45, 0.16}, {
       2011, 7, 2011.5417, 392.72, 392.25, 26, 0.71, 0.26}, {
       2011, 8, 2011.625, 390.33, 392.04, 27, 0.42, 0.15}, {
       2011, 9, 2011.7083, 389.28, 392.6, 26, 0.31, 0.12}, {
       2011, 10, 2011.7917, 389.19, 392.53, 30, 0.17, 0.06}, {
       2011, 11, 2011.875, 390.48, 392.64, 28, 0.26, 0.1}, {
       2011, 12, 2011.9583, 392.06, 392.86, 26, 0.37, 0.14}, {
       2012, 1, 2012.0417, 393.31, 393.07, 30, 0.77, 0.27}, {
       2012, 2, 2012.125, 394.04, 393.2, 26, 1.19, 0.45}, {
       2012, 3, 2012.2083, 394.59, 392.99, 30, 0.63, 0.22}, {
       2012, 4, 2012.2917, 396.38, 393.65, 29, 0.59, 0.21}, {
       2012, 5, 2012.375, 396.93, 393.73, 30, 0.5, 0.17}, {
       2012, 6, 2012.4583, 395.91, 393.63, 28, 0.59, 0.21}, {
       2012, 7, 2012.5417, 394.56, 394.12, 26, 0.3, 0.11}, {
       2012, 8, 2012.625, 392.59, 394.37, 30, 0.52, 0.18}, {
       2012, 9, 2012.7083, 391.32, 394.74, 26, 0.42, 0.16}, {
       2012, 10, 2012.7917, 391.27, 394.64, 28, 0.23, 0.08}, {
       2012, 11, 2012.875, 393.2, 395.25, 29, 0.53, 0.19}, {
       2012, 12, 2012.9583, 394.57, 395.27, 29, 0.44, 0.16}, {
       2013, 1, 2013.0417, 395.78, 395.62, 28, 0.6, 0.22}, {
       2013, 2, 2013.125, 397.03, 396.23, 25, 0.57, 0.22}, {
       2013, 3, 2013.2083, 397.66, 396.07, 30, 0.71, 0.25}, {
       2013, 4, 2013.2917, 398.64, 395.79, 22, 0.59, 0.24}, {
       2013, 5, 2013.375, 400.02, 396.64, 28, 0.37, 0.13}, {
       2013, 6, 2013.4583, 398.81, 396.48, 26, 0.43, 0.16}, {
       2013, 7, 2013.5417, 397.51, 397.12, 21, 0.52, 0.22}, {
       2013, 8, 2013.625, 395.39, 397.27, 27, 0.45, 0.16}, {
       2013, 9, 2013.7083, 393.72, 397.24, 26, 0.35, 0.13}, {
       2013, 10, 2013.7917, 393.9, 397.25, 28, 0.16, 0.06}, {
       2013, 11, 2013.875, 395.36, 397.35, 30, 0.6, 0.21}, {
       2013, 12, 2013.9583, 397.03, 397.78, 30, 0.48, 0.17}, {
       2014, 1, 2014.0417, 398.04, 397.74, 31, 0.49, 0.17}, {
       2014, 2, 2014.125, 398.27, 397.45, 27, 0.51, 0.19}, {
       2014, 3, 2014.2083, 399.91, 398.37, 22, 0.84, 0.34}, {
       2014, 4, 2014.2917, 401.51, 398.63, 26, 0.5, 0.19}, {
       2014, 5, 2014.375, 401.96, 398.56, 22, 0.51, 0.21}, {
       2014, 6, 2014.4583, 401.43, 399.1, 28, 0.36, 0.13}, {
       2014, 7, 2014.5417, 399.27, 398.85, 25, 0.55, 0.21}, {
       2014, 8, 2014.625, 397.18, 399.07, 22, 0.28, 0.12}, {
       2014, 9, 2014.7083, 395.54, 399.11, 21, 0.54, 0.23}, {
       2014, 10, 2014.7917, 396.16, 399.58, 24, 0.73, 0.29}, {
       2014, 11, 2014.875, 397.4, 399.49, 27, 0.37, 0.14}, {
       2014, 12, 2014.9583, 399.08, 399.81, 29, 0.6, 0.21}, {
       2015, 1, 2015.0417, 400.18, 399.92, 30, 0.55, 0.19}, {
       2015, 2, 2015.125, 400.55, 399.77, 28, 0.63, 0.23}, {
       2015, 3, 2015.2083, 401.74, 400.22, 24, 1.02, 0.4}, {
       2015, 4, 2015.2917, 403.35, 400.46, 26, 0.86, 0.32}, {
       2015, 5, 2015.375, 404.15, 400.7, 30, 0.32, 0.11}, {
       2015, 6, 2015.4583, 402.97, 400.65, 29, 0.47, 0.17}, {
       2015, 7, 2015.5417, 401.46, 401.11, 24, 0.57, 0.22}, {
       2015, 8, 2015.625, 399.11, 401.04, 28, 0.74, 0.27}, {
       2015, 9, 2015.7083, 397.82, 401.43, 25, 0.32, 0.12}, {
       2015, 10, 2015.7917, 398.49, 401.89, 28, 0.56, 0.2}, {
       2015, 11, 2015.875, 400.27, 402.24, 25, 0.58, 0.22}, {
       2015, 12, 2015.9583, 402.06, 402.72, 30, 0.67, 0.23}, {
       2016, 1, 2016.0417, 402.73, 402.45, 27, 0.56, 0.21}, {
       2016, 2, 2016.125, 404.25, 403.4, 25, 1.11, 0.43}, {
       2016, 3, 2016.2083, 405.06, 403.54, 28, 0.81, 0.29}, {
       2016, 4, 2016.2917, 407.6, 404.77, 23, 1.04, 0.41}, {
       2016, 5, 2016.375, 407.9, 404.41, 29, 0.5, 0.18}, {
       2016, 6, 2016.4583, 406.99, 404.59, 26, 0.6, 0.23}, {
       2016, 7, 2016.5417, 404.59, 404.24, 28, 0.88, 0.32}, {
       2016, 8, 2016.625, 402.45, 404.41, 24, 0.6, 0.23}, {
       2016, 9, 2016.7083, 401.23, 404.85, 25, 0.44, 0.17}, {
       2016, 10, 2016.7917, 401.79, 405.23, 29, 0.3, 0.11}, {
       2016, 11, 2016.875, 403.72, 405.74, 27, 0.72, 0.26}, {
       2016, 12, 2016.9583, 404.64, 405.33, 29, 0.44, 0.16}, {
       2017, 1, 2017.0417, 406.36, 406.04, 27, 0.68, 0.25}, {
       2017, 2, 2017.125, 406.66, 405.81, 26, 0.71, 0.27}, {
       2017, 3, 2017.2083, 407.54, 406.05, 24, 1.03, 0.4}, {
       2017, 4, 2017.2917, 409.22, 406.37, 26, 0.86, 0.32}, {
       2017, 5, 2017.375, 409.89, 406.37, 27, 0.57, 0.21}, {
       2017, 6, 2017.4583, 409.08, 406.68, 26, 0.54, 0.2}, {
       2017, 7, 2017.5417, 407.33, 407.01, 28, 0.61, 0.22}, {
       2017, 8, 2017.625, 405.32, 407.31, 29, 0.32, 0.12}, {
       2017, 9, 2017.7083, 403.57, 407.17, 26, 0.37, 0.14}, {
       2017, 10, 2017.7917, 403.82, 407.23, 27, 0.3, 0.11}, {
       2017, 11, 2017.875, 405.31, 407.36, 26, 0.41, 0.15}, {
       2017, 12, 2017.9583, 407., 407.71, 31, 0.57, 0.2}, {
       2018, 1, 2018.0417, 408.15, 407.82, 29, 0.55, 0.19}, {
       2018, 2, 2018.125, 408.52, 407.61, 28, 0.52, 0.19}, {
       2018, 3, 2018.2083, 409.59, 408.06, 29, 0.65, 0.23}, {
       2018, 4, 2018.2917, 410.45, 407.65, 21, 0.9, 0.38}, {
       2018, 5, 2018.375, 411.44, 407.98, 24, 0.86, 0.33}, {
       2018, 6, 2018.4583, 410.99, 408.6, 29, 0.61, 0.22}, {
       2018, 7, 2018.5417, 408.9, 408.59, 27, 0.46, 0.17}, {
       2018, 8, 2018.625, 407.16, 409.17, 31, 0.28, 0.1}, {
       2018, 9, 2018.7083, 405.71, 409.31, 29, 0.45, 0.16}, {
       2018, 10, 2018.7917, 406.19, 409.56, 30, 0.32, 0.11}, {
       2018, 11, 2018.875, 408.21, 410.24, 24, 0.56, 0.22}, {
       2018, 12, 2018.9583, 409.27, 409.99, 30, 0.5, 0.17}, {
       2019, 1, 2019.0417, 411.03, 410.66, 26, 1.26, 0.47}, {
       2019, 2, 2019.125, 411.96, 411., 27, 1.14, 0.42}, {
       2019, 3, 2019.2083, 412.18, 410.71, 28, 1.12, 0.4}, {
       2019, 4, 2019.2917, 413.54, 410.87, 27, 0.6, 0.22}, {
       2019, 5, 2019.375, 414.86, 411.47, 28, 0.5, 0.18}, {
       2019, 6, 2019.4583, 414.16, 411.73, 27, 0.36, 0.13}, {
       2019, 7, 2019.5417, 411.97, 411.6, 25, 0.82, 0.31}, {
       2019, 8, 2019.625, 410.18, 412.17, 29, 0.33, 0.12}, {
       2019, 9, 2019.7083, 408.76, 412.34, 30, 0.38, 0.13}, {
       2019, 10, 2019.7917, 408.75, 412.1, 29, 0.31, 0.11}, {
       2019, 11, 2019.875, 410.48, 412.51, 26, 0.4, 0.15}, {
       2019, 12, 2019.9583, 411.98, 412.71, 31, 0.4, 0.14}, {
       2020, 1, 2020.0417, 413.61, 413.24, 29, 0.73, 0.26}, {
       2020, 2, 2020.125, 414.34, 413.38, 28, 0.69, 0.25}, {
       2020, 3, 2020.2083, 414.74, 413.26, 26, 0.33, 0.12}, {
       2020, 4, 2020.2917, 416.45, 413.77, 28, 0.66, 0.24}, {
       2020, 5, 2020.375, 417.31, 413.92, 27, 0.61, 0.23}, {
       2020, 6, 2020.4583, 416.6, 414.17, 27, 0.44, 0.16}, {
       2020, 7, 2020.5417, 414.62, 414.24, 30, 0.55, 0.19}, {
       2020, 8, 2020.625, 412.78, 414.77, 25, 0.25, 0.1}, {
       2020, 9, 2020.7083, 411.52, 415.1, 29, 0.31, 0.11}, {
       2020, 10, 2020.7917, 411.51, 414.85, 30, 0.22, 0.08}, {
       2020, 11, 2020.875, 413.12, 415.15, 27, 0.81, 0.3}, {
       2020, 12, 2020.9583, 414.26, 414.98, 30, 0.47, 0.17}, {
       2021, 1, 2021.0417, 415.52, 415.15, 29, 0.44, 0.16}, {
       2021, 2, 2021.125, 416.75, 415.79, 28, 1.02, 0.37}, {
       2021, 3, 2021.2083, 417.64, 416.17, 28, 0.86, 0.31}, {
       2021, 4, 2021.2917, 419.05, 416.37, 24, 1.12, 0.44}, {
       2021, 5, 2021.375, 419.13, 415.73, 28, 0.9, 0.33}, {
       2021, 6, 2021.4583, 418.94, 416.51, 28, 0.65, 0.23}, {
       2021, 7, 2021.5417, 416.96, 416.59, 30, 0.71, 0.25}, {
       2021, 8, 2021.625, 414.47, 416.46, 26, 0.72, 0.27}, {
       2021, 9, 2021.7083, 413.3, 416.88, 27, 0.29, 0.11}, {
       2021, 10, 2021.7917, 413.93, 417.28, 29, 0.35, 0.12}, {
       2021, 11, 2021.875, 415.01, 417.04, 30, 0.36, 0.13}, {
       2021, 12, 2021.9583, 416.71, 417.43, 28, 0.48, 0.17}, {
       2022, 1, 2022.0417, 418.19, 417.81, 29, 0.73, 0.26}, {
       2022, 2, 2022.125, 419.28, 418.32, 27, 0.92, 0.34}, {
       2022, 3, 2022.2083, 418.81, 417.33, 30, 0.78, 0.27}, {
       2022, 4, 2022.2917, 420.23, 417.56, 28, 0.85, 0.31}, {
       2022, 5, 2022.375, 420.99, 417.6, 30, 0.76, 0.27}, {
       2022, 6, 2022.4583, 420.99, 418.56, 28, 0.3, 0.11}}, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`UnknownShape[False]], 20, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 824], 
     "Meta" -> Association[], "RowTarget" -> 20, "ColumnTarget" -> 10, 
     "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`UnknownShape[False]], 20, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
       TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 824], 
     "Path" -> {}, "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 1, 
     "DataRowCount" -> 824, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# \
--------------------------------------------------------------------"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# \
--------------------------------------------------------------------"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# USE OF NOAA GML DATA"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"# USE OF NOAA GML DATA"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"#"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"#"}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# These data are made freely available to the \
public and the"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# These data are made freely available to the \
public and the"}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# scientific community in the belief that their \
wide dissemination"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# scientific community in the belief that their \
wide dissemination"}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# will lead to greater understanding and new \
scientific insights."}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# will lead to greater understanding and new \
scientific insights."}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# The availability of these data does not \
constitute publication"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# The availability of these data does not \
constitute publication"}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{7}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# of the data.  NOAA relies on the ethics and \
integrity of the user to"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# of the data.  NOAA relies on the ethics and \
integrity of the user to"}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{8}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# ensure that GML receives fair credit for their \
work.  If the data"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# ensure that GML receives fair credit for their \
work.  If the data"}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{9}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# are obtained for potential use in a publication \
or presentation", ""}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# are obtained for potential use in a publication \
or presentation", ""}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{10}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# GML should be informed at the outset of the \
nature of this work."}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# GML should be informed at the outset of the \
nature of this work."}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{11}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# If the GML data are essential to the work", 
                    "or if an important"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# If the GML data are essential to the work", 
                    "or if an important"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{12}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# result or conclusion depends on the GML data", 
                    "co-authorship"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# result or conclusion depends on the GML data", 
                    "co-authorship"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{13}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# may be appropriate.  This should be discussed at \
an early stage in"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# may be appropriate.  This should be discussed at \
an early stage in"}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{14}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# the work.  Manuscripts using the GML data should \
be sent to GML"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# the work.  Manuscripts using the GML data should \
be sent to GML"}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{15}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{
                   "# for review before they are submitted for publication so \
we can"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# for review before they are submitted for \
publication so we can"}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{16}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# ensure that the quality and limitations of the \
data are accurately"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# ensure that the quality and limitations of the \
data are accurately"}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{17}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"# represented."}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"# represented."}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{18}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"#"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"#"}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{19}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"# Contact:   Pieter Tans (303 497 6678; \
pieter.tans@noaa.gov)"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"# Contact:   Pieter Tans (303 497 6678; \
pieter.tans@noaa.gov)"}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{20}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 824, 1], {1, 824 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 824, 1], {1, 824 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[824, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[824, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 824, 1], {1, 824 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 824, 1], {1, 824 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{559., {287.134033203125, 292.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{559., {287.134033203125, 292.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.86799211415975*^9, 3.867992146201097*^9, 
  3.867992252051359*^9, 3.867992858499382*^9, 3.868012172282959*^9},
 CellLabel->
  "Out[718]=",ExpressionUUID->"a358a190-ffb7-46b0-9f74-2997bd1d3d01"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Overwrite the existing data-sets and inspect the head object of the data.\
\>", "Text",
 CellChangeTimes->{{3.8679924419853487`*^9, 
  3.86799246537982*^9}},ExpressionUUID->"30ac88a1-288f-4682-855d-\
2bdd6656f92f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"globalTrend", " ", "=", " ", 
   RowBox[{"globalTrend", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"61", ";;"}], ",", " ", ";;"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"annualCO2", " ", "=", " ", 
   RowBox[{"annualCO2", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"56", ";;"}], ",", " ", ";;"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"monthlyCO2", " ", "=", " ", 
   RowBox[{"monthlyCO2", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"52", ";;"}], ",", " ", ";;"}], "]"}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.867992255305155*^9, 3.867992370599133*^9}, {
  3.867992404306806*^9, 3.8679924361732407`*^9}, {3.867992495028676*^9, 
  3.8679924953935413`*^9}, {3.8679925338096027`*^9, 3.8679925374563704`*^9}, {
  3.8679928251256227`*^9, 3.867992832990259*^9}},
 CellLabel->
  "In[719]:=",ExpressionUUID->"0e09c92e-9956-4132-b827-cde55dcdbcb2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"globalTrend", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{";;", "6"}], ",", " ", ";;"}], "]"}], "]"}], "//", 
  "Dataset"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"annualCO2", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{";;", "6"}], ",", " ", ";;"}], "]"}], "]"}], "//", 
  "Dataset"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"monthlyCO2", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{";;", "6"}], ",", " ", ";;"}], "]"}], "]"}], "//", 
  "Dataset"}]}], "Input",
 CellChangeTimes->{{3.867992474331367*^9, 3.8679924807941236`*^9}, {
  3.867992564092766*^9, 3.867992570261794*^9}, {3.867992635180563*^9, 
  3.867992652281322*^9}},
 CellLabel->
  "In[722]:=",ExpressionUUID->"49840f60-da62-4d2a-9108-a14fb2963c9c"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> {{"year", "month", "day", "smoothed", "trend"}, {
       2012, 1, 1, 392.93, 391.48}, {2012, 1, 2, 392.96, 391.49}, {
       2012, 1, 3, 392.99, 391.49}, {2012, 1, 4, 393.01, 391.5}, {
       2012, 1, 5, 393.04, 391.51}}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MatrixShape[6, 5], 6, 5, {All}], "InitialType" -> 
     TypeSystem`Vector[
       TypeSystem`Vector[TypeSystem`AnyType, 5], 6], "Meta" -> Association[], 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MatrixShape[6, 5], 6, 5, {All}], "Type" -> 
     TypeSystem`Vector[
       TypeSystem`Vector[TypeSystem`AnyType, 5], 6], "Path" -> {}, 
     "DisplayedRowCount" -> 6, "DisplayedColumnCount" -> 5, "DataRowCount" -> 
     6, "DataColumnCount" -> 5, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation["year", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["month", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["day", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["smoothed", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["trend", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2012"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["392.93"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["391.48"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2012"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["392.96"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["391.49"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2012"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["392.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["391.49"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2012"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["393.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["391.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2012"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["393.04"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["391.51"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{327., {87.634033203125, 93.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{327., {87.634033203125, 93.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8679924812006397`*^9, {3.8679925660179567`*^9, 3.8679925705540447`*^9}, {
   3.8679926483556337`*^9, 3.867992652758288*^9}, {3.867992836000011*^9, 
   3.867992859111125*^9}, 3.8680121725645933`*^9},
 CellLabel->
  "Out[722]=",ExpressionUUID->"e7ec344d-5dad-4a9e-81c5-008977cee0bb"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> {{"year", "mean", "unc"}, {1959, 315.98, 0.12}, {
       1960, 316.91, 0.12}, {1961, 317.64, 0.12}, {1962, 318.45, 0.12}, {
       1963, 318.99, 0.12}}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MatrixShape[6, 3], 6, 3, {All}], "InitialType" -> 
     TypeSystem`Vector[
       TypeSystem`Vector[TypeSystem`AnyType, 3], 6], "Meta" -> Association[], 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MatrixShape[6, 3], 6, 3, {All}], "Type" -> 
     TypeSystem`Vector[
       TypeSystem`Vector[TypeSystem`AnyType, 3], 6], "Path" -> {}, 
     "DisplayedRowCount" -> 6, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     6, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation["year", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["mean", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["unc", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1959"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["315.98"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1960"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["316.91"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1961"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["317.64"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1962"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["318.45"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1963"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["318.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{191., {87.634033203125, 93.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{191., {87.634033203125, 93.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8679924812006397`*^9, {3.8679925660179567`*^9, 3.8679925705540447`*^9}, {
   3.8679926483556337`*^9, 3.867992652758288*^9}, {3.867992836000011*^9, 
   3.867992859111125*^9}, 3.8680121725709963`*^9},
 CellLabel->
  "Out[723]=",ExpressionUUID->"19902421-5886-4eda-9899-d6c47c1175bb"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> {{
       "year", "month", "decimal date", "average", "deseasonalized", "ndays", 
        "sdev", "unc"}, {
       1958, 3, 1958.2027, 315.7, 314.43, -1, -9.99, -0.99}, {
       1958, 4, 1958.2877, 317.45, 315.16, -1, -9.99, -0.99}, {
       1958, 5, 1958.3699, 317.51, 314.71, -1, -9.99, -0.99}, {
       1958, 6, 1958.4548, 317.24, 315.14, -1, -9.99, -0.99}, {
       1958, 7, 1958.537, 315.86, 315.18, -1, -9.99, -0.99}}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MatrixShape[6, 8], 6, 8, {All}], "InitialType" -> 
     TypeSystem`Vector[
       TypeSystem`Vector[TypeSystem`AnyType, 8], 6], "Meta" -> Association[], 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MatrixShape[6, 8], 6, 8, {All}], "Type" -> 
     TypeSystem`Vector[
       TypeSystem`Vector[TypeSystem`AnyType, 8], 6], "Path" -> {}, 
     "DisplayedRowCount" -> 6, "DisplayedColumnCount" -> 8, "DataRowCount" -> 
     6, "DataColumnCount" -> 8, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation["year", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["month", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["decimal date", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["average", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["deseasonalized", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{156.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ndays", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["sdev", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["unc", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1958"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1958.2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["315.7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["314.43"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-9.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1958"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1958.29"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["317.45"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["315.16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-9.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1958"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1958.37"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["317.51"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["314.71"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-9.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1958"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1958.45"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["317.24"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["315.14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-9.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1958"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1958.54"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["315.86"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["315.18"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-9.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{714., {87.634033203125, 93.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{714., {87.634033203125, 93.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8679924812006397`*^9, {3.8679925660179567`*^9, 3.8679925705540447`*^9}, {
   3.8679926483556337`*^9, 3.867992652758288*^9}, {3.867992836000011*^9, 
   3.867992859111125*^9}, 3.868012172643674*^9},
 CellLabel->
  "Out[724]=",ExpressionUUID->"dbdc9507-e258-4af6-84e8-6b1f29b986d9"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["CO2 Global Trend", "Section",
 CellChangeTimes->{{3.867825844091548*^9, 
  3.867825882440116*^9}},ExpressionUUID->"706c7f62-293b-4815-a5b4-\
8b5d757d440c"],

Cell[CellGroupData[{

Cell["\<\
Estimated CO2 Daily Global Seasonal Cycle and Trend (ppm) over the last ten \
years.\
\>", "Subsubsection",
 CellChangeTimes->{{3.867825886403988*^9, 3.867825889056038*^9}, {
  3.867836543969459*^9, 
  3.8678365467569103`*^9}},ExpressionUUID->"1aecfa1d-a14c-4106-9075-\
bb1bbce91172"],

Cell["\<\
The global trend in CO2 over the last ten years are displayed below.\
\>", "Text",
 CellChangeTimes->{{3.867825944812839*^9, 
  3.8678259556364813`*^9}},ExpressionUUID->"dbd3b72a-42b3-4dd8-876b-\
dd26ca22dbb7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"globalTrend", "//", "Dimensions"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"globalTrend", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{";;", "6"}], ",", ";;"}], "]"}], "]"}], "//", 
  "Dataset"}]}], "Input",
 CellChangeTimes->{{3.86782600811178*^9, 3.867826020416176*^9}, {
   3.8678374384764977`*^9, 3.867837448048459*^9}, 3.867996549357376*^9},
 CellLabel->
  "In[725]:=",ExpressionUUID->"0eed737c-2745-4968-801a-d50718421090"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3860", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{{3.867826012812479*^9, 3.8678260209346533`*^9}, 
   3.867837129976507*^9, {3.867837439307169*^9, 3.867837449066929*^9}, 
   3.8679099311786213`*^9, 3.867909993273547*^9, 3.867911518978271*^9, 
   3.867992859448451*^9, 3.867996549689247*^9, 3.868012172760528*^9},
 CellLabel->
  "Out[725]=",ExpressionUUID->"dbeb31d4-33e2-4bda-8acf-538c0e485a18"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> {{"year", "month", "day", "smoothed", "trend"}, {
       2012, 1, 1, 392.93, 391.48}, {2012, 1, 2, 392.96, 391.49}, {
       2012, 1, 3, 392.99, 391.49}, {2012, 1, 4, 393.01, 391.5}, {
       2012, 1, 5, 393.04, 391.51}}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MatrixShape[6, 5], 6, 5, {All}], "InitialType" -> 
     TypeSystem`Vector[
       TypeSystem`Vector[TypeSystem`AnyType, 5], 6], "Meta" -> Association[], 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MatrixShape[6, 5], 6, 5, {All}], "Type" -> 
     TypeSystem`Vector[
       TypeSystem`Vector[TypeSystem`AnyType, 5], 6], "Path" -> {}, 
     "DisplayedRowCount" -> 6, "DisplayedColumnCount" -> 5, "DataRowCount" -> 
     6, "DataColumnCount" -> 5, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation["year", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["month", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["day", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["smoothed", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["trend", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2012"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["392.93"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["391.48"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2012"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["392.96"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["391.49"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2012"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["392.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["391.49"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2012"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["393.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["391.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2012"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["393.04"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["391.51"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{327., {87.634033203125, 93.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{327., {87.634033203125, 93.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.867826012812479*^9, 3.8678260209346533`*^9}, 
   3.867837129976507*^9, {3.867837439307169*^9, 3.867837449066929*^9}, 
   3.8679099311786213`*^9, 3.867909993273547*^9, 3.867911518978271*^9, 
   3.867992859448451*^9, 3.867996549689247*^9, 3.868012172767151*^9},
 CellLabel->
  "Out[726]=",ExpressionUUID->"cc9e9672-9924-475f-ad3c-5a18d9faf517"]
}, Open  ]],

Cell["\<\
Create the variables for smoothed and trend data from the data-set.\
\>", "Text",
 CellChangeTimes->{{3.867838381963663*^9, 
  3.867838393764736*^9}},ExpressionUUID->"afa74eab-183f-423e-a1df-\
37b971c9460a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"smoothed", " ", "=", " ", 
    RowBox[{"globalTrend", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"2", ";;"}], ",", "4"}], "]"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"All", " ", "rows"}], ",", " ", 
    RowBox[{"4", "th", " ", "column"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trend", " ", "=", " ", 
   RowBox[{"globalTrend", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"2", ";;"}], ",", "5"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.867837414776115*^9, 3.8678374263776493`*^9}, {
  3.867837460208851*^9, 3.867837497353292*^9}, {3.867841461087392*^9, 
  3.867841469118115*^9}},
 CellLabel->
  "In[727]:=",ExpressionUUID->"bac75394-5e4d-44b3-b0ac-f5dc2ca49d59"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"summary", "[", "smoothed", "]"}]], "Input",
 CellChangeTimes->{{3.867838911372118*^9, 3.8678389334829073`*^9}, {
  3.8678414547072287`*^9, 3.867841456102643*^9}},
 CellLabel->
  "In[729]:=",ExpressionUUID->"11b29e61-7ec3-4cbb-83a5-6eaae03411c0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "389.16`", ",", "397.88`", ",", "404.7536175174916`", ",", "411.33`", ",", 
   "419.1`"}], "}"}]], "Output",
 CellChangeTimes->{{3.867841456675497*^9, 3.867841471351697*^9}, 
   3.867909931339497*^9, 3.867909993458296*^9, 3.867911519141295*^9, 
   3.867992859588306*^9, 3.868012172881283*^9},
 CellLabel->
  "Out[729]=",ExpressionUUID->"7eefc8ac-8de5-43bc-8227-55c26a604db2"]
}, Open  ]],

Cell["Create tick list for the plot.", "Text",
 CellChangeTimes->{{3.867838351506423*^9, 
  3.867838358044836*^9}},ExpressionUUID->"d922b55c-30a4-4d73-acfc-\
b8c95ba0f15d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{"100", ",", " ", "3750", ",", " ", "365"}], "]"}]], "Input",
 CellChangeTimes->{{3.867838015247653*^9, 3.867838040431737*^9}, {
  3.8678382238307323`*^9, 3.867838225140215*^9}},
 CellLabel->
  "In[730]:=",ExpressionUUID->"15585cf6-7582-48cc-9d4b-41cc2aa2e36f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "100", ",", "465", ",", "830", ",", "1195", ",", "1560", ",", "1925", ",", 
   "2290", ",", "2655", ",", "3020", ",", "3385", ",", "3750"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.867838085350504*^9, 3.8678382255730762`*^9, 
  3.8679099313465567`*^9, 3.867909993465781*^9, 3.8679115191486473`*^9, 
  3.867992859597447*^9, 3.868012172936254*^9},
 CellLabel->
  "Out[730]=",ExpressionUUID->"fc408b48-763a-455b-bd34-3443ee3a14ad"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"globalTrend", "[", 
   RowBox[{"[", 
    RowBox[{"100", ",", "1"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"globalTrend", "[", 
   RowBox[{"[", 
    RowBox[{"465", ",", "1"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"globalTrend", "[", 
   RowBox[{"[", 
    RowBox[{"830", ",", "1"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"globalTrend", "[", 
   RowBox[{"[", 
    RowBox[{"1195", ",", "1"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"globalTrend", "[", 
   RowBox[{"[", 
    RowBox[{"1560", ",", "1"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"globalTrend", "[", 
   RowBox[{"[", 
    RowBox[{"1925", ",", "1"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"globalTrend", "[", 
   RowBox[{"[", 
    RowBox[{"2290", ",", "1"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"globalTrend", "[", 
   RowBox[{"[", 
    RowBox[{"2655", ",", "1"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"globalTrend", "[", 
   RowBox[{"[", 
    RowBox[{"3020", ",", "1"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"globalTrend", "[", 
   RowBox[{"[", 
    RowBox[{"3385", ",", "1"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"globalTrend", "[", 
   RowBox[{"[", 
    RowBox[{"3750", ",", "1"}], "]"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.867837768692786*^9, 3.8678378396965103`*^9}, {
  3.867837923879203*^9, 3.867838003762184*^9}, {3.867838055005494*^9, 
  3.867838112549087*^9}, {3.8678382315934353`*^9, 3.867838235775909*^9}, {
  3.867838360372644*^9, 3.867838367209137*^9}},
 CellLabel->
  "In[731]:=",ExpressionUUID->"a6590134-b747-4f3b-9dbc-6e44449f0ec6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"smoothed", " ", "=", " ", 
    RowBox[{"globalTrend", "[", 
     RowBox[{"[", 
      RowBox[{";;", ",", "4"}], "]"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"All", " ", "rows"}], ",", " ", 
    RowBox[{"4", "th", " ", "column"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trend", " ", "=", " ", 
   RowBox[{"globalTrend", "[", 
    RowBox[{"[", 
     RowBox[{";;", ",", "5"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.867837414776115*^9, 3.8678374263776493`*^9}, {
  3.867837460208851*^9, 3.867837497353292*^9}},
 CellLabel->
  "In[742]:=",ExpressionUUID->"caa61e4a-8b5a-4db2-b78f-6aac3e3c1fe4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tickList", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"100", ",", " ", "\"\<2012\>\""}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"465", ",", " ", "\"\<2013\>\""}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"830", ",", " ", "\"\<2014\>\""}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1195", ",", " ", "\"\<2015\>\""}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1560", ",", " ", "\"\<2016\>\""}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1925", ",", " ", "\"\<2017\>\""}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"2290", ",", " ", "\"\<2018\>\""}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"2655", ",", " ", "\"\<2019\>\""}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"3020", ",", " ", "\"\<2020\>\""}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"3385", ",", "\"\<2021\>\""}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"3750", ",", "\"\<2022\>\""}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"trend", ",", " ", "smoothed"}], "}"}], ",", "  ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Smoothed\>\"", ",", " ", "\"\<Trend\>\""}], " ", "}"}]}], 
   ",", " ", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Global Trend and Smoothed Effects in \
CO\!\(\*StyleBox[\"2\",FontSize->7]\)\>\""}], ",", "  ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Year\>\"", ",", " ", 
      "\"\<CO\!\(\*StyleBox[\"2\",FontSize->7]\) (ppm)\>\""}], "}"}]}], ",", 
   " ", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"tickList", ",", " ", "Automatic"}], "}"}]}], ",", " ", 
   RowBox[{"GridLines", "->", "Automatic"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.867837501770321*^9, 3.867837544921441*^9}, {
  3.8678378822248573`*^9, 3.8678379001369963`*^9}, {3.8678381433809958`*^9, 
  3.867838207249673*^9}, {3.867838243909531*^9, 3.8678383358946333`*^9}, {
  3.867838478273438*^9, 3.867838491623568*^9}, {3.8678385432123747`*^9, 
  3.8678385840098143`*^9}, {3.8678386218029537`*^9, 3.86783862279856*^9}, {
  3.8678386558670263`*^9, 3.8678386676868687`*^9}, {3.86801228432514*^9, 
  3.86801228479055*^9}, {3.8680123214104147`*^9, 3.8680123218553467`*^9}, {
  3.8680127098535957`*^9, 3.8680127267185087`*^9}},
 CellLabel->
  "In[851]:=",ExpressionUUID->"efac08ae-8968-413b-b6e9-9c02b36c781b"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{}, {}, {
       RGBColor[0.368417, 0.506779, 0.709798], 
       PointSize[
        NCache[
         Rational[1, 360], 0.002777777777777778]], 
       AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxd3XF8F/R+3/vfHHOZYzazzHG9XJd5ud7My/VmlrnMUferZTaz1KWW2tRS
m8PhcHI4HE7EiBERf0DAiBF/QIAAAX6EAAECyxxzmWMus8xljrrMMZs55lLH
XOaYyxx1mWNux/t+v/J48Paf3+N5eKQ5P96vj9/+00f/9PIfP/G9WwqFwk//
VKHw7af/KTb83vo5555vL4pVxf7Wn73td2dcHZ6jz3Y8t7jsjXd/v3bG88I1
xeG7t/6HX57xPcU5537h99bPeH743uIzP/l1x2ZcG76v+DuXfvLPjBcU/8y3
v3DG94frij/57cN3v4D/bPHbr/sLM34g/DPFb39d64wXhv9c8cD+n/wz4weL
X9X+5BfO+M+H64tPfPsXMOO/UPz2685Zjx8K/8Xit7/uZ2e8qLjy239m/LPh
h4u//fs/+YUz/kvhYvFPffsXgEvF4ov6C/ef/9zNLv1c8dtff9uL/PkjxZ/5
9h9cChd+vvjt3Mtm/vzni9d+8te9debPF9/s0mL1NvPnf1l9zfx5uPCoPjfw
5+HCL6i3mT//BfU28+cNN7vUoN5m/vyvqK+ZPw8XHlNvM3/+mPqa+fNfvNml
X1RvL/HnS9QXLoULv6S+Zv78l9TXzJ8/frNLj6uvmT//q+pr5s/DhUb1tdEu
hkuN6g2PNKovXPjlm138ZfU18/O/rL5mfj5ceEJ9zfz8E+rrZX4+PPKE+sKF
X1FfuBgu/Yr6mvn5X1FfMz+/9GYXl6qvmZ9f6k9+Plz4VfWFi7+qnnApPPKr
6mvm559UTzM/Hy49qb5mfv5J9TTz8792s4u/pr428fO/pp7wSLjQpL5wsUk9
zfx8eKRJfc38/K+rp5mfD5d+XT1t5ud/XT3hwlM3u/iUesKlp9TTzM8/pX5m
fv43bnbxN9TTzM//hvrZws+HC8vUEy4uUz+4FB5Zpp5mfv431c/Mz4dLv6me
Zn7+N/XZwc8/fbOLT6snXHpa/eCRp9XPzM//1s0u/pb6mfn531I/Mz8fLjSr
H1zTrH628j8v3NysfnCpWf3gSnikWf3giWb1gwvfUS+4Jlz8jvrZxu//jnrB
pXDlO+oHj3xH/eCJ76gXXFh+s2uWqx9cXK5eXuH3h0vL1Q+uLFcveCQ8sVz9
4MJ31Quu+a56wcVw83f12cnv/656wZXwyHfVD574rnrBhRXqBdeEiyvUC25e
oV5mfn+4skK9vMrvX6Fe8MQK9YEL37vZNd9TL7j4PfWCm7+nPnApXPmeetnO
7/+e+sAT4cJK9YJrVqoXXFypPnBzuLRSveDKSvXxGr9/pfrAE+HC99UHrvm+
+sDF76sP3BwufV994Mr39dnF7/++esAT4UKL+sA1LeoDF1vUA24Ol1rUB660
qIeZ3x+eaFEfr/P7f6A+cM0P1AMuhpt/oD5w6QfqA1d+oB7wSHjiB+pjB79/
lXrANavUAy6uUg+4OVxapR5wZZV6wCOr1MMb/P5w4YfqAdf8UD3g4g/VA24O
l36oHnDlh+oBj/xQn2V+f7iwWj3gmtXqARdXqwfcvFr741K4slo94JHV2n/m
96/W/jv5/T+62TU/Ug+4+CPtj5t/pP1xKVz5kXrAIz/S/njiR9p/F79/jfbH
NeHiGvWAm9dof1xao/1xJTyyRj3giTXafze//8faH9f8WPvjYrj5x9ofl36s
/XHlx9ofj/xYn938/nChVfvj6lbtj2tatT+uCxdbtT9ubNX+uLlV++PWVu29
h//+4XKr9seVVu2Ph1q1Nx5p1d54LDzRqv3xVKv238v3f0Z74+pntDeuCdc9
o/1x8RntjRuf0d64+RntvY/vHy49o/1x+RntjSvPaG889Iz2xiPhsWe0P554
Rp89fP9ntDcurNXeuHqt9sU14bq12hsX12pv3LhWe+Pmtdp3P98/XFqrvXF5
rfbGlbXaGw+t1b54JDy2VnvjibXa+wDff632xoVntS+uflb74ppw3bPaGxef
1d648Vnte5Dv/6z2xa3h0rPaG5ef1d648qz2xUPPal888qw+e/n+4YlntTee
elZ740Kb9sXVbdoX14Tr2rQ3LrZpb9zYpn0P8f3btC9ubdO+uBQut2lvXGnT
vnioTfvikTbte5jv36Z98UR4qk1748Jz2hdXP6d9cc1z2hfXhYvPae8jfP/n
tC9ufk774tbntC8uPad9cTlceU5746Hn/J/z/Z/TvnjsOe2LJ57TvngqXFin
fXH1Ou2La9ZpX1y3Tvse5fuv0764Mdy8Tvvi1nXaF5fWaV9cXqd9cSU8tE57
9/H912lfPLZO++KJddoXT63Tvrjw/M2ufl774prnte8xvv/z2hcXn9e+uPF5
7Yubw63Pa19cel774vLz+uzn+z+vffHQ89oXj4THnte+eOJ57Yunnte+uNCu
fXF1u/Y9zvcP17VrX1xs1764sV374uZ27Ytb27UnLoV/8r8n/v/7nuD7t2tf
PNSuffFIu/bFY+GJdu2Lp9q1Ly68oH1P8v1f0L645gXti+vCxRe0L258Qfvi
5he0L259QZ8DfP8XtC8uhysvaF889IL2xSMvaF889oL2xRPhqRe0Ny6s176n
+P7rtS+uWa99cd167YuL4cb12hs3r9e+uHW99j3N91+vfXE5XFmvvfHQeu2L
R9ZrXzy2XvviifXa9wzfP1x4UXvj6he1L655Ufviuhe1Ly6GG1/U3rj5RX0O
8v1f1L649KL2xeVw5UXtjYde1N545EXti8de1L54Ijz1ovY+y/ffoL1x9Qbt
jWs2aF9cFy5u0N64cYP2xs0btPc5vv8G7YtL4fIG7Y0rG7Q3HtqgvfHIBu2N
x8ITG7T3X+P7b9DeuPCS9sbVL2lvXBOue0l74+JL2hs3vuT/nnz/cOtL2h+X
XtLeuPyS9saVl7Q3HgqPvKT98dhL2htPvKS9/zrf/yXtjQsbb3b1Ru2PazZq
b1y3UXvjYrhxo/bHzRu1/5t8/43aG5fC5Y3aH1c2an88tFH745GN2huPhSc2
av+/wfffqP1x4WXtj6vDNS9rf1z3svbHxZe1P24MN7+sz/N8/5e1Py69rP1x
OVx5WT3goZe1Px55WfvjsfDEy+oBT72sHv4m37+k/XFVuLqkHvDcknrANSXt
j2vDdSX1gOtL6uEt/v5K2h83hBtL6gE3ldQDbg63lNQHbi2pB9xeUg9/i7//
cGdJfeByST3gnpJ6wJXwQEl94KGSesDD4ZGS/3N7tKQ+8FhJPeDx8ERJfeDJ
kvrAU+HpkvrAhU3qA1dtUh9/m/3DczepD1yzSX3g2nDdJvWC6zepD1wMN2xS
L7hxk3p5m/03qQ/cHG7ZpF5w6yb1gdvDpU3qBXduUi+4HO7ZpF7+DvtvUi94
IDy0Sf3g4U3qBY9sUi94NDy2Sb3g8U36vMD+4clN6gdPbVIveDpc2Kx+cNVm
9YKrw3M3qx9cs1n94Npw3Wb183fZf7P6wcVww2b1gxs3qx/cFG7erH5wy2b1
g1vD7ZvV0zvsH+7crJ5webN6wj3hymb1hAc2qyc8FB7erJ7wyGb19PfYPzy2
WT3h8c3qCU+EJzerLzwVnt6svnBhi/rCVeHqLf7vyf5b1BeuCdduUV+4bov6
wvXh4hb1hRvCjVvUG27aor5wc7hli3r7++wfbt+i3nBpi3rDneHyFvWGe7ao
N1wJD2xRb3goPLxFvb3L/lvUGx4Nj21Rb3g8PLFF/eHJLeoNT4Wnt6g/XOi4
2VUd6u+32b9D/eG54ZoO9Ydrw3Ud6g/Xd6g/XAw3dKg/3Bhu6tDnRfYPt3So
R9zaoR5xe7jUoR5xZ7jcoR5xT4d6xJXwQId6xEPh4Q71+A/YPzzaoT7xWId6
xOPhiQ71iSfDUx3qE0+HC1vVJ67aqj7fY//w3K3qE9eEa7eqT1wXrt+qXnEx
3LBVveLGreoTN4Wbt6rXf8j+4dat6hW3h0tb1SvuDJe3ql/cs1W94kp4YKt6
xUPh4a3emf3Do1vVLx4Lj29Vv3giPLlV/eKpreoXT4cL29QvrgpXb1O/eG64
Zpv6/UfsH67bpp5xfbi4TT3jhnDjNvWMm8LN29QzbtmmnnFruH2ben6f/cOd
29QzLod7tqlnXAkPbFPPeCg8vE1945Hw6Db1jcfC49vU9z9m//DkNvWNp8LT
29Q3Lrxys6teUe+4Ojz3FfWOa15R37g2XPeKPi+xf7j4ivrGDeHGV9Q3bgo3
v6LecUu49RX1jtvDpVfUO+4Ml19R77gnXHlFvf8O+4eHXlHveDg88op6x6Ph
sVfUOx4PT7yi/vFkeOoV9Y+nw4VO9f8B+4erO9U/nhuu6VT/uDZc16n+cX24
2Kn+cUO4sVP946Zwc6f6/yfsH27tVP+4PVzqVP+4M1zuVP+4J1zp1D3ggfBQ
p+4BD4dHOr0z+4fHOnUPeDw80al7wJPhqU7dA54OF17VPeCqcPWrugc8N1zz
qu4B14brXtU9/FP2Dxdf1T3ghnDjq7oH3BRuDre8qvvAreH2V3UfuBTufFX3
gcvhnld1Hx+yf3jgVd0HHgoPv6r7wCPh0Vd1H3gsPP6q7gNPhCdf1X3gqfD0
q7qPf8b+22921XbdB64Oz92u+8A14drtug9cF67frvvAxXDDdt0Hbgw3bdfn
ZfYPt2zXfeDWcPt23QcuhTu36z5wOdyzXfeBK+GB7boPPBQeDo9s173g0fDY
dt3LP2f/8MR23QueDE9t133g6XDhNd0HrgpXv6b7wHPDNa/pPnBtuO413cdH
7B8uvqb7wA3hxtd0H7gp3Pya7gO3hFtf033g9nDpNd0H7gyXX9N9/C77hyuv
6T7wQHjoNd0HHg6PvKb7wKPhsdd0H3g8PPGa7gNPhqde88+xf7jQpfvAVeHq
8Nwu3QuuCdd26V5wXbi+S/eCi+GGLt0Hbgw3dek+cHO4pUv38S/YP9zepfvA
pXBnl+4Dl8M9XboPXAkPdOk+8FB4uEv3gUfCo126j4/ZPzzepfvAE+HJLt0H
ngpPd+k+cOH1m131uu4DV4fnvq77wDXh2td1H/+S/cP1r+s+cDHc8LruAzeG
m17XfeDmcMvrug/cGm5/XfeBS+HO1/V5hf3DPa/rHnAlPPC67gEPhYdf1z3g
kfDo67oHPBYef133gCfCk6/rHvBUePp13cO/Yv8dN7tqh+4BV4fn7tA94Jpw
7Q7dA64L1+/QPeBiuGGH7gE3hpt26B4+Yf9wyw7dA24Nt+/QPeBSuHOH7gGX
wz07dA+4Eh7YoXvAQ+HhHbqHf83+O9Q/Hg2P7VD/eDw8sUP948nw1A71j6fD
hTfUP64KV7/h38P+4Zo31D+uDde9of5xfbj4hvrHDeHGN9Q/bgo3v6H+cUu4
9Q31j9vDpTfU/++xf7j8hvrHPeHKG+ofD4SH3lD/eDg88ob6x6NvqHc8Fh5/
Q71/yv7hyTfUO54KT7+h3nGhfLNnldU7rgrPLqt3XB2eU1bveG54Xln9/xv6
Cc8vq39cG15QVv+4rqze8cJwfVm940XhYlm948XhhrI+r9pLwo1l9Y6XhpvK
6h0vCzeX1TteEW4pq3e8OtxaVu+4ray+cXt4Q1l9/1v6D3eU1TfuDHeV1Tcu
h7vL6hv3hHvL6h1Xwv1l9Y4Hyur7M3swPFRW3/h8eNh94wvhEfeNL4ZH3Te+
FB5z3/iye/533Gv4invGE+Gr7htPhq+5bzwVvu6+8bR7xjfChZ3+Pdx/uGqn
esazw9U71TOeE567Uz3jeTvVL64Jz9+pnnFteMFO9Yzrwgt3qud/z/2HF+1U
z7i4U/3ixeGGneoXLwk37lS/eGm4aad6xst2qt/Puf/wip3qF7eEV+9Uv7g1
3LZT/eL28Iad6heXdqpf3BHu3Kl+/wP3Hy7vVL+4e6d6xT3h3p3qFVfC/TvV
Lx4ID+5Uv3jIvV7j/sPD7hVfCI+4V3wxPOp+8SX3isfCl90rHg9fca94wn3+
R+4/POle8bXwlHvF190nng7fcJ+4sOtmz9qlXnHVLvX5Bfcfrt6lPvGc8Nxd
6hPP26UecU14/i71iWvDC3apT1y3Sz3+J+4/XL9LfeJF4eIu9YkX71KPuCG8
ZJd6xI3hpbvUJ27a5Z24/3DzLvWIV+xSf7glvHqXesSt4bZd6hG371J/eEO4
tEs94o5d6u8/c//hrl3qD5fD3bvUI+7Zpf5wb7ji/nC/+8MD4UH39yX3Hz7v
/vCw+8MXwiPuD190b3g0fMn94TH39l+4//C4e8NX3BueCF91b3jSfeFr4Sn3
hq+Hp93bde7fveHC7ps9a7d6w1W71ReeHa7erd7wnN3qC88Nz9ut3nDNbvX1
+9x/uHa3+sILdqsvXBdeuFt94frd6gsv2q2ecDG8eLd6+or7362e8JJw4271
hJfuVk+4Kbxst3rCzbvVE14Rbtmtnv4r979bPeHWcNtu9YTbd6snvGG3+sGl
cMdu9YM7d+tzmvsPl90P7nY/uCfc635wxf3gfveCB8KD7gcPuZf/xv2Hh90P
vuBe8Ih7wRfDo+4HX3IveCx82f18zf27F3zFveCJ8FX3gifdC77mPvBU+Lp7
+e/cv/vAN9wHLnTf7Fnd6gVXdasPPLtbfeDq8Jxu/x7uv1t94Hnd6gHXhOd3
qw9c260+8IJu9YDrwgu71Qeu71YP/4P771YPuBhe3K0+cEO3esBLutUDbgwv
7VYPuKlbPXzD/XerB9wcXtGtHnBLt3rAq7vVA27t1v64LdzerR7+J/ffrR5w
yfvjDu+PO8Nd7gGXvT/u9v4F/9859nh/3BuueH/c7/3xgPfHg94bD4XPe388
7P3/gH3Be+MR740vhke9P77kvfGY98aXvfct9nj4ivfGE94bX/XeeNJ742ve
F0+Fr3vvP2hPe298w3vjwh7ti2ft0b64Kjx7j/bG1Xv8c/acPdoXz92jffG8
PdoX14Tn79HeuHaP9sUL9mhfXLdH+/4he+Ee7Yvr92hPvChc3KN98eI92hc3
7NG+eMke7Xmr3bhHe+Kle7Qnbgov26N9cfMe7YtX7NGeuGWP9vzD9uo92hO3
7tGeuM174vbwBu+JS94Td3jPKrvTe+Iu74nL3g93ez/cE+71nrjiPXG/9/wj
3L/3xIPeDw95P3ze++Fh74cvhEe8523cv/fEo94PX/J+eMz74cveD497vz/K
/Xs/POH98FXvhSfD17wfnvJ++Lr3m839ez98w/vhwl7th2ft1V64aq/2wrP3
ai9cvVd7/THuf6/2wnPD8/ZqP1yzV/vh+Xu1H67dq73wgr3a63buf6/2wgv3
ai9cv1d74UV7tRcu7tVeePFe7fVT3P9e7YWX7NVeuHGv9sFL92of3BRetld7
4ea9/nvk/vdqL9yyV3vh1d4Lt3ov3Oa9cLv3whu81x/n/r0P7vA+uNP74C7v
g8veB3d7nzu4f++De70Prngf3O998ID3wYPe56e5f++Dz4eHvRe+4L3wiPfB
F70PHvU+c7h/74PHvA++7H3wuPfBV7wPnvA++Kr3+RPcv/fB17wPnvI++Lr3
wdPeB9/wPndy//u0D561T/vgqn3aB8/ep31w9T7tg+fs0z5/kvvfpz3wvH3a
A9fs0x54/j7tgWv3aQ+8YJ//53L/+7QHXrhPe+D6fdoDL9qnPXBxn/bAi/dp
D9ywT3v8b9z/Pu2BG/dpD7x0n/bATfu0B162T3vg5n3a4y7u33vgFu+BV3sP
3Oo9cJv3wO3e43/n/r0HLnkP3OE9cGe4y/vgsvfB3d5nHvfvfXCv98EV74P7
vQ8e8D540PvgIe/zf3D/3gcPex98wfvgEe+DL3ofPOp97ub+vQ8e8z74svfB
494HX/E+eML7/Cnu3/vgSe+Dr3kPPOU98HXvgae9Rw337z1woUd74Fk92gNX
9WgPPLtHe+DqHu2B5/Rojz/N/fdoDzyvR3vgmh7tgef3aA9c26M98IIe7XEP
99+jPfDCHu2B63u0B17Uoz1wsUd74MU92uP/5P57tAde0qM9cGOP9sBLe7QH
burRHnhZj78n99+jPfAK74FbvAde7T1wq/fAbd4Dt3uP/4v79x645D1wh/fA
nd4Dd3kPXPYe93L/3gP3eA/c6z1wxXvgfu+BB7zH/839ew885D3wee+Bh70H
vuA98Ij3qOX+vQce9R74kvfAY94DX/YeeNx74Cve489w/94DX/UeeNJ74Gve
A095D3w9PO197uP+vQ8u7Nc+eNZ+7YOr9msfPHu/9sHV+7XP/8P979c+eO5+
7YPn7dc+uGa/9sHz92sfXLtfnwu4//3aB9ft1z544X7tg+v3ax+8aL/2wcX9
2gcv3q99/l/uf7/2wUv2ax/cuF/74KXhpv3aCy/br31w837tcz/3v1/74Bbv
g1d7H9zqfXCb98Ht3uf/4/69Dy55H9zhfXCn98Fd3geXvU8d9x/u8V6413vh
ivfC/d4LD3gvPOi98JD3+rPcv/fCw94LX/A+eMT74IvhUe+FL3mvB7h/74Uv
ey887r3wFe+FJ7wXvuq9fob79174mvfCU+Hr3g9Pez98w/vhwgF9LuT+D2gv
XHVAe+HZB7QXrj6gvfCc8NwD2g/PO6D9cM0B7ffnuP8D2g/XHtB+eMEB7Yfr
DmgvvDBcf0D74UUHtN+D3P8B7YcXH9B+uOGA9sNLDmg/3BheekB74qYD2vPP
c/8HtCduPqD98IoD2g+3HNB+eHW49YD2xG3es5779554g/fEJe+JO7wf7gx3
eU9c9p6423v+Be7fe+Je74kr4X7viwe8Jx70nnjIez7E/XtPPBy+4H3xiPfF
F70nHvWe+FJ4zPv+Re7f++Jx74uveF88Eb7qffGk98XXvO8i7t/74uvhae+N
b3hvXDioffGsg9oXV4VnH9TeuPqg9v5Z7v+g9sZzw/MOam9cc1B74/kHtTeu
Pai98YJw3UHt/zD3f1B74/qD2hsvChcPan+8+KD2xw0HtTdeEm48qP3/Evd/
UPvjpoPaHy8LNx/U/njFQe2PWw5qf7w63HrQ34P7P6j9cftB7Y83hEsH1QPu
cA+40/vjrnDZPeBu9/Bz3H+41z3ginvA/e4BD4QH3Qcecg/4fHjYfTzC/bsP
POIe8MXwqPvAl9wHHgtfdh943H38PPfvPvBE+Kr7wJPuA18LT7kXfN194Onw
DfeymPvvVS94VriqV73g2b3qBVeH5/SqHzy3V73geeGaXvWD5/eql7/M/YcX
9KofXNerfvDCcH2v+sGLetUPLoYX96of3NCrfh7l/sONveoJL+1VP7gpvKxX
PeHmXvWDV4RbetUTXh1u7VVfv8D996on3B7e0Ku+cKlXPeGOcGev+sJdveoJ
l8Pdvf574/7Dve4LV9wX7g8PuC88GB5yb/i8+8LD4QvuDY+4r7/C/YdH3Ru+
FB5zb/iye8Pj4SvuDU+Er7o/POneHuP+w1PuD18PT7s/fMP94cKhmz3rkPrD
VeHZh9Qfrj6k/n6R+w/PPaT+8LxwzSH1iOeHaw+pR7zgkHrEdeGFh9Qjrg8v
OqTPJdx/ePEh9YkbDqlHvCTceEg94qXhpkPqEy8LNx9Sn3jFIfWJW8KrD6nP
X+L+w22H1CduD284pF5xKdxxSL3izkPqE3eFy4fUK+4O9xxSr49z/+HKIfWK
+8MDh9QvHnSveCh83r3i4fAF94tHwhfd71/l/sOX3C8eC192v3g8fMU94wn3
i6+GJ90vvhaecr+N3H942j3jG+HCYfWMZ4WrDqtnPDtcfVg94znhuYfVN553
WD3jmvD8w+r5l7n/8ILD6hnXhRceVs+4PrzosPrGxfDiw+obN4SXHFbfuDG8
9LD6foL7Dy87rL5xc3jFYfWOW8KrD6t33BpuO6zecfth9Y03hEuH1fevcP/h
zsPqG3eFy4fVN+4O9xxW77g3XDms3nF/eOCweseD4aHD/nvn/sPDh9U7vhAe
ce/4YnjUveNL4TH3ji+Hx90/vhKecP/4anjS/f8q9x+ecv/4enja/eMb4cIR
9Y9nhauOqH88+4h6x9XhOUfU+5Pcf3jeEfWOa8Lzj6h3XBtecES947rwwiPq
H9eHFx1R/7gYXnxE/f8a9x9eckT948bw0iPqHzeFlx1R/7g5vOKI+sct4dVH
1D9uDbcd8e/l/sMbjqh/XAp3HFH/uDPcdUT943K4+4j6xz3h3iPqH1eOqHfc
Hx44ot5/nfsPDx1R7/h8ePiIescXwiPuHV8Mj7p/fCk85v7x5fC4+3+K+w9P
uH98NTzp/vG18JT7x9fD0+4f33DvuFC52bdU1Ptv8O+D8K0V9Y6rwrdV1Due
Hb69ot5xdfiOinrHc8J3VtQ7nhu+q6LPZfz7Jnx3Rb3jmor6xveE51fUN743
XFtR3/i+8IKKesf3h+sq6h0/EF5YUe+/aT8Yrq+od/xQRX3jReGHK+obF8OP
VNQ3Xhx+tKK+cUP4sYr6fpp/X4Yfr6hv3FhRz/iJ8NKKesZPhpsq6hs/FV7m
vvHT4Wb3/Vv28vAK941XumfcEl7lnvHq8Br3jFvDa90zbguvc8/N/PvdPeP1
4Q3uGW8Ml9wz3hzucM94m/vFneHt7hd3hXe43+/wfoR3uWfcHd7rnnGP+8UH
wr3uFx8OV9wv7gv3u9/l9gn3iwfCp90vHgyfc794KPym+8Xn3St+KzzsXr9r
vx2+4H7xO+4Vj4Tfda/4Yvg994pHw++7V3zJva6wPwiPuVf8Yfiye8UfuU88
Hv7YveIr4U/cK55wn/jT8FX3+T37s/Ck+8Sfu098LfyF+8RT4S/dJ77uHvFX
4Wn3udL+OnzDfeJv3CMuHL3ZtxxVj3hW+Naj6hNXHVWP+Lbw7KPq8fu8/+Hq
o+oT33FUPeI54TuPqkc8N3zXUfWI5x1Vj/jucM1Rfbbw/ofnH1WP+N6j6hHX
hu87qh7xgqPqD98frjuqHvED4YVH1SN+8Kj6+wHvf/iho+oRLzqq/vDD4eJR
9YcfCS8+qh7xo0fVH24IP3ZU/a3i/Q8/flQ94kb3h58IL3V/+En3h5vCT7k/
vMy9/ZD3P9zs/vDy8Ar3h1e6N9wSXuX+8Gr3hteEW93bat7/cJv7w+vcG24P
r3d/eIN7wxvDJfeGN7s33BHe5t5+xPsf3u7+cJd7wzvCZfeGd7k33B3e695w
j/taw/sf7nVv+LD7wpVwn3vD/eET7g0PuDd8Ojzo3n7M++++8FD4TfeGz7sv
/FZ42L3ht90XvhB+x33x/4d0xH3hd8MX3Rd+z33h0fD77gtfCn/g3vCY+8If
hi+7r2d4/90XHg9/7L7wFfeFPwlPuC/8qfvCV8Ofua+1vP/uC38evua+8Bfu
CU+Fv3Rf+Lp7wl+Fp93Xs7z/7gnfCH/jvnChTz3hW8Kz+tQXvrVPPeGq8G19
+mzj/e9TT/j2cHWf+sJ39KknPCd8Z596wnP71BO+KzyvTz3hu/vU03N2Tfie
PvWE5/epJ3xvuLZPPeH7+tQTXhC+v0894bo+9bTOfiC8sE894Qf71BOuDz/U
p57woj71hB8OF/vUE36kTz09by8OP9qnnnBDn3rCj4WXuCf8uHvCjeEn3BNe
2qfPdvvJcJN7wk+5J7ws/LR7ws3uCS8Pr3BPeKV7wi3hVe7pBXu1e8Jrwq3u
Ca91T7gtvM494Xb3hNeHN7in9fZG94RL4c3uCXe4J7wt3Ome8Hb3hLvCO9zT
i3bZPeFd4W73hPe6J9wTPuCecK97wofDlT7/Pdl97gn3h0+4JzzgnvDp8KB7
wufcEx5yP/jN8Hn39JL9lvvBw+G33RO+4H7wO+ER94TfdT/4Yvg997TRHnU/
+P3wJfeEP3A/eCz8oXvCl90P/ig87p5etj92P/hK+BP3hCfcD/40fNU94c/c
D54Mf96nz5J9zf3gL9wPngp/6X7wdfeDvwpPuyf8tfvBN8LfuKdNduGY+sG3
hGcdU0/41mPqB1eFbzumnvDsY+oH3x6uPqaeNtt3HFM/eE74zmPqCc89pn7w
XcfUD54XvvuY+sE1x9TPFvue8Pxj6gffe0z94NrwfcfUD15wTP3g+8N1x9QP
fuCYPjvsheEHj6knXH9M/eCHwouOqSf88DH1g4vH1A9+JLz4mPrBjx5TP1vt
hvBj7gcvcT/48XCj+8FPuB+8NPyk+8FN7meb/VR4mfvBT7sf3Ox+8PLwCveD
V7of3BJe5X5esVe7H7wm3Op+8Fr3g9vC69wPbnc/eL176bQ3hDe6H1xyL3hz
uMP94G3uB3eGt7sf3OV+8I5w2f28au9yP7jbveC94R73gw+4F9wbPux+cMW9
bLf7wv3uB59wP3ggfNr94EH3g8+5FzwUftP9vGafdy/4rfCw+8Fvuxd8IfyO
+8Ej7ge/61667Ivh99wPHnUv+P3wJfeDP3AveCz8ofvBl90L/si9vG6Phz92
P/iKe8GfhCfcD/7UveCr7gV/Fp50Lzvsz90Lvhb+wr3gKfeCvwxfdz/4K/eC
p93LG/bX4RvuBX/jXnCh/2bf0q9e8Kx+9YJv7VcvuCp8W78+y7z//eoF3x6u
7lcv+I5+9YLn9KsPfGd4br96wXf1qxc8L3x3v3rZyfvfr17wPf3qA88P39uv
XnBtv3rB94UX9KsXfH+/etnF+9+vPvAD4YX96gU/2K8+cH34oX71ghf1qxf8
cL/62M37H36kX73gxe4DPxpucC/4MfeCl7gP/Hi40b108/67D7w0/KR7wU3u
BT/lPvCy8NPuBTe7D7zcfezh/Q+vdC+4xX3gVeHV7gWvcR+41X3gteE297KX
99994Hb3gdeHN7gPvNF94FJ4s3vBHe5jH++/+8Cd4e3uA3e5D7zDfeByeJf7
wN3uo4f3P9zjPvAB94F73Qc+HK64D9znPnC/+8AnwgPuYz/vv/vAg+4BnwsP
uQ/8pvvA590Dfis87D4O8P67D3wh/I77wCPuA7/rHvDF8HvuA4+6j4O8/+4B
Xwp/4D7wmPvAH7oHfDn8kfvA4+6hl/ffPeAr4U/cB55wD/hT94Cvhj9zH3jS
PeDP3cMh3v/wF+4DT7kH/KV7wNfDX7kPPO0e8NfhG+7jMO+/e8CF4+oB3xKe
dVx94FuPqwdcdVw94NvCs4+rjyO8/8fVA64+rh7wHeE5x9UHvvO4esBzj6sH
fFd43nF9Vnj/j6sHXHNcPeB7wvOPqw9873H1gGuPqwd8X3jBcfWB7z+uHo7y
/h9XD/iB8MLj6gM/eFw94Prj6gE/FF50XD3gh4+rhz7e/+PqAT8SXuwe8KPu
ATe4B/xYeIl7wI+7h2O8/+4BP+H98dLwk+4BN7kH/JT3x8vCT7uHft5/94CX
e3+8IrzSPeAW94BXeX+8OrzGPeBW93Cc99/747bwOveA290DXu/98YbwRveA
S+7hBO+/98cd4W3uAXe6B7zd++Ou8A73gMvu4STvv3vA3eG97gH3uAd8wD3g
3vBh94Ar7mGA99894P7wCfeAB9wDPu0e8GD4nHvAQ+4Bv+keTvH+h99yD3jY
PeC33QO+EH7HPeAR94DfdQ+nef/D77kHPOoe8PvuAV8Kf+Ae8Jh7wB+6hzO8
/+GP3AMedw/4Y/eAr4Q/cQ94wj3gT93DIO9/+DP3gCfdA/7cPeBr4S/cA55y
D/hL94Cvh79yD2d5/90D/to94Bvhb9wDLpxQD/iWE+oBzwrfekI9nOP9P6Ee
8G0n1AOeHb79hHrA1SfUA77jhHrAc8J3nlAPf433/4R6wHeF551QH/juE+oB
15xQD/ie8PwT6gPfe0KfQ7z/J9QDvi+84IT6wPefUA+47oR6wA+EF55QH/jB
E+oB14cfOqE+/jrv/wn1gR8+oR5wMfzICfWBF7sP/Kh7wA3hx9zHm7z/7gM/
7h5wY/gJ94GXug/8ZLjJfeCn3Mff4P13D/jpcLP7wMvdB14RXuk+cIv7wKvc
x3ne//Aa94Fb3Qde6z5wW3id+8Dt7gOvD29wH3ij+/ibvP/uA28Od7gPvM19
4M7wdveCu9wH3uE+3uL9D+9yL7jbfeC94R73gg+4D9wbPuxecMW9/C3ef/eB
+8Mn3AsecB/4dHjQveBz7gUPuY9h3v/wefeC33IveDj8tnvBF9wLfic84l7w
u+4FXwy/537+Nu+/e8Hvuxd8KfyBe8Fj7gV/GL7sfvBH7uVt3v/wx+4HX3Ev
+JPwhPvBn7oXfDX8mfvBk+7n7/D+h6+5H/yF+8FT7gV/Gb7ufvBX7gdPh792
Pxd4/90P/iZcOKl+8C0n1Q+eFb71pPrBVSfVD74tPPuk+sG3n1Q/f5f3P3zH
SfWE55xUP/jO8NyT6gnfdVL94Hnhu0+qJ1xzUv28w/sfnn9SPeF7w7Un1RO+
76R6wgvC959UT7jupHrCD4QXnlRPf4/3/6R6wvXhh06qL7zopHrCD4eLJ9UX
fuSkesKLw4+e1OcI7/9J9YQfCy9xX/jxcKP7wk+4L7w0/KT7wk3uCz8VXua+
/j7vv/vCzeHl7guvcF94ZbjFfeFV4dXuDa9xX+/y/ofXui/c5r7wunC7+8Lr
wxvcG97ovnApvNm9/Tbvv/vC28Kd7g1vD3e5N7zDveFyeJd7w93u7SLvf7jH
veED4V73hg+7N1wJ97k33B8+4f7wgHvDp8OD7u8f8P67NzwUftP94fPht9wf
HnZv+O3wBfeH3wmPuL/3eP/dH74Yfs/94dHw++4PX3J/+IPwmPvDH4Yvu8d/
yPvv/vB4+GP3h6+EP3GPeML94U/DV90j/iw86R5Hef/dH74W/sI94qnwl+4R
X3d/+KvwtHvEX4dvuEf8jXv8R7z/Azf7lgH1iGeFbx1Qj7gqfNuA+sSzB9Qj
vj1cPaAe8R3hOQPq833e/wH1iOeG7xpQj3he+O4B9YlrwvcMqE88f0A94nvD
tQPq8x/z/ocXDKhPfP+AesR14QcG1CdeGH5wQH3i+vBDA+oTLxrQ5yXe/3Bx
QH3iR8KLB9QnfnRAfeKG8GMD6hMvCT8+oD5xY/iJAfWKl7rP3+H9Dze5T/xU
eJn7xE+Hm90rXu4+8YrwSveJW8Kr3OsHvP/hNe4Vt7pPvDbc5j7xunC7e8Xr
wxvcK97oPv8J7394s3vFHeFt7hV3hre7V9zlPvGOcNm94l3hbvc6xvsf7nGv
+IB7xb3hw+4VV8J97hX3h0+4VzzgXvHp8KB7/ae8/+Eh94rfDJ93r/gt94qH
w2+7V3wh/I57xSPhd93rh7z/7hW/Fx51r/j98CX3ij8Ij7lX/KF7xZfDH7nX
f8b7H/7YveIr4U/cK55wr/jT8FX3ij8LT7pX/Hn4mnu9zPvvXvFU+Ev3iq+H
v3KveDr8tXvFN9wr/iZcOKVe8S3hWafU6z/n/Q9XnVKv+LZT6hXPDt9+Sr3i
6vAdp9QrnhO+85R6xXNPqdePeP/D806pV3x3uOaUesX3nFKfeH743lPqFdeG
7zulXvGC8P2n1Ovv8v6fUp/4gfDCU+oVPxiuP6Ve8UOn1CdeFH74lPrExfAj
p/Q5zvsffvSUesUNp9Qnfiy85JT6xI+HG0+pV/zEKfWJl4afdJ+4KfyU+/wX
vP/hp90rbnafeHl4hfvEK8Mt7hOvcp94dXiN+/yY9z+81n3iNveJ14Xb3Sde
H97gPvFG94hL4c3u81/y/oe3uU/c6R7x9nCX+8Q7wmX3iXe5R9wd3user/D+
hw+4T9zrHvHhcMU94r5wv/vEJ9wjHgifdo94MHzOPf4r3n/3iN8Mn3eP+C33
h4fDb7tHfCH8jnvEI+7vE97/8EX3iN8Lj7pH/L77w5fCH7hHPOb+8Ifhy+7v
X/P+h8fdI/7Y/eEr4U/cH54If+oe8VX3hz8LT7q/Cd5/94evhb9wf3gq/KX7
w9fdH/4qPO3+8NfuDd8If+P+fo/3/7R6w7eEZ51Wf/jWcNVp9YdvO63e8Ozw
7afVH64+rd4+5f0Pzzmt3vCdp9Ubnhu+67R6w/PCd59Wf7jmtHrD94Tnn1Zv
/4b3/7R6w7Xh+06rN7zgtPrC94frTqs3/MBp9YUXhh88rc+rvP/hh06rN7zo
tPrCD4eLp9UbfuS0+sKLw4+eVm+44bT6wo+Fl5xWb/+W99994cbwE+4LL3Vf
+Mlwk/vCT7kvvCz8tPv6jPc/vNy94RXuC68Mt7gvvMp94dXhNe4Lt7qvf8f7
H25zX3id+8Lt4fXuC29wX3hjuOS+8Gb3NMn7H97mvnCne8Lbw13uC+9wT7gc
3uW+cLd7wnvDPe7r3/P+uyfcGz7svnDFPeG+cL/7wifcEx4In3ZPn/P+uyd8
LjzknvCb7gmfD7/lnvCwe8Jvhy+4p//A+++e8Ej4XfeEL7on/F541D3h990T
vuR+rvH+h8fcE/7Q/eDL4Y/cEx53P/jj8BX3hD9xP3gi/Kl7+o+8/+4Hfxae
dE/4c/eDr4W/cE94yv3gL8PX3dMXvP/uB0+Hv3ZP+Ib7wd+EC2fUE77ljPrB
s86on//E+x+uOqN+8G1n1A+eHb79jPrB1WfUD74jPOeMesJ3nvHfG+9/+K4z
6gnPO6N+8N3hmjPqCd9zRv3g+eF7z6gnXHtG/eD7zqif/8z7H77/jPrBdWfU
D34gvPCM+sEPnlE/uD780Bn1gxedUT9f8v6Hi2fUD37kjPrBi8OPnlE/uMH9
4MfCS9wTftz9/Bfef/eDnwgvdT/4SfeDm8JPuR+8zP3gp8PN7uc677/7wSvC
K90PbnE/eFV4tfvBa9wPbg2vdU+4zf38Pu+/+8Ht4fXuB29wP3hjuOR+8Gb3
gzvC29zPV7z/7gdvD3e5H7zD/eByeJf7wd3uB+8N97in/8r7735wb/iwe8IV
94P73A/uD59wP3jA/Uzz/ocH3Q8+537wUPhN94PPux/8VnjY/eC33Q++EH7H
Pf033n/3g98NX3RP+D33g0fD77snfMn94A/CY+7pa95/94Mvhz9yT3jc/eCP
w1fcE/7E/eCJ8Kfu6b/z/rsf/Fl40j3hz90Tvhb+wj3hKfeEvwxfd083eP/d
E54Of+2e8A33hL8JFwbVE75lUD3hWeFbB9UTrhpUT/+D9z88e1A94dsH1ROu
Dt8xqJ7wnEH1hO8Mzx1UT/iuQfX0De9/+O5B9YRrBtUTvic8f1A94XsH1ROu
Dd83qJ7wgkH19D95/8N1g+oJPzConvDC8IOD6gnXD6on/FB40aB6wg8P6rOw
Xp/F8COD6gkvHlRP+NFww6B6wo+5J7wk/Lh7wo3hJ9wXXuqe/oD9ZLjJfeGn
3BNeFn7afeFm94SXh1e4L7zSPd1it4RXuS+82j3hNeFW94XXhtvcF17nvnB7
eL37+oP2BveFN4ZL7gtvdl+4I7zNfeFO94W3h7vc1yx7R7js3vAu94W7w3vd
G+5xX/hAuNd94cPuC1fCfe7rD9n94RPuDQ+4L3w6POje8Dn3hYfCb7o3fD78
lnu71R52b/jt8AX3ht9xX3gk/K57wxfD77k3POre/rD9fviSe8MfuDc8Fv7Q
veHL4Y/cHx53b/jj8BX3VmV/4t7wRPhT94avhj9zf3jSveHPw9fcH/4iPOX+
8Jfu7Y/Y18NfuT887d7w1+Eb7g9/Ey6cVX/4lrPqDc8K33pW/d1mV4VvO6v+
8Oyz6g/fHq4+q/7wHeE5Z9UfvvOs+sNzw3edVX9/1J4XvvusesQ1Z9Ufvic8
/6z6w/eGa8+qR3zfWfWHF4TvP+u/F7su/MBZ9YgXnlV/+MFw/Vn1iB8KLzqr
HvHDZ9UfLoYfOase8eLwo2fV4x/j/T+rHvFj4SVn1SN+PNx4Vj3iJ9wjXhp+
0j3ipvBT7vF23n/3iJ8ON7tHvDy8wj3ile4Rt4RXuUe8OrzGPf4U7797xGvD
be4Rrwu3u0e8PrzBfeKN7hGXwpvdYzXvf3ib+8Sd7hFvD3e5R7wjXHafeFe4
233ive4R94QPuM8/zvsfPuw+ccU94r5wv/vEJ8ID7hOfDg+6T3zOfd7B+x9+
033i8+G33Ccedp/47fAF94nfCY+4T/xu+KJ7/Wnef/eJR8Pvu098KfyB+8Rj
4Q/dK77sPvFH4XH3OYf3P3zFveJPwhPuFX/qPvHV8GfuE0+GP3ev+Jr7xF+E
p9znn+D9D193r/ir8LR7xV+7T3wj/I37xIVzN/uWc+oVzwrfek693sn7f059
4tvCs8+pV3x7uPqcesV3hOecU6/4znPqE88N33VOvf5J3v/w3efUK64J33NO
veL54XvPqVdce069/sT/C5EhRAE=
        "]]}, {
       RGBColor[0.880722, 0.611041, 0.142051], 
       PointSize[
        NCache[
         Rational[1, 360], 0.002777777777777778]], 
       AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxdnX94lFda98eKNSLWWLHGvoixIsYaMSLWiFhHxG6sWLNsls2yWTalKU1p
lk5pSgMb6BCSMISQDMkkTH6QPMxkhpnMJMYaa6xYx4o1ItZYscaKNVuxRhZr
rIh5K/Z9W+/vd67re/rPXJ+SmXPuX+e+z33Ocz0/uOfZHU/e5fP5vvs7fb5P
P/Gf/2urJz/z9a4mv2GBv/v1/yyp6SYX+scCP7/yb/K82l/z6R+EyUX+5z75
53ie1/jbvvHZmbVnyMX+wYFP/svzA/4dM2vbvpHndf5Pvh34+R7yev8PfPoD
eS7xf/rPK3vJD9r88lzqr/j64dWTed5gnxFymf/T4T6b55+0+eZ5o//Pr3zy
X55/yubfR97k//TPA3n+aZMnzw/5b3+irdfz/DMmX57LTb5+8s/69376X543
+//oU3Xn+ecc3mL6yPPPm73y/LDDv2D6Okv2Kwf9/p/69L/8v/+ictBh31bT
d/7fHfb9kvPvDvu2Of/usO+XnX932PeI8+8O+z7j/LvDvgrn3x32/Yrz7w77
HnX+/VH/zU/coy3/77+qHHTYt935d4d9v2b+m/93h32PWfzl/91h36/bZ5T/
7rCv0uKV7K+0eMj/faX/U/c5TM5VWnzkv/9Zi4/89z/r/9FPfzD//c9avAzw
+5/1fzr9z5B9OyxeyP4dFi/k4A7/p8OvHuT3d1i8kH2fs3gg+z9n/k4Ofs78
e4jf/5zZi+yrMn2S/VX2OczvV5k+yLkqk5/s+7zJS/Z/3uQ7x+9/3uQj5z5v
8ozw+zst3sn+nRbP5OBOm/8ov7/T/IPs+4LZm+z/gtnT4/e/YPMl575g8yX7
qm39Os/vV5v+ycFqm2+M3682fZN9XzR9k/1ftPUhzu9/0fRLzn3RPsf4/V2m
X7J/l82XHNxl8yXndpl+E/z+l0y/ZP+XbH0lB79k/pLk979k8yf7amz+ZH+N
zf8Cv19j/kLO1Zg8ZN+XTf9k/5dN/yl+/8smHzn3ZYsnsm+3yUv277Z4yn9/
t8mf//5ui6c0v/8V0wfZ73DwK2Zfcs5hX61yca3pM/97Dtc6fx902HM4V6vz
WXDY97jKU/y4yut/XPVR+7jqL/i46td73D7z+npc7bPwuMVP3n571N7Feyz+
8v6wx+KTXLvH8a89Ji/Z2+P46x6bL3lhj33m/f8J8y/GR/ETTjw9Yf5Lrn3C
7JGPzydMP4xn7wmN/xx+n+vDwhPm//n1p87inetTcZ2zntXZJ7m2zvTF9TJY
p+uxV6fre65O88lCnVM/PKn1T/GTWl/5n7RP1l+1T5p+WP8Fn7T5s170njR9
s97MPan16sKTtp7l69m9pr9Ojr/X/OMUx99r8+vg+HtNPyGOj78/wfHx9+0c
H7/fyvHx98c5/lM2nxaO/5StB0GO/5TN/yWO/5T53xGO/5TJ28zxn7J88TWO
/5T5yyGO/5T5RxPHrzd/P8jx682fX+D49fbZyPHrzX8OcPx6s9dzHL/e4u1Z
jl9v8bOf4+Pvv8rxn7b19BmO/7T9/T6O/7T9/dMc/2n7/ac4/tM2n70c/2mb
/5Mc/2mTt47jP236eYLj7zN9Ps7x95m9ajn+PpvfVzj+PtPXbo6/z/zvyxwf
36/h+Ptsvl/i+PtsfLLvGbP/Lo7/jMXPFzn+M+YP1Rz/Gfu9L3D8ZyyeyN4z
po+dHP8Zk+/zHP8Z0w/Z12D+XMXxG8yfyP4G0x+5tsHG/xzHbzB/JnsNNh9y
rsHkJS80WPzu4PhfNX2Six32f9XkIdc6HHT+3nM491Udb+GrOh/ffosvcvF+
lce/X+Wt3a/6CO5XfXn7VZ+5/arvhf3mL3n9P2v+TnsVP2vzJfuftfnRvrXP
2if9Ifis+of3rPpP7lmzP3nhWdMP/c0XsN+nPxYGTD76b3HA5CGXBdTf/QGz
B+OhEr+Xjxf8HuMpELB4ZrwFAxp/4YDJv4fyBEz/jNepgMUX4zmH+TDe5wIm
H9eDhYDFL9eLpYDpq57yP2ff5/pS+Jx9n+tP8XO6PpU9Z+M3UP7nbP5czyqf
s/lzvat9DnJT/ud0vQw+Z/HP9TT8nMXP85T/OcufXH+nntP1Ofec6Z/r9xzm
+yLlx3y53i9hvswHvgOaLwoPmL2YT4oPmD8x35QdMH89SvkPWLwwP1UesPGY
v2oP2HjHKD/GY/4LYjzmxzDGa6P8GI/5dOqA5tvcAbMn8/HcAct3Jyn/AbMn
8/fSAfMn5nff8+bfzP+Fz2t9UPy8zZf1Q9nz2t/yP6/9rEp8n/VJ7fNmT/af
Avg+65ng81rvhPF91kPe89qfmXrePvP78ed1/z33vO6fF57X/fHS86a//P63
Ufe3hY02n3w92Gj2I5c16v7U36j1ZWWj1p+1jVqfBhp1vxls1P1lGL9P9hq1
Pp5qtM98fd2o+8U5zJ/1+EKj7g+XMF5+//eC1vuFL5i+8/uBF3S/UPaCfeb3
Jy/ofqTyBWe/8oLudwIv6H4q+ILplxx+werHccqP+ZGnML8M5X/B9EOee8Hi
n7yA+WYp/wtmH7LvoM2fXHjQ5k8uPmj6nKD8B81+ZP9Bk4dcedDkIdceNHkm
Kf9B80dy8KCtl+TwQYuX36D8B03/5KmDJh85dxD/n/IfNH8mL0Ae8hLk+U3K
/6LJQy580eKHXPyi+cvLlP9Fmz/Z/6LNn1z5os3/tyj/izZfcuBF0/805X/R
9E8Ov2jrEdnD/H6b8mN+5NyLpt9XKP+L5i/kBczndyg/5kP2Ndl8Zih/k8UT
ubjJ9PW7lL/J7E32N5l+XqX8TaYf8id5/3/99fcof5PZk8w8cZHyN5k+yJ+s
G/+rD/Indvxfffw+5W8yfyPPNVm+eI3yN5l9yEtNFi9/QPkPWT4gFx4yfeQo
/yHTB7nskM2H7D9k8/lDyn/I7EOuPWT2eZ3yHzL9kIOHbH7k8CGz1x9R/kOm
L/IU5kvOHbLPS5T/kPk/eeGQ6ZO8dMjigew7bPKQCw+bvf+Y8h+29Ytcdtjk
JfsPmz+QKw+b/OTaw2YfcsDh4GHznzco/2HTF9lzeMrh3GGzN3nO4QWHlxz2
fU258GtmH3Kxw2UO+x2udLjW4YDDQYfDX7P4zcvv8JTDua+Z/+Tld3jhaxZ/
f0L5HfY1m7+RC5stPsjFDpc1mz+S/c22npArm+1zlvI3WzyRA83mn+Rgs8UX
Odxs/kn2ms0f/5TyN5v/kXPN5n/kuWbzL/JCs9n3MuVvNv2RfUdMH39G+Y+Y
vOTiIxZv5LIjJs8Vyn/E5k+uPGLz/XPKf8TmSw4csfmRg0dsfm9S/iNmP7KH
+fwF5cd8yLkjps85yn/E9EdeOGLx+5eU/4jFJ9l31OLpLcp/1PRDLj5q/vFX
lP+o2ZvsP2qfVyn/UVtvyLVHbX0hB47afP6a8h+1+ZDDR209eJvyHzX9kKcw
P3LuqNnvbyj/UdMXeQHzJS8dNf2RfS+ZPecp/0umT3LxSyYPuewlszfZ73Cl
w7UvmT3IAeffgw6HHfac8aec+eWc+c+9pPItvGTxmpf/JdWPL2j+Rn0WBG09
IhcG1R5FQYs32qs4aP5OLgna/GnvsqB9ksuDNp+8/wTV3yowHrkyaPFDf63G
79O/a4MaD/VB8wdyIGj+zXhqCmo8BoOmX8ZvCPNjvIehD64X0aCuN15Q169U
UNfDqaCu7zNBzZe5oObn2aDZh/l9Lqj1wzz0zfpiAfplPbIYdOqdoMUX66Nl
zJf1lO+Y1mMFx2w81m+Fx7T+KzoGOWj/Y1pvlhwz+Viflh3T+rb8mNbH/mNa
X1ccs/WC9XrlMa33q4/p/qH2mO5H6o9ZfHD/EsB43A81YTzup4LH9LwpdEzP
i8LHdH8YPab7Se+Ynu+koM/8fvWYrV/cz84c0/1vDt/n/nj2mJ7vzh3T8+F5
fJ/78YVjeh69eEzPs5cwf+7/l49Z/smfv7foeX1Bi94HKGzR+w1FLXr/pLhF
77eU4PfY3yhr0fs15S0mH/sh/hY9z6lo0fs+lS16P6gav8/+Sy1+n1zfYvKz
XxNoMfuTmzB/9neCLdrvCWG807R/i/k/Odqi50UexienWuyTPIX5sN80A32S
cy22XpFnW7RfNYf5kudb9DxqAfMnL7aYfdn/WoJ9yMsO+45rv6zA4UKHixwu
Pq6/V+Jw2XGdT/lxna//uMpTcdz8nVx5XPVRfdz8JX8ed9zsS/3VH9fzu8Bx
7fc1HVd7BY9b/JBDx9Xe4ePqD9Hj6i/ecfWn1HH1t6nj6o8zx9Vfc8fVn2eP
q7/PHdd4mD+u990Wjuv9tsXjtp4w3paOW73F+Fw+rv1FX6veDyto1ftFha16
/6eoVc93i1v1/LekVe/blLXaJ9en8lbnfLlVz58rWrW/WIn5cD2sbtX7LLWt
eh5e36r3UwKtev+kqdW5X9Kq63moVe+HhFv1vke0Ve9reK3az0u1Ov26Vu3H
zeD7zE+5Vu2fzeL7zG9zrZr/5vH9fH+rVftVi/g+8+lSq/aflvF95mNfm+br
gjaTn/m8sE37RUVtTn+ozfIR64OSNotf1g9lbbbesb4obzP/Z/3hbzN/Yn1S
0Wb+xPqlss38if2Z6jbojfZvs/WYXN+m/ZdAm/Zbmtq0vgq2Wb5j/RVq0/5H
uE37FdE2Z3/epvvhVJvud6fazN/JM5hffv/apvvT2TZbP1h/zrXp/nO+TevV
BeiP9exim+4vlyA/699l/D7rY1+72Zdc0K77ycJ2mz+5qF3r8eJ2rddL2m08
clm72Y/1fnm7U/+32yf3BxXtun+sbNf9YzXG536jtt3kJde3m/9wvxJo1/1i
U7vuF4Ptuh8Ktev+Kdyu+6tou+7HvHbd36XazX/+lvZvN/uQZ9ot3sg5zJ88
i/m/Q/u3m3+Q5yEPeaHd1m/yYrvZ9+9of8hHXob+yb4TJi+54IR9XqP9T5j8
5KIT5h/k4hOmD3LJCdMHueyE2Y9cfsL08/e0/wnTD7nihNmXXHnC9EWuPmHx
Q649Yf73Lu1/wvRHDpww/ZGbTph/koMnTJ/k0Anzj3+g/U+YPsnRE6ZPsnfC
9ElOQZ/kKehzgfaHPsk56I88e8LWV/Ic9Eeeh/6+TvtDX+RF6Ie8dML8i7wM
/bxH+4dMP+SCkOmDXBgyffwj7R8y+cnFIZOfXBIy+cllIZP3Ou0fMnnJ/pD5
C7kiZPL9E+0fMv8gV4fMH8i1IZOPXB8y+d6n/UNmb3JTyOKFHAyZff+Z9od8
5HDI1kdyNAQ90/4hiwdyKmT2I09BPvIM5PsX2j9k9iPPQj7yHOQjz4fM32/Q
/rAfeRHykpcgL3kZ9vwG7X/S5CUXnDR7kgtPmvzkopP2eZP2P2n2JZecNH2Q
y06avcnlJ00/ZP9J0w+54qT5O7nypOnrX2n/k+YP5NqTpj9y/UnTHzlw0uKB
3HTS9EkOnjR9fkD7Oxw+af5Ejp40fZO9k6ZvcuqkxQ95yuGZk2YPcu6k2ePf
aP+T5o/kOdiHPO/wAuxFXoS9yEsnLR7Jy7DfEu3fYfYjF3SY/ciFDhd1mD3J
xR1mT3JJh9mTXNZh9iSXd5g9/5327zB7kis6zJ7kyg6zJ7m6w+xJru0we5Lr
O8x+H9L+HWY/clOH2Y8c7DD7kUMdZi9yuMPs8x+0f4fZh+x1mD3IqQ6zB3mq
w+xBnukwe5BzDs922Oct2h/2Ic/DHuQF2IO8CHuQlxxehn3IvlPKBafMXuRC
h4scLj5l9vxP2t/hMofLHfY7v1fhcKXD1c58a0+pfPWnVB8Bh5tOqT6Dp1Tf
oVNqj/AptWf0lGP/U+ofqVPqP1On1P9mTqm/5k6pv8+e0viYO6XxNX9K43Xh
lMb74ildT5ZO6fq0fErXP1+nrqcFnbo+F3baJ7mo0+RnPiju1HxT0mnxyXxV
1mn2Y/4r77T5k/2dmn8rOi0+mZ8rO00/+fzfqfVDbafWH/WYD+uXQKetH6x/
mjq1vgp2av0W6tT6MNyp9Wi0U+tfr1Pr7VSnrT+sx6c6dX8w06nnUblOPd+a
7dTzsTnon/uf+U49L1mAfNyPLXbq/m2pU89DlmEf7g99p3U/WXBa95+Fp/U8
tei0nncUn9bz4ZLTul8uw99zf11+Wvff/tOmL+7PK07rfr7ytNknv/8/rf2B
2tMWL+wf1J+2+M3fNzmt91GaTmu/Inha77+ETpu+2O8IQx72R6KntX/iYX7s
r6RO6/2gqdN6v2jmtN5PykEf7O/MnjZ/yPd/Tuv5xvxpva+1gPHZX1o8rf2n
pdN6v2z5tPP8UJc+P1PQpffdCrv0+aiiLn2eqrhL+2clXfr8S1mXno+Ud9ln
/nmvLj0vqejS58cqu/Q+YHWXnqfUdun9wfouk5f9wECX9gebupz7hw6Huiz+
yGGHow57DqccnnJ+f8aZT65Ln7ebdeSZc+Sd79L+5kKX+Sv1tdil9yWXuiwe
yMtd5u/554+6Ld7IBd36fF1ht82PXNStz0MVd+t9yZJu7ZeWdat/lXer//nx
++SKbpOP/lvZrfcbq7v1/mJtt/kbub5b7x8GurWf2tSt/dRgt/ZTQ91mH8Zr
uFvjOdqt8e516/lmqlv7qVPd2k+d6dZ+aq5b+6mz0AfXp7luiz+uX/Pd9sn+
6UK3rn+L3bo+LnXrfbdlzJfrqy9s82W/dEVY76MVhO2T6/eqsPZHC8N6f2p1
WPuhRWHNF2vCmk+Kw3r/Zl1Y79eUhPW8vjSs/cyysPYvN4X1/kt5WPuTW8J6
n8UfNv9kft0W1v5iRVjvQ2wPa/6uDGt+rwqb/djPqw5rf64G+mT9UBvW/lhd
2OlnhbUf1YDvs34JhLU/1BjWfk8Txmc91BzW/kwwrP2X1rD2V0Jhrcc6w05/
JKz1XCSs9V40rPXgcFjrRS+s9eQY5GO9mQprPZoNa706Fdb9+nTY2W+HdT99
Maz74VxY97OXwrpfnQ3r/vNKWPeXc2Gt96+GdX8wH9b937Ww7j8Wwrp/uR7W
/c4i/JH7pZuwL3kpbPF+G3wL8yEvw3/+C3wH8Un2nTF9kFecsXhYZvyfsfmR
V52x+ZELz5g9/i/j/4zZm1x0xvT1EeP/jPkTufiMzZe87ozN978Z/2dsvuRS
zJdcdsb0eYfxf8bsSS4/Y/5N3nLG1q//YfyfMfuSt50x/ZIrzph+P2b8nzH/
JVeesfgiV52x+Ph/jP8zZn9yzRnoHfd2a6Fvch3mS67HfL8J3HDG/IEcgL7J
jZjvXeAmzJfcjPmSg2fMX78Z3Ir5kkOY7wpwJ+ZLDsM/yBH4BzkK//gW8DDm
S/bgH3eDx+Af5BT8g5yFf3wreAr6Jk/DX8gz8BfyRfhLATgHfyFfgjzkWchD
vgJ5vg08B3uQr0I+8jz8iXwN9lkJXoC85OuwF3kR9iLfhPzfDl6C/ci3oA/y
MvRBvgP7kn09ph/yih77XAUu6DF9kVf1mP3JhT2mP/Jqh4t6TJ/kNT3m3+Ti
HtMveV2P+ft3gEscLu0x/ZPLekz/5E09Fs/kcoe39Jh9yP4esw95W4/54z3g
ih6zF3m7w5U9Zj9yVY/Zj1zdY/5Lrukxe5Jre8ye38n47zF7kut7zJ7khh6z
JzkA+5EbYb9Cxj/sR26G/chB2IfcCvuQQ9D/dzH+oX9yGPolR6BfchT6vJfx
D32RPeiLPAb9kFPQx3cz/iE/earH/Jk8DflXM/4hL/ki5CXn4H/kS5Dvexj/
kI98Bf5CnoM/3Mf4hzzkechDvgZ7fy/jH/YlX4c85EXIU8T4hz3JS4g38i3Y
j7wM+ch3IN/3Mf57LX7IK3pNXnJBr9mTvKrX5CcX9pp972f895o+yEW9Zm/y
ml7TD7nY4XUOlzhc2mvxRC5z/n2Tw+UOb3Hm43fmu82Rp8KRd7ujn0pHf1W9
Fi/k6l61R02v2qu2V+1b16v2r+81/yc3QH76U6BX/a+xV/21CfMhN2N8+nuw
19YPxk9rr/knOdSr8drZq/Ee7tX1IgJ5yNFeXc+Ge3W99Hp1/R7r1fyR6tX8
le3V/DiF+TC/TvdqPp/p1XrgYq/WF7lerU8u9Vp8sX6ZhT5YD12BP7Demuu1
9YT12lWMx3pvvlfrx2u9Wn8u9Go9ex3ysR5ehH5YT9/E/Fh/L/Xa+pKv/6EP
7g+We/W86E6vnlf4InqetiKi+6GCiO6fVkX0/KAwovuz1RE9Py6KmPzc762J
6P6wOKLn6+siel5fEtHz/9KI3icoi+j9hE0Rvf9QHtF+/5aI9vv9Eb0fsi2i
/f6KiPb7t0f0Pk1lRO/rVEX0vk91RJ/XqInofaPaiPb/6yL6fEV9RJ+naIiY
v7B/EYjo/arGiD7P0xTR+1rNEe2PBKFPcmtEnzcKRWy9Yb+lM2LrY/55JcyX
/ZkI7Mv+TTSi5wvDEfskexF93mIsov2gVESf18pCPvJURPtJ0xF9PmMmos+L
XYzo82S5iD5vdimi/apZzJ98JaLPr81F9L7fVYfnIS/5msMLDl93eNH5vZsO
LznzueXMd9mR544jr69P7yeu6FP9FPSp/lb16f3Fwj7zB9pjdZ/eZyzqU/ut
6VP7Fvep/df1Qc+M/z6Tj1zaZ/Mnl/Vpf3BTn95/LO/T5+u29Ol5mL9P+4fb
+jQeKvo0Xrb36XlbZZ/GW1Wfrcfk6j59Xq6mz3k+rk+fn6rrc+4z9unzWQ19
2n8M9Ol9xEbog+tPU5+uT819el4Z7NP7fa19ej8v1Kf9yM4+534c7MX1NdKn
99Oi+D77j8MYn+u1B/tyPR/r0/U+1af9xyz8hfliqk/vW033ab9xpk/vP13s
0/tKuT7tJ17q0/s9s316vn6lT++3zPXpef7VPqf/16f591qf5ueFPu3XXYc+
md8Xoc98/u/T/tkS5sf64Vaf9ruWoX/WH3cwP9Ynvn7tP63ot/mxvinot/mx
X7Sq3/IP66HCfpsf66fV/eZvrK+K+rU/s6Zf67Pifq3f1mE81ncl/dqfKO3X
/kFZv+7fN/Xr/rq8H/Nk/d9v6x3Zj++znt3Wr/vPin6tj7djfNbPlf3mb6yv
q/q1Pq/uN39l/V4Dfefr/37dj9X16/6jHvMhN/Sbvf8P63/83hrW/7DH97P+
x/zIzf1WX61l/d9v/vADrP8hLzkEexWz/sfv/yDrf9iPHIH9H2D9j/mTh+EP
P8T6H+ORxyDPOtb/0Dc5C339MOt/yEeehv7Ws/6HvOSLmA85h/n8COt/6Jc8
C/8pYf2P+ZHn+m39IV+Ff5HnMd8f5f4f+iIvYP7k65j/g9z/Q5/km5CHvAR/
I9/qt/X5x7j/h33JdyAv2XfW/JO84qzJTy44a/Yhrzprn6WM/7O2npJXnzX9
kIvOmv+Q15w1fZGLz5p9yevOmv7IJQ6XnjX/+3HG/1nTL3nTWct/5PKzpm/y
Fof9Z03/5G1nbT0gV5w1e2xg/J81e5ArHa46a+szufqs2Ytcc9bsRa49a/5I
rjtr9vsJxv9Zsx+54azZjxyA/ciNsB+5CfYjN8N+ZYx/2I/cCnuRQ7AXuRP2
Iodhj59k/MMe5Cj0TR6Gfske9LuR8Q/9kVPQFzkL/fwU4x/6IE9DfvIM5N3E
+Id/knOQj3wJ/kaehT/9NOMf/kKew/wfYvzD3uR52Jd8DfP9GcY/7EO+DnuU
M/4xP/JN6PtnGf/QL/kW5rOZ8Y/5kO9Afz/H+I+a/5BXRO1zC+M/av5AXhU1
/ZALo6afn2f8R82+5KKojf8w4z9q4/8C4x/jk9dhfD/jH+OTSzE+uSxq8v8i
4z9q8m9l/GN88haM/0uMf4xP3obxtzH+MT55O8YnV0L+X2b8Q35yddT8+RHG
f9T8gVwbNX/4DOM/av5Aro+av1Yw/qPmD+RA1PzhVxj/0Ae5CfMhN2M+jzL+
oxZf5NaorTe/yviHfsidmB85HDV/3c74x/zIUeiLPBy19eHXGP/QH3ksavFF
TsGejzH+o7bekqdgX/I05CHPwN6/zviHfOQc9E++BHnJs1FbT8hXID95zuGr
8J9Kxr/D16Av8oLD1x1edPim83tLDt9y5rPs8B1HHt+AyrtiQPVRMKD6WzVg
/kv9Fg6o/lcPqH2KBsz/aM81A+af5OIB81/yugHLL/SXkgHzf3LpgPpfGeZL
3oT50Z/LMR/ylgGND/+A+SfjaduAxlvFgOmL8bgd+iBX4vcZz1UDuh5UD1g8
cL2owfy53tRivlyf6gZ0/aqHfri+NQyYP3D9CwyYP3P9bMR8uN42DVi8cT1u
xve5fgcHNB+0Dmj+CEE/zD+dA5qvwgOa7yIDmi+jA5pvhwc0f3sDFu+sB8YG
tN5IDWi9kx3QemxqQOvH6QGtZ2cGtH6+OKD1eW5A6/1LA7Y+cn8wC/1zf3EF
f8/9yhz+nvubqwO6P5of0P3UtQHdfy3APtyfXR+wT+7nFgf0vOvmgJ43LQ3o
eeCtAT1vXB7Q86A7A3oe6hvU89UVg7ofLhjU851VgyY/z3MKB/W8e/WgnucU
Dep9gTWDel+heFDvQ6wbNP2xH1AyqPc1SvF99hPKBvU8ZxPGZz+ifFDvp2wZ
1Pst/kE939k2qPdnKgb1vs32Qb2fU4n5kasG9fynGr+fv/8zqPeHage1P1M3
qPeR6gf1vKhhUPs7gUG979QIfZObBu2T3Dyo503BQe0ftToccrjT4bDDEef3
o874w4N6X8tz5j8Ge5FTgxav5CzsQX1MDdr6QZ4e1PO2mUGLH/LFQb2flcP8
aL9LmA95dtDik/a/Muic/w3q/aqr+H360/ygnideG9T7UQv4Pfrr9UG977QI
/dLfbw7q/aSlQe2f3RrU89HlQef+z6Cer/qG9H7MiiGN54IhjfdVQ7oeFA7p
fY/VQ9o/KxrC/2f8D+l5dPGQ+T/Xq3VDet5dMqT9stIhXf/Khpzz/yGTl/2x
8iHTF9fTLUPaD/MPmb65Hm8b0vW6Ysjsxf7X9iGzF9f3yiHtb1VBXvarqvF9
cg2+z3xSO6T9qDqMz3xUP6T9pYYh7R8FhrQf1Dik/Z2mIe3HNA9p/yQ4pP2O
1iHtT4SGtL/Qid/L7/+HnP3/kO7vo5gf9+/DQ7pf96Av1gdj8C9yakjrieyQ
7renhnR/PY35sj6ZGdL99EX8PjmH3+f++dKQ1j+z0Af5CvyT9dIc7EW+OqT7
5Xnoh/XXNfgfeWFI67XrkIe8OKT745tDWv8twT/It4ZsvWK9uAx7kO8MWb5k
fekb1v3wimGLd3LBsNmb9euqYdMfuXBY693Vw6Y/1sNFw6Y/8pph0x/r5+Jh
3e+uGzb9sf4uGdb9bemw6Y9cNqz1/aZhp/4f1v3rlmHdr/qHdb+xbVj3oxXD
un/ZPqz7ncph3U9WDet+qxrycH9WM2zrAbl22OL5s4x/yLOD8Q95yA2Q53OM
/2GMy/gfNn8gNw2bP3ye8Q/9kYPDeP8E4x/jkUMY7wuMf+ivmvGP8cgRjPdF
xj/GIw9Dvl2Mf4xHHhvG+ygY/9AnOQt91jD+oU/yNOz3ZcY/7Ee+CHl3M/4x
PvkSxv8K4x/jk68gHmoZ//Af8lX46+OMf9iXfA3xsYfxj/mQr2M+5EX41xOM
f8QneQn2r2P8Qz/kZcyPfAfze5Lxfw7vy2H8n8P7NBj/52y+exn/52y+5MJz
eN8G4/+crSdPMf7PmT7Ja87hfRyM/3N4nw/j/5z5Vz3j/5zpm1x6Du/vYPyf
M/nIm87hfUGM/3Pmj+QtkJfsP2f2IW87Z/5CroD8+xj/58x/yZXQB7nqnK0P
5GqHa6Avcu05sze5Dvp7hvHvcMM58wdyAPolNzrcdM7il9zscBD2ILc6HHK4
E/Yihx2OOBw9h3kz/h32HB6D/ckph7MOTzk8DX8hzzh80eHcOYsX8iWHZx2+
Av8jzzl8Ff5Innf42jlbr8gLDl+H/36V8e/wTfgzeQn+TL7l8DL8m3wH8U32
jeD9NYz/EfP3/Yz/EfN38qoRvM+L8T9i/k1ePWL+TS4awftwGP8j5s/PMv5H
zJ/J60bMf8klI+Z/5NIRvF+M8T9inwHG/4jZl1w+YvYjbxkxe5H9I6Z/8rYR
vJ+H8T9i+iRvHzF9kiuhP3IV9HeA8Q/9kWugL3It9EWug36eZ/xDP+QG6Icc
GLF4JjdCP+Qm6KeR8T9i8UIOQl/kVuiLHIK+yJ0Oh0fMv8kR6JMcdXjYYc/h
Mej/Bca/8+9Zh6ccnnbmM+PwRWf+OUfeS44+Zh39XXH0O+fo/6pjr3n4P+17
zbH/guMf10csPulPiyMW7+SbkIf+uuT4+y0nXpad+LrjxKtv1In/UV1vCkZ1
/Vs1qvmgcFTz1+pRzZdFo5p/1+D3mK+LR01/+fw/qvVEyajWI6WjWs+UjWo9
tAnfZ/1UPqr115ZRsz/rNT/GZ323bVTrwwrMn/Xj9lG8H43xP6r1a9Wo1rvV
o1of14zifW6Mf+iL9XbdKN4fx/iHfKz3GzA/7gcCsBf3D42jmBfjf1TPw5pH
dX8THNX9UOuo7p9Co3pe0jmq5yPhUT0PiYzq+Wd0VM8/hiE/95feqJ53jI3q
+W4K8nP/mx3V8+SpUT3fmB7V842ZUT3fuIj5cb+fG9V+wCWMx/7B7Kieb1yB
PvLn//Bn9iuuwp/Y35gf1fsM16B/9kcWRvW+xfVRvb+xOKr9mJujel9laVTv
x9wa1fs4y6PaD7ozqv0in6f3j+7yzJ/IKzy973S3p+clBZ7pl7zS0/OTVZ72
u+7x9P5Woaf3u+719P7Xak/vh93n6f2xIoxPvt8zfbEft8bT+2hrPfM3cjHk
Zz/vAc/sQ16H+ZLXe3q+U+Jpf/BByEMudXiDw2UOb3R4k8MPOeOVO/PZ7Mx3
iyPPw468fk/7mVsdfW3zzF/Ijzj6rnDs8ahjr+2OPR/ztB9aifnRH3Z4en+v
CvYk7/T0vl61BzuAd3naL63B79Ofd3t6Hljr6X25PZ7ed6vz9Hxxr6f3x+o9
vd+1z9N+aYOn8b3f0/gPeNofPeDp+tHo6f2kg56uP03QD9enw56ezzZ7en57
1NP+ZhD65PrY4mn/shXjcX1tx3hcf0PQP9frDk/Pqzs97Td2eXrfJuxpfujx
NH9EPM0v/Z7mnyj0yfw0CH0yfw17el9gxNP7KJ6n90tinvbzxjAe82kS4zHf
pjAe8/G4p/25rKf9uEnok/23KeiT+f9lrK+sD6Y9rR9ewfdZX8xgfNYfr2J8
9ssuYv6sV17ztJ7JQX7WO697Tj/M0/7XG57WT7PQB+ury572t6542s96E/Nj
vTaH+bGeewv2IV+FvKz/3va0/zTvab/pHU/ryWue9pPe9bRftOBpP+g9T/s/
1z3t37zvaT9m0dN+yg1P+xE3Pe0PfOBpfb3k6f78Q0/337c8rddve7p/Xsb4
5I8Qj9wP3PF0//uxp/td33nd3951XvezK87r/uTu87pfLTiv+52V581/yavO
2yf3T/ec1/1W4Xndv9173vyT+7/V5y1fke/DfA4y/5/H+2+Z/8+bfl5k/j9v
+iGvPW/+TC4+b/7XxPx/3uxFXnfe7HWI+R/6IpdgfuQHMb/DzP+YH3kD5vc1
5v/ztv6SN0J/5E3QXzPzP+ZLLj9v/kzejPkeYf7HfMkPY75kP+xN3or5H2X+
x/zJj5y3eCZXwP4vMf9DHvJ2yEN+DPIEmf/PW7yQd8A/yFWwB3kn5CVXQ95j
zP/wH3IN5CfvhvzkWshP3nPe4q+F+R/6IO89b+sPuR76Ie+DfsgNsPdx5n/o
ixyAvsgH4K/kRuiPfBD+S26CPluZ/6FPcjP8hXwU+iUHoV9yC+KR3Ar9tjH/
Q7/kEPRL7jhv6xm5E/old0G/7cz/0C+5B/okR7DekPuhzxPM/9AneRD6Iw9D
f+QR6CvE/A99kWPQD3kM/kZOQh8nmf+hD/I45CdnIT95EvJ2MP9DXvLL8B/y
NOQ7xfwP+cgz8Afyq5Cnk/kf8pBfgzzkHOQ5zfwPe5IvIV7Ib8B+Xcz/iAfy
ZdiLfAX26mb+h7+T52Af8luwT5j5H/5Lfhv+Sp6Hv5LfgT3OMP/DHuR3IQ95
AfL0MP9DHvJ1yEN+H/L0Mv9DHvIN2Id8E/YhfwD7RJj/IR/5Q8hHvgX5yLdh
rz7mf9iL/BHkJd+B/5E/hrz9zP8xk5d8Vwzv92L+j5n85LtjeB8583/M/JO8
Mob3hTH/x0wf5Htipg9yYcw+o8z/Mbx/jPk/Zvoh3xfD+4iY/2OmL/L9MbwP
nfnf4bUxvO8MXBwzfQ6AH3B4XQzvOwKvd7gkZvonP+hwqcMbHC5zeKPDm5zx
HnK43JnvZoe3OPI+7OjD7+hvq6PfbY49HnHsVRHD+6LAjzr23+74y2OOP1XG
bD0k74ipv1bF1L93xjQeqjFf8q6YxltNTONzd0zjuTam8b8H43F9qIvperMX
8pPr4f9cv/bFdD1siOH9YeD9+D2uv4GYrt8HYrr+N8Y0fxyE/MxHTZgP+TC+
z3zZHNP8exT2z+f/mNYXLTGtZ1pjWj+1x7ReC8G+rO86YlpfdkJe1qddMa13
w9A/6+MezI/1dySm9Xt/TOv/aEz3D4MxPY8Zjun+ZSSm+x8vpuclsZied47F
9Hw2GdPzj1RM7wOM4++5v8zG9L7DZEz3r1MxvY/xMvyB++Np2IP751cQ/9xv
z8Tsk/vxV2O6f78I/+N+/7WY3p/JwX/ZL3gd9mA/4RLkYf/hDcyP/YnZmN4X
uhzT+0VXYE/2P97E99kfmYvp/aa34K/sr1yN6X2pt2P6PMx8TPs170C/7Odc
i+nzRO/GtP+zENPnS96L6X2x6zE9D3k/ps9PLcb0PtoN2Id8E/KzX/VBTPtX
SzG9//Yhxiffiul9udsxfX5sGf5B/iimz5vdienzKR/H9H6eL679trscXhE3
+ch3O1zg/P1Kh1fFdbx74jqfwrjO9964yrM6rvLeF9d+YFFcn5+7P676XBM3
f6G+18b1+bniuD7/80Bc+4nrMH/ae31c+4slcX1e7sG4xTu5NK7+tSGu/lcW
V//cGFf/3RRX/34obp/0/3LIQ94c1/7klrieFz6M32P8+fF7jM+tcT1/3AZ7
Mp4fiWu/siKu/cpH49qv3B7X89DH8H2uL5X4PtefHfg+16cqfJ/r1058n+tb
dVz7k7swf66HNZg/18vd8B+ur7XwD/Yb98Qtfrke18FfuV7vjet9tvq4nmfv
i+t9soa43vfaH9f7UYG45pcDce3/Ncb1/P5gXM/7m+J6P+Aw7M181xzXfHg0
rvcfgnHtr7VgvsyvrXHtl7VjvszPIeiX/a+OuPa3OuFf+fwf1/5UGPKyn9QT
13oigu+z3ujH+ORoXPs3g3HtvwzHtV8yEtf6x4P8rI9ice0/jMW1n5CE/llv
peLaDxiHPKzfsnGt5ybh76z3puK6P38Z9mS9OA35yK/EdX89g/mx/nwV/sz6
9CLkJb8W1/1wDv7N+vd1zJd8Ka772Tfiun+djet+9TLmz3r9Slzr+Tfjut+c
i+v+4K247hevwv7cb7wd1/3KfFz3O+9APvI12GMQ/C7sS17A+EPg9zA++TrG
Hwa/D/uTF6Ff8g3Ifw58E/Mhf4D5jICXoA/yh9A/+RbifxR8G/5DXsb8PPBH
mB/5DuZH/hj6Os/8P4b3UzD/j+H9Gcz/Y+YfMeb/Mbx/gvl/zOZLXjmG93cw
/4/h/bvM/2P2Ocb8P2bzJd87hvfzMv+P4X0izP9jeD8F8/8Y3j/C/I/5k9dg
/knm/zG8z535fwzvr2D+H7P1nbwO8yevx/xTzP+YP/nBMYtncumY6Z+8YQzv
v2D+h/7JG8fwPgzm/zG8r575f8z8hVwOecibYQ/yFtgjw/w/hvfFMP9DPvJW
yJdl/od85EcgH7kC8pEfhb3I22GvCeZ/yEuuhLzkHbAfuQryTzL/Q35yNfyR
vAv6INdAH+Td0MdvMP/D3uQ90A+5Dvoh7x2zfEKuh76mmP/HbH0kN0B/5P3Q
HzkAfycfgD7JjdAn+SD85zeZ/x0+DH2Tm6Fv8lHECzkI/ZNboH9yK/T/MvO/
wyHEF7kD9iF3wj7kLtiHHIZ9yD2Ix99i/oe9yP2wFzkKe5EHYS/yMOxFHoF9
ppn/YR9yDPYhj8E+5CTsQU5B/7/N/A/9k7PQN3kS+iZPQZ+vMP9Dn+Rp6I/8
CvRFnoG+fof5H/ohX4Q+yK/BX2eY/yE/+XXIT74EfyS/AXl/l/kf/kW+DPnI
VyDfq8z/8A/yHPyB/Bbk+T3mf9iX/DbsSZ6HPS8y/2P+5GuYP/ldzP/3mf8x
f/J7mD/5Oub/GvM/5k9ehH3IN2Af8k347x8w/8M+5CXYh/wh7JNj/od85Nuw
F3kZ8pI/grzkO/BX8scO+xKmjz9k/k+Y/5JXOHy3wwUJ0x95pcOrnL+/x+FC
h+915rM6ofO9L6HyFSUsPsn3J1Q/axKqz7UJ1XdxQu3xQALvm2f+T6h91yfw
fiXm/4T6y4MJ9a9SzI/+twHzIZdhfPrzxoTGw6aExs9D0Bfjqxy/z/jcnLD4
YLxvSeh68XBC1xt/QtevrQldH7cldP19JKHrfUVC882jCc1/26FP5svHEprf
KxNaP+xIaD1SldB6ZyfGY31UDX2yvtqV0PquBv7IenA35sd6sjah9eueBN7P
xvyf0Hp6b0Lr8/qE1vf7Ero/aMDfc7+xP6H7k0BCz1cO4O+5P2pM6PnHwYTu
v5oSul87nNDzi+aE7geP4u+5fwwm9HyiBfPnfrQV9uN+tT2h5xEh+B/3wx3w
Z+6XOxN6vt+V0PsEYdiP+/GehO7fIwnd3/cn9P5HFP7OfsFgQu+nDCf0fssI
1hP2IzzohxxL6PnEWELv7yQTet8nldD7QeMJW4/ZH8kmtH8yiXgiTyX0/tLL
iE/yNOzD/swrCX0+Ziahz7e8mtDnVy5Cv+TXEvr8Si6h/aHXE/p80aWE3u96
I6HPJ80m9PmWyw5fcfhNh+ccfsvhq854bzvzmXfm+44jzzVH3ncdfSw4+nov
of2x6wk9X3of8UX9Lya0f3YjoedTNxPaT/vAsf8S1jvyh/BH+s+thN5Hu431
j/62nND+20dYL+mvdxLaj/s4offLfEm9T3ZXUuNjRVLP8+5O2u8zvgqSev9r
ZVLjcVVS72/dk9TzxMKk3re6N6nxvzqp55P3JfX+UlFS7yPdn9T7RWuSel9o
LeZHLk7q+vVAUu/vrIO87N+tT+p9nJKk3rd5EPojlya1f7chqetvWVLvv2xM
6nnzpqT26x5K6v2U8qSeb29O6n2SLUm9L/JwUu9/+JPaf9ua1PsZ25J6X+AR
+APzV0XS/Jv57dGk9s+2w17Mh4/B/syXlUmLF+bTHUntd1Ul7ZP5dyf0S67G
fJivd2E+zOc1mA/7T7uT2m+qTWo/aQ/0w/qhDvYi701qP6g+qf2efUmtTxqS
2r/Zn9T+TCCp9c6BpPZXGpPaPzmY1H5IU1L7HYeT2r9oTmo9djSp/YRgUvsB
LUndv7cmdT/entT9dSip++eOpO6PO5O63+3C77P+DCd1/9qT1P1qJKn70/6k
7kejSd1/Dia1Xh5Oaj09ktR624N/sR6PJXX/OJbUej6Z1Ho/ldT9wHhS939Z
2IP7iUmMx/3IVFL3Ly8ndT80jfHIr0B/rzP/Q39/xPyP8cgXYf9LzP/QHzmH
8f6Y+R/rFflS0uqTN5j/Md6fMP/DXuTLsNcs8z/GI78Je/0p8z/sdZn5H+OR
r2I9+DPmf6xP5HmMd4X5H/5Hvobx/pz5H+O9yfyP8cjvYby/YP6HfOT3oc85
5n/IR74Bff4l8z/sR/4A/vIW8z/8k/whxv8r5n+MT76N8a8y/8N/yB/BX/+a
+R/ykz+Gfcm+Czaft5n/L9h8yCsumL3/hvn/At5fw/x/Ae+jYP6/ALsw/1/A
+2+Y/y/YfMmFF8xe5Hsv2Pz/lvn/At5nwfx/wdYrctEFk4d8/wWz7zvM/5CP
vPaCxQ+5+ILZn/wA5Cevu4D39zL/Qx9/x/x/Ae/TYP53uBT6Im9wuOyCxSt5
o8OboF/yQw6XX7B4IG92eIvDD8M+15j/Hd7q8LYLeD8I87/DFQ4/CnuTtzv8
2AVbX8mVDu+Af5CrHN55weKNXO3wLvgTucbh3fCvv2f+v2DxSt4DfyPXObwX
/keuv2DxTd4HfyQ3wB/fZf6HP5ID8D/yAfgfuRH+Rz4I//sH5n/4E/kw/Ifc
DPuTj8K+C8z/sB+5BfYgt0L/5HbokxyC/r7O/A99kTuhH3IX9PEe8z/0Qe6B
PsgR6IPcD/n/kfkf8pMHIT95GPKTRyDvdeZ/+Cc5BnnJY/AvchL+80/M/5Cf
PA7/IGchP3kS/kGegvzvM/9jfSJPQx/kV6AP8gz08c/M/1h/yBehH/Jr0A85
5/DrWF/Il6A/8hvwn0Xmf4cvQ7/kKw6/CX2T5xx+y+GrDr8N/yTPO/yO8/fX
HH7X4QVnfu85fN2R732HFx393HD0d9PR7weOPZYc+32IeKd9bzn2v+34yzLi
ifyR4293HP/8GPFLf/al1N/vSml8rEiZPIyfu1N4fxPzf0rjc2VK43lVSuP/
nhTeD8X8n9L15t6UrlerMR75vpSul0UpXX/vT+l6vyal+WdtSvNvccrJ//g9
1hPrUhb/rE/WY36sd0pSeD8X839K66tSzIf12QZ8n/VcWUrrv40pvF+M+R/6
YX35EObPerQc+mb9ujml9e+WlNbLD6e0vvanzD9Yj29N2Sfr9W2YH+v/R1K6
X6jA33M/8Sh+n/uT7SndzzyG+XA/VJnS85UdKd1vVcH/uF/bCXm5n6uGvNwP
7kpZvHH/WJPS847dKT3PrU3p+caelJ5/16X0vH5vSs8z6lN6f2FfSu9LNODv
ub/fn9L7HYGU3h85kNL7KI34e/YnDqb0fkwT/IH9jcMpva/TnNL7PkdhL/ZP
gik9z2jBeOzPtKb0flM77Mf+Tiil5xsd0B/7Q50pvZ/VldLnecIpve/Vk9Ln
QyIp7Vf1p/Q8JIr5sd81mNL+13BKnwcZSWm/zEvp+UkM/kgeS+n9uGRKnxdJ
pfR5snGHsynt3006POXwyw5PO/yK8/sz0Df5VWe+Fx15XnPkzcH/qY/XEW/k
Syk9b3ojpff9ZlPaX7yM+eXv/6X0vt+bKe03zqX0+aG3Uvr80dWUPu/0dkrv
8807/veO45/XHP99N6XndQvQD/3/vZTer7sOeRkv76f0fHAxpf3GGxif8Xgz
pffXPkhpf3EJ+me8f+isB7dSej/sdkrvey1jPK4vH6X0/tUd+AP7gx+n9L6T
L633j+5K6/q3Iq39v7vT2u8rSOv9lpVpmx/X21Vp++T6fE9a748UpvU+yL1p
ve+xOq33N+7D/JgfitJ6v+L+tHP+n9b7CGvTmp+K06Y/9sseSJv+mM/Wpc1e
zH/r09r/KknjfazM/2nNp6VpvK+W+T9t+mc+Lktr/2ojvs9+1aa05veH0tqf
Kk9rP2oz9Mv6YQv0RX44jfeTMv+ntb+0Na39pG1p7R89ktZ+UUVa+0OPprUf
tD2N95My/6e1v1OZ1v7NjrTWY1Vp7afsTGs/ozqt/YNdaWf/n9b9+u607r9r
07rf3pPWerMO8pD3pnW/XJ/W/fG+tNa3DRifvB/ykgPwf9bLB9JaTzemtd4+
mNb9bVNa97eH01q/N6e1vj+a1vo/mNb9bAvsTW5N636iPa37jVBa96sdad2v
dKZ1P9OV1v1pOK37oZ607p8iad1f9ad1fxZN635uEPKSh7F+kEcg778w/yPe
yDHYizwG+clJyH+D+R/+RB6H/OQs7EmeRLx8g/kf+iC/DPuSp6EP8itYT28y
/0N+8quQn3wR8pNfg/z/yvwPe5Nfh7zkS5D3A+Z/2Js8C/nIlyHfvzH/w77k
NyEPeQ7yLDH/Qx7yVchDfhvz/3fmf8yf/A7mT76G+X/I/A/7kBfgn+T3MN//
YP7HfMnvY763mP+x/pBvQN/km/Cv/2T+h3+RlzC/28z/0C/5FuZHvg1/+S/m
f8yP/BHmt8z8j/mRP8b8yL5xvF+Y+X/c5kdeMW7rFfnucfP3j5j/x83+5JXj
Zv//Zv4fN32S7xnH+2KY/8cxT+b/cby/hvl/HO+DYf4fx/tgmP/HTb//w/yP
+ZPXYP7kteN43w7z/7jpm/wA5CGvGzf9k9eP4/3JzP+Qj/wg5COXjtv6Rd4A
eX2H7bMM8pI3juP9M+BNkJ/80DjePwQuhz7Im2HPbwJvgX7ID4/jfUZgP/RF
3jpu8UPeBv2RH4H+7gJXOPwo/IO8HfolPzaO9+WAK6Fv8g6Hq6B/8k741zeD
q2EP8i6Ha2Af8u5xW1/JtbAXeQ/sRa5zeC/stwJcP473+4D3wZ7kBtiTvB/2
JAdgT/IB2JPcCHt+C/gg7Elugv3Ih2E/cjPsRz4Ke90NDsI+5BbYh9wKe5Db
of9vBYegb3IH9EvuhH7JXdBfATgM/ZF7oC9yBPoi90M/5Cj0823gQfg3eRj6
IY9AH2QP+lgJjkEf5DHog5yEP5JT0Me3g8ehD3IW/keehD7IU/Av8svQzyrw
NPRDfsXhGfgb+VXoj3zR4degT3LO4dcdvuTwGw7POnzZGe+Kw286851z5HnL
kf+qo6+34V/keUff7zj2uebY712sT+QFxAv94T3Hf647/vY+5k9ehP3o3zec
eLjpxM8HTvwtOfH8obM+3HLWn9vO+rfsrLcfOev9HSeffAz9MR/5MngfHfN/
RvPnigzez8b8n7HvM38XZCxe8vk/Y+OzXliVMfuy3rgno/VMYcb0z3ro3ozW
U6szpk/WX/dlLH5Z3xVltD68P6P15pqM1q9rM1ofF+PvWV8/gN9nvb8uo+dL
6zN6XlOS0f3Rgxk9TyyFvNzPbcjo+WhZxj65f9yY0fONTRk9r34o45z/Z/R+
w+aMnldsyeh9jYczej7hh3zc72/N6P2TbRm9v/JIRs8jKjLaj3gUf8/+xXb8
Pfsbj2X0Pk9lRu//7MjofaGqjN4v2gl/Yz+mOqPnEbugf/ZvajAe+zu7oS/2
f2ozej6xJ6P9o7qMPh+yN6PP/9QjXtiP2pfRflVDRp9P2p/R+2eBjN5PO5DR
+2uN+H32yw5m9LyjKaPPax3GeOTmjN6nO5rR58OCGb1/15LR50VaM/r8WXtG
7++FHO7I6PNrnQ53ORx2vt/jcMQZvz+j/cWoM/9BR77hjJ4HjSDeqB8vo/cL
Yxm9XziW0edtkhl9vi2V0fOoceiPnM1oP3PS8Ycpx19ezujzaNMZvV/4Skbv
F85k9HmmVzP6PNjFjPY/X3P8P5fR+4OvQz+Mn0sZ7Ye+AfkZb7MZPR+87MTr
Fay3+ft/+H7+/h++n7//h+9zfbgK/XD9eNtZX+ahD/ZH38lYvuR6dA3z53r1
bkb7oQuQn+vdexm9X3c9o/fp3s9o/3PRWV9vZPS+282M3l/7IKP9zaWM3vf6
MKP3nW5l9Hz7dkb7lcsZPS//CPpiPrmT0X7jxxm9P+PLQk7m/6z2B1dktd93
d1bzXwG+z/y4Mqv9tVVZ7Zfdk9X+VyG+z3x8L8Ynr85q/r4vq/2lInw/n//x
ffKarPaD1mZNf+z3FGe1v/NA1vTP+mNdVvs167PanynJmv3Zf3kwa/ZnvVOa
1f7KBsjDeqksq/2SjVm8P5f5P4v3/TL/Z7U+K89q/bY5q/2ILVntLzyc1f6A
P6v7+61Z3W9vy+r++JGs1qcVWbxvmfv/rMUH69vtWa2HH4O9WD9XQj7yjqzu
16qyWr/vzOp+qjqr+4ddsD+5Bvb/Du7/8Xv3cP+P3/tO7v/xe4Xc/+P3yHvx
e9/F/T9+717u//F73839P35vNff/+D1yAL/3Pdz/4/fu4/4f+vte7v+hvyLu
/2EP8mHY4/u4/4e/3c/9P+xLDmbxvlzu/zHfNdz/Y77kdtjn+7n/h73Xcv+P
+CJ3Qh8/wP0/5l/M/T/mT+6Bf/4g9//QD7kf4z3A/T/GIw9CXz/E/T/8lzwC
+dZx/4/xyTHISx6DPn+Y+3/Mh5zCfNZz/w/7kbPQN3kS8/sR7v+hf/LLmC95
Gvoq4f4f8yfPZC3fk1+FPOSLiC/ya5CPnIO+f5T7/6zVO+RLDr8BfZBnHb4M
/yBfcfhNh+egT/JbDl91+G3n+/MOv+PwNYffdea74PB7jrzXHX7f0deiwzcc
/d509P+Bw0uOvT507HnL4dtYz8nLjj985PjLHeQT+tPHDvsm1N/umlB/XDGB
962A755Q/y1weOUE3gcEXjWh/n/PBN7nAi50+N4JjZ/VE3ifEPg+h4smNP7u
d3jNBN4nA17rcPEE3k8EfsDhdQ6vn9D4L3H4QYdLHd7gcJnDGx3e5PBDDpc7
vNmZ7xaHH3bY7+hjq6O/bQ4/4ui/wrHXo449tzv2f8zxj0rHf3Y4/lbl+OPO
CfXf6gnYgfl/QuOjZkLjZ/eExl/thMbvngldD+omdP3YC/2R66GfB5n/oQ9y
A+Qn74e8P8b8D/nIByBPKfM/5CEfnLD1gtw0gfd/Mf9P2Hr148z/mD/5KOZP
DmL+G5j/MX9yK+ZPbsf8f4L5H/Mnd8A+5M4JW5/KmP8hDzkMecg9sA85AvnI
/bDXTzL/Q17yIOxHHob85BGHPYdjDo85nHQ45Yw37swn68x30pFnypH/ZUc/
0/AH8itYr6nfGcceryL+aK+Ljn1fc/whh/mRX0e80J8uYTz65xuIX/Ks4/+X
nfi54sTfm06+mXPWi7ec9ezqhNZnb09oPTcPf2X99w7GZ714Df7H+vJdzJ/1
6ALGYz37HubLevc69Mv6+H3ED+vrxQmtv29g/WK9fhN/z/r+A/w96/8l/D73
Cx9O6P7iFvyB+4/biEfuX5YhL/c3H03ofugO9Mv908fwT+6vfJN6fnHXpJ4H
rpjU88i7J/X8tGBSz39XTur59KpJ3Y/eM6nn74WTer5/76TeF1g9qfvl+yb1
/kIR5sP99/2T5o/cn6+ZNP/m/n0t5OV+v3hS+wEPTFp8sF+wbtL8gf2E9RiP
/YeSyfx9mP8PAFkDwg==
        "]]}}, {{}, {}}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
    AxesLabel -> {
      FormBox["\"Year\"", TraditionalForm], 
      FormBox[
      "\"CO\\!\\(\\*StyleBox[\\\"2\\\",FontSize->7]\\) (ppm)\"", 
       TraditionalForm]}, AxesOrigin -> {0., 387.4966666666667}, 
    DisplayFunction -> Identity, Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {{100, 465, 830, 1195, 1560, 1925, 2290, 2655, 3020, 3385, 
      3750}, Automatic}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImageSize -> {554.5071105957031, Automatic}, 
    Method -> {
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}}, PlotLabel -> 
    FormBox["\"Global Trend and Smoothed Effects in CO\\!\\(\\*StyleBox[\\\"2\
\\\",FontSize->7]\\)\"", TraditionalForm], 
    PlotRange -> {{0., 3860.}, {387.4966666666667, 419.1}}, PlotRangeClipping -> 
    True, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}}, Ticks -> {{{100, 
        FormBox["\"2012\"", TraditionalForm]}, {465, 
        FormBox["\"2013\"", TraditionalForm]}, {830, 
        FormBox["\"2014\"", TraditionalForm]}, {1195, 
        FormBox["\"2015\"", TraditionalForm]}, {1560, 
        FormBox["\"2016\"", TraditionalForm]}, {1925, 
        FormBox["\"2017\"", TraditionalForm]}, {2290, 
        FormBox["\"2018\"", TraditionalForm]}, {2655, 
        FormBox["\"2019\"", TraditionalForm]}, {3020, 
        FormBox["\"2020\"", TraditionalForm]}, {3385, 
        FormBox["\"2021\"", TraditionalForm]}, {3750, 
        FormBox["\"2022\"", TraditionalForm]}}, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Smoothed\"", "\"Trend\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.867841531252345*^9, 3.867841552047986*^9}, 
   3.867909932193459*^9, 3.867909993855096*^9, 3.867911519545147*^9, 
   3.8679928600045633`*^9, 3.868012173358225*^9, 3.868012285814827*^9, 
   3.8680123232293673`*^9, 3.868012358773941*^9, 3.868012693677*^9, 
   3.868012727550166*^9},
 CellLabel->
  "Out[852]=",ExpressionUUID->"f633c70b-142b-4dbe-9d3a-d5edc19d2ebb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinearFit1", "=", 
  RowBox[{"Fit", "[", 
   RowBox[{"smoothed", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "x"}], "}"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.868163113560067*^9, 3.86816312530682*^9}, {
   3.868163193549472*^9, 3.8681632035217447`*^9}, 3.868163241561269*^9},
 CellLabel->
  "In[364]:=",ExpressionUUID->"0cc007de-4260-41bf-a166-be4eb0ad9393"],

Cell[BoxData[
 RowBox[{"391.6305106198803`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.006799537252648674`", " ", "x"}]}]], "Output",
 CellChangeTimes->{3.868163241883336*^9},
 CellLabel->
  "Out[364]=",ExpressionUUID->"1ec8c301-8256-46e1-825a-85d436eee372"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Annual mean CO2 at Mauna Loa since 1958", "Section",
 CellChangeTimes->{{3.8678388061706743`*^9, 
  3.867838817682137*^9}},ExpressionUUID->"8b95784f-6b15-4442-988b-\
8c3485819521"],

Cell["\<\
Annual mean CO2 at Mauna Loa Observatory. The CO2 data is collected over time \
at annual intervals. The trend line is a smooth curve upward over time. This \
indicates that the seasonality is over the year, and would be seen at monthly \
intervals.\
\>", "Text",
 CellChangeTimes->{{3.867836677233677*^9, 3.8678366890981197`*^9}, {
  3.867836845385845*^9, 3.867836847364491*^9}, {3.8679097371243057`*^9, 
  3.8679098341127033`*^9}},ExpressionUUID->"6944aba6-7388-47e1-808a-\
6408d7e772f0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"annualCO2", "//", "Dimensions"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"annualCO2", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{";;", "6"}], ",", " ", ";;"}], "]"}], "]"}], "//", 
  "Dataset"}]}], "Input",
 CellChangeTimes->{{3.8678373369086857`*^9, 3.867837349324506*^9}, {
   3.8678389446504707`*^9, 3.8678389499465427`*^9}, 3.867996502197269*^9},
 CellLabel->
  "In[746]:=",ExpressionUUID->"c3bd5b04-ad58-45cb-9889-f54b7bb21f85"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"64", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{{3.867837344167389*^9, 3.8678373496413727`*^9}, 
   3.867838831010015*^9, 3.86783895033103*^9, 3.86790993232412*^9, 
   3.86790999389017*^9, 3.867911519581737*^9, 3.867992860045435*^9, {
   3.86799649496439*^9, 3.86799650279148*^9}, 3.868012173365383*^9},
 CellLabel->
  "Out[746]=",ExpressionUUID->"1f4e0292-a1c0-4345-ae79-3e0808776cae"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> {{"year", "mean", "unc"}, {1959, 315.98, 0.12}, {
       1960, 316.91, 0.12}, {1961, 317.64, 0.12}, {1962, 318.45, 0.12}, {
       1963, 318.99, 0.12}}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MatrixShape[6, 3], 6, 3, {All}], "InitialType" -> 
     TypeSystem`Vector[
       TypeSystem`Vector[TypeSystem`AnyType, 3], 6], "Meta" -> Association[], 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MatrixShape[6, 3], 6, 3, {All}], "Type" -> 
     TypeSystem`Vector[
       TypeSystem`Vector[TypeSystem`AnyType, 3], 6], "Path" -> {}, 
     "DisplayedRowCount" -> 6, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     6, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation["year", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["mean", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["unc", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1959"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["315.98"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1960"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["316.91"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1961"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["317.64"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1962"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["318.45"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1963"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["318.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{191., {87.634033203125, 93.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{191., {87.634033203125, 93.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.867837344167389*^9, 3.8678373496413727`*^9}, 
   3.867838831010015*^9, 3.86783895033103*^9, 3.86790993232412*^9, 
   3.86790999389017*^9, 3.867911519581737*^9, 3.867992860045435*^9, {
   3.86799649496439*^9, 3.86799650279148*^9}, 3.868012173399837*^9},
 CellLabel->
  "Out[747]=",ExpressionUUID->"d0b91fa6-30f2-4842-b2bb-f491700c3263"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"mean", " ", "=", " ", 
    RowBox[{"annualCO2", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"2", ";;"}], ",", " ", "2"}], "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"all", " ", "rows"}], ",", " ", 
    RowBox[{"2", "nd", " ", "column"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"summary", "[", "mean", "]"}]}], "Input",
 CellChangeTimes->{{3.867838861948132*^9, 3.867838894647134*^9}, {
  3.8678391857756977`*^9, 3.867839214906439*^9}},
 CellLabel->
  "In[748]:=",ExpressionUUID->"433e959c-d517-4d7f-8f43-2bb1288ca079"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "315.98`", ",", "330.19`", ",", "357.33809523809526`", ",", "382.09`", ",", 
   "416.45`"}], "}"}]], "Output",
 CellChangeTimes->{3.867839215647068*^9, 3.8679099324002047`*^9, 
  3.867909993997218*^9, 3.867911519696031*^9, 3.867992860157352*^9, 
  3.8680121734706697`*^9},
 CellLabel->
  "Out[749]=",ExpressionUUID->"8fa35f28-ad41-45c7-9c20-ab65aae17545"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tickList2", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"10", ",", " ", "\"\<1967\>\""}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"20", ",", " ", "\"\<1977\>\""}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"30", ",", " ", "\"\<1987\>\""}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"40", ",", " ", "\"\<1997\>\""}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"50", ",", " ", "\"\<2007\>\""}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"60", ",", " ", "\"\<2017\>\""}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8678390534827433`*^9, 3.867839122307*^9}},
 CellLabel->
  "In[750]:=",ExpressionUUID->"95316869-6c1d-427b-9c40-c2687ce94f3f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"10", ",", "\<\"1967\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "\<\"1977\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"30", ",", "\<\"1987\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"40", ",", "\<\"1997\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"50", ",", "\<\"2007\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"60", ",", "\<\"2017\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.867839020606934*^9, 3.867839123989933*^9, 
  3.86790993242962*^9, 3.8679099940352573`*^9, 3.867911519732973*^9, 
  3.86799286019914*^9, 3.868012173502475*^9},
 CellLabel->
  "Out[750]=",ExpressionUUID->"412a10e6-7f70-4071-89cc-f6090d0fce0d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", "mean", "}"}], ",", "  ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Trend\>\"", ",", " ", "\"\<Smoothed\>\""}], " ", "}"}]}], 
   ",", " ", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Global Trend and Smoothed Effects in \
CO\!\(\*StyleBox[\"2\",FontSize->7]\)\>\""}], ",", "  ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Year\>\"", ",", " ", 
      "\"\<CO\!\(\*StyleBox[\"2\",FontSize->7]\) (ppm)\>\""}], "}"}]}], ",", 
   " ", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"tickList2", ",", " ", "Automatic"}], "}"}]}], ",", " ", 
   RowBox[{"GridLines", "->", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.86783897128757*^9, 3.867839001968914*^9}, {
  3.867839146733575*^9, 3.867839154473116*^9}, {3.86801213597139*^9, 
  3.868012160258499*^9}},
 CellLabel->
  "In[751]:=",ExpressionUUID->"e447b540-167f-460f-aa88-d3a0b55f4d26"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJw1kksohFEYhv9saEopo5RLSAxJ434d841hLsyMsFCaDTVWyrgzktnMSpo1
NmpYKWWHBWLpslJTymKysEBsKNn4j/e8p6bp+Z+v853zfqd8cmYkkmUYhtP8
qX+sT6cvE7MeXcyL/iDXX7Zw8p6cI5Z0Kup4JOdJk1ovZKvsRx2W9Ae5UEZO
ShOvP+RimTV1yljQXAZfQK6QNeuRN1NBrpS7W3PZyVWo95NtqB8n10ridfik
NEKuk+SVeYFlcj3qd8h2UdexpMgN2P+Y3CiqPHZJbhJ1/OgTuRn5fJNb4HMX
NbdKWB2gjtyG/V3kdvnPe4zcIVNqzZE7ZWfbXFvkLvABuVu+zfZXp2SH1KiG
D+Qe3O+X7MS88pc0C7hac1xzF70L8/LRu5DnKH0veIa+V97M+BNJejfewyG9
W1Sc1nP6PuT1Tt+HfjnL2vdj/yLN8X7Mt4Xeg/OO0XuQ5wa9F36X3gt/Qe9D
/wy9T9R4ho0V7f2iyr0lmuN+vP9O+gHMY4Je8zr9IOaxRz+IPG7oA/Bv9AG8
l7xV7YN4Xx7N8SD8NH0IeW/Sh1B/Rj+Efs/0Q8gjOyZ/IYgJ2w==
         
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Year\"", TraditionalForm], 
       FormBox[
       "\"CO\\!\\(\\*StyleBox[\\\"2\\\",FontSize->7]\\) (ppm)\"", 
        TraditionalForm]}, AxesOrigin -> {0., 310.3983333333334}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{10, 20, 30, 40, 50, 60}, Automatic}, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox[
      "\"Global Trend and Smoothed Effects in \
CO\\!\\(\\*StyleBox[\\\"2\\\",FontSize->7]\\)\"", TraditionalForm], 
     PlotRange -> {{0., 63.}, {310.3983333333334, 416.45}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {{{10, 
         FormBox["\"1967\"", TraditionalForm]}, {20, 
         FormBox["\"1977\"", TraditionalForm]}, {30, 
         FormBox["\"1987\"", TraditionalForm]}, {40, 
         FormBox["\"1997\"", TraditionalForm]}, {50, 
         FormBox["\"2007\"", TraditionalForm]}, {60, 
         FormBox["\"2017\"", TraditionalForm]}}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Trend\"", "\"Smoothed\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "False", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.867838973329391*^9, 3.867839002408876*^9}, {
   3.867839125633152*^9, 3.8678391550916233`*^9}, 3.867839226298295*^9, 
   3.867909932487296*^9, 3.867909994101426*^9, 3.86791151980847*^9, 
   3.867992860280079*^9, {3.8680121372225943`*^9, 3.86801217357519*^9}},
 CellLabel->
  "Out[751]=",ExpressionUUID->"524e065b-d824-4363-b3ac-6d04f93e32f6"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Monthly CO2 Data from Mauna Loa", "Section",
 CellChangeTimes->{{3.867838837479184*^9, 
  3.867838845488326*^9}},ExpressionUUID->"7517bf8b-b2d2-4470-b324-\
faec9b974050"],

Cell["\<\
Monthly data from Mauna Loa. We look at the monthly data in order to better \
see the seasonality effects in the data.\
\>", "Text",
 CellChangeTimes->{{3.8678368604654007`*^9, 3.867836872018059*^9}, {
  3.867909850878995*^9, 
  3.8679098672018013`*^9}},ExpressionUUID->"1a1398cc-b3e5-4e09-80dc-\
c6dd448d64d1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"monthlyCO2", "//", "Dimensions"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"monthlyCO2", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{";;", "6"}], ",", ";;"}], "]"}], "]"}], "//", 
  "Dataset"}]}], "Input",
 CellChangeTimes->{{3.867837228178426*^9, 3.867837240333002*^9}, {
   3.867839295666952*^9, 3.867839300356648*^9}, 3.8679965247414913`*^9},
 CellLabel->
  "In[752]:=",ExpressionUUID->"f5fdc51d-3692-41ae-9e85-909bdfeb8d5f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"773", ",", "8"}], "}"}]], "Output",
 CellChangeTimes->{{3.867837236778988*^9, 3.867837240654746*^9}, 
   3.867839300745613*^9, 3.86790993249265*^9, 3.867909994125882*^9, 
   3.867911519837225*^9, 3.867992860286872*^9, 3.867996525132103*^9, 
   3.868012173616249*^9},
 CellLabel->
  "Out[752]=",ExpressionUUID->"fd2b4e95-a786-4652-a3ab-fc492049e7a7"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> {{
       "year", "month", "decimal date", "average", "deseasonalized", "ndays", 
        "sdev", "unc"}, {
       1958, 3, 1958.2027, 315.7, 314.43, -1, -9.99, -0.99}, {
       1958, 4, 1958.2877, 317.45, 315.16, -1, -9.99, -0.99}, {
       1958, 5, 1958.3699, 317.51, 314.71, -1, -9.99, -0.99}, {
       1958, 6, 1958.4548, 317.24, 315.14, -1, -9.99, -0.99}, {
       1958, 7, 1958.537, 315.86, 315.18, -1, -9.99, -0.99}}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MatrixShape[6, 8], 6, 8, {All}], "InitialType" -> 
     TypeSystem`Vector[
       TypeSystem`Vector[TypeSystem`AnyType, 8], 6], "Meta" -> Association[], 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MatrixShape[6, 8], 6, 8, {All}], "Type" -> 
     TypeSystem`Vector[
       TypeSystem`Vector[TypeSystem`AnyType, 8], 6], "Path" -> {}, 
     "DisplayedRowCount" -> 6, "DisplayedColumnCount" -> 8, "DataRowCount" -> 
     6, "DataColumnCount" -> 8, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation["year", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["month", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["decimal date", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["average", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["deseasonalized", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{156.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ndays", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["sdev", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["unc", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1958"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1958.2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["315.7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["314.43"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-9.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1958"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1958.29"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["317.45"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["315.16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-9.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1958"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1958.37"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["317.51"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["314.71"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-9.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1958"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1958.45"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["317.24"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["315.14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-9.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1958"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1958.54"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["315.86"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["315.18"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-9.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.99"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{714., {87.634033203125, 93.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{714., {87.634033203125, 93.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.867837236778988*^9, 3.867837240654746*^9}, 
   3.867839300745613*^9, 3.86790993249265*^9, 3.867909994125882*^9, 
   3.867911519837225*^9, 3.867992860286872*^9, 3.867996525132103*^9, 
   3.868012173661282*^9},
 CellLabel->
  "Out[753]=",ExpressionUUID->"61f8e31c-1054-40f3-9615-59b57b1654ba"]
}, Open  ]],

Cell["\<\
All years from 1958 to 2022 in monthly intervals.  The third column shows the \
decimal date. We can delineate the columns in the dataset.\
\>", "Text",
 CellChangeTimes->{{3.867397665002582*^9, 3.867397742021846*^9}, {
  3.867397776866159*^9, 3.867397793727852*^9}, {3.8677782700882177`*^9, 
  3.867778289205464*^9}},ExpressionUUID->"2810eb50-6904-4500-8c1f-\
a65f4942a184"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"year", " ", "=", "  ", 
   RowBox[{"monthlyCO2", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"2", ";;"}], ",", "1"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"average", " ", "=", " ", 
   RowBox[{"monthlyCO2", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"2", ";;"}], ",", "4"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"deseasonalised", " ", "=", " ", 
   RowBox[{"monthlyCO2", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"2", ";;"}], ",", "5"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sdev", " ", "=", " ", 
   RowBox[{"monthlyCO2", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"2", ";;"}], ",", "7"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"unc", " ", "=", " ", 
   RowBox[{"monthlyCO2", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"2", ";;"}], ",", "8"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.867398218894197*^9, 3.8673982913507023`*^9}, {
   3.8673988695354567`*^9, 3.867398886328874*^9}, 3.8677767241786613`*^9, {
   3.867839277157393*^9, 3.8678393156943607`*^9}},
 CellLabel->
  "In[754]:=",ExpressionUUID->"3e415f4b-d937-408b-a5fc-1eb616986d0b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"BoxWhiskerChart", "[", 
  RowBox[{"average", ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Box-Plot - Averages\>\""}], ",", " ", 
   
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\>\"", ",", "\"\<CO\!\(\*StyleBox[\"2\",FontSize->9]\) (ppm)\>\""}],
      "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"summary", "[", "average", "]"}]}], "Input",
 CellChangeTimes->{{3.867398208417419*^9, 3.867398208439856*^9}, {
  3.867398312424123*^9, 3.867398383868174*^9}, {3.867398698646538*^9, 
  3.867398701432838*^9}, {3.867582660893508*^9, 3.8675826682240477`*^9}, {
  3.8678393237944613`*^9, 3.8678393976002073`*^9}, {3.867841629030799*^9, 
  3.867841631387452*^9}},
 CellLabel->
  "In[759]:=",ExpressionUUID->"4a413929-7a27-49f6-96a8-6e7be7d24c40"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{-0.19605693430634064`, 307.002}, {2.1960569343063403`, 
     426.418}}]}, 
   {RGBColor[0.982864, 0.7431472, 0.3262672], CapForm[None], {}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           GraphicsGroupBox[{Antialiasing -> False, 
             
             PolygonBox[{{0.8039430656936596, 382.13}, {1.1960569343063403`, 
              382.13}, {1.1960569343063403`, 329.57}, {0.8039430656936596, 
              329.57}}], {}, {{}, {}}, {}, {
              GrayLevel[0], 
              GrayLevel[1], 
              
              LineBox[{{1.1960569343063403`, 353.93}, {0.8039430656936597, 
               353.93}}]}, {}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              
              LineBox[{{{1., 329.57}, {1., 312.43}}, {{1., 382.13}, {1., 
               420.99}}}]}, {
              GrayLevel[0], 
              GrayLevel[0.5], 
              
              LineBox[{{{1.0980284671531702`, 312.43}, {0.9019715328468298, 
               312.43}}, {{1.0980284671531702`, 420.99}, {0.9019715328468298, 
               420.99}}}]}, {}}]},
          
          ImageSizeCache->{{173.5857864376269, 
           224.4142135623731}, {-85.4142135623731, 79.4142135623731}}],
         "DelayedMouseEffectStyle"],
        StyleBox[
         TagBox[
          GridBox[{{
             StyleBox["\"max\"", Bold, StripOnInput -> False], "420.99`"}, {
             StyleBox["\"75%\"", Bold, StripOnInput -> False], "382.13`"}, {
             StyleBox["\"median\"", Bold, StripOnInput -> False], "353.93`"}, {
             StyleBox["\"25%\"", Bold, StripOnInput -> False], "329.57`"}, {
             StyleBox["\"min\"", Bold, StripOnInput -> False], "312.43`"}}, 
           GridBoxAlignment -> {"Columns" -> {Center, ".", {Left}}}, 
           AutoDelete -> False, GridBoxDividers -> {"Columns" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}, "Rows" -> {
               Directive[
                GrayLevel[0.3]], {
                Directive[
                 GrayLevel[0.3]]}, 
               Directive[
                GrayLevel[0.3]]}}, 
           GridBoxFrame -> {
            "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> GrayLevel[0]}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, BaseStyle -> 
           Directive[
             AbsoluteThickness[1], 
             Dashing[{}]]], "Grid"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Grid[{{
            Style["max", Bold], 420.99}, {
            Style["75%", Bold], 382.13}, {
            Style["median", Bold], 353.93}, {
            Style["25%", Bold], 329.57}, {
            Style["min", Bold], 312.43}}, Dividers -> {{
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}, {
             Directive[
              GrayLevel[0.3]], {
              Directive[
               GrayLevel[0.3]]}, 
             Directive[
              GrayLevel[0.3]]}}, Alignment -> {{Center, ".", {Left}}}, Frame -> 
          GrayLevel[0], BaseStyle -> Directive[
            AbsoluteThickness[1], 
            Dashing[{}]]], {}], 
        "Tooltip"]& ]}}, {}, {}}, {{{{{{}, {}}, {}}, {}}, {}}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.7843373722630256, 307.002},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{
     FormBox[
     "\"CO\\!\\(\\*StyleBox[\\\"2\\\",FontSize->9]\\) (ppm)\"", 
      TraditionalForm], None}, {
     FormBox["\"\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {{{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      0.8039430656936596, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      1.1960569343063403`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, {{1., 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
      0.8039430656936596, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
      1.1960569343063403`, 
       FormBox[
        TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox["\"Box-Plot - Averages\"", TraditionalForm],
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{{1., 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
     0.8039430656936596, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}, {
     1.1960569343063403`, 
      FormBox[
       TemplateBox[{0}, "Spacer1"], TraditionalForm], {0, 0}}}, 
    Automatic}]], "Output",
 CellChangeTimes->{
  3.867582668615449*^9, {3.867839321247601*^9, 3.867839398366126*^9}, 
   3.867841632210959*^9, 3.8679099326907253`*^9, 3.86790999432952*^9, 
   3.867911520060174*^9, 3.8679928605042477`*^9, 3.868012173821575*^9},
 CellLabel->
  "Out[759]=",ExpressionUUID->"fa2b474e-3c10-42e7-8c2b-dbf98396e521"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "312.43`", ",", "329.56`", ",", "357.2782124352332`", ",", "382.02`", ",", 
   "420.99`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.867582668615449*^9, {3.867839321247601*^9, 3.867839398366126*^9}, 
   3.867841632210959*^9, 3.8679099326907253`*^9, 3.86790999432952*^9, 
   3.867911520060174*^9, 3.8679928605042477`*^9, 3.8680121738247967`*^9},
 CellLabel->
  "Out[760]=",ExpressionUUID->"97b448d3-c36f-47d4-99fb-4bba9f84fcc7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Seasonality within the monthly data", "Subsection",
 CellChangeTimes->{{3.867839571806288*^9, 
  3.867839578711917*^9}},ExpressionUUID->"860ad1f2-4fe6-4494-a47d-\
822a6c2df854"],

Cell["\<\
From plotting the average CO2 data, we see there is clearly a trend upwards \
across time. Evident too is the fact that there is seasonality within the \
data. We can overlay the de-seasonalised data in order to see clearly the \
moving average.  Look up seasonality in CO2 in google Scholar.\
\>", "Text",
 CellChangeTimes->{{3.86757720532902*^9, 3.867577280290638*^9}, {
  3.867582519315097*^9, 
  3.8675825324817667`*^9}},ExpressionUUID->"b496b182-a932-4200-9c31-\
f99cff207d7a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tickList3", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"205", ",", " ", "\"\<1975\>\""}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"385", ",", " ", "\"\<1990\>\""}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"565", ",", " ", "\"\<2005\>\""}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"745", ",", " ", "\"\<2020\>\""}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.867756917052346*^9, 3.86775696381889*^9}, {
   3.867757002408499*^9, 3.867757007036878*^9}, {3.867757121869507*^9, 
   3.867757134994787*^9}, 3.867757173462619*^9, {3.867777208306953*^9, 
   3.867777301661633*^9}, {3.867777344811225*^9, 3.8677774477813*^9}, 
   3.867839618252398*^9, {3.867843307356182*^9, 3.86784334047814*^9}},
 CellLabel->
  "In[761]:=",ExpressionUUID->"b5539759-30a6-4bb3-98dd-b858858aca36"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"205", ",", "\<\"1975\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"385", ",", "\<\"1990\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"565", ",", "\<\"2005\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"745", ",", "\<\"2020\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8677767863304653`*^9, {3.867777215276681*^9, 3.8677772417873487`*^9}, 
   3.867777368997767*^9, {3.867777436340711*^9, 3.867777448700121*^9}, 
   3.8678396368093767`*^9, {3.86784331345268*^9, 3.867843340714657*^9}, 
   3.8679099327044373`*^9, 3.867909994355998*^9, 3.867911520090528*^9, 
   3.8679928605344143`*^9, 3.86801217383519*^9},
 CellLabel->
  "Out[761]=",ExpressionUUID->"49dbb14c-9cbf-4aad-827b-d9096e26139c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"average", ",", " ", "deseasonalised"}], "}"}], ",", "  ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Average Effects\>\"", ",", " ", "\"\<Deseasonalised\>\""}], 
     " ", "}"}]}], ",", " ", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Average and Deseasonalised Effects \!\(\*StyleBox[\(CO\*StyleBox[\"2\
\",FontSize->7]\)]\)\!\(\*StyleBox[\" \",FontSize->7]\)(ppm)\>\""}], ",", " ", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"tickList3", ",", " ", "Automatic"}], "}"}]}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Year\>\"", ",", " ", 
      "\"\<CO\!\(\*StyleBox[\"2\",FontSize->7]\) (ppm)\>\""}], "}"}]}], ",", 
   " ", 
   RowBox[{"GridLines", "->", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8675762684825706`*^9, 3.867576408476399*^9}, {
   3.867582420692429*^9, 3.867582426415737*^9}, {3.867590597001054*^9, 
   3.867590611186451*^9}, {3.867590671103364*^9, 3.8675906733692923`*^9}, {
   3.867591290128038*^9, 3.867591293530402*^9}, {3.867591403451645*^9, 
   3.8675914361447783`*^9}, {3.867591510536777*^9, 3.867591560768853*^9}, {
   3.86759193020144*^9, 3.86759193205905*^9}, 3.867591979880834*^9, {
   3.867592063907503*^9, 3.867592064017222*^9}, {3.867592096844545*^9, 
   3.867592115286634*^9}, {3.867592196470395*^9, 3.867592265789315*^9}, {
   3.86759229698722*^9, 3.8675923213709173`*^9}, {3.867757033928495*^9, 
   3.867757088664853*^9}, {3.8677774678554583`*^9, 3.867777511557467*^9}, 
   3.8678396206400967`*^9, {3.867839651710968*^9, 3.867839662295546*^9}, {
   3.8678433608889523`*^9, 3.867843373328233*^9}, {3.867912213763816*^9, 
   3.8679122571571693`*^9}, {3.868012186054965*^9, 3.8680121864620047`*^9}},
 CellLabel->
  "In[825]:=",ExpressionUUID->"380ad19a-82ab-45e5-9bc2-9d06a67f0501"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{}, {}, {
       RGBColor[0.368417, 0.506779, 0.709798], 
       PointSize[0.006944444444444445], 
       AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxdmnl4nWW1xY9YNAwXolSJguWADEURwmgtlH7QUgq0kM7pfJo2Y5vmZD45
mb4zR0WIAlpQMYIP1ooY5/goEga1CkKQwYIDQYZWCxruBW6V69XEtX7xSfLP
96zs991rr732+54hObmiYXnlYZFIZMbbI5GJp37G5p8/8fOj5sC/CP6NfwMu
Cjbc+MAbs/eBi4OvxOcd+ZsnwDODN2ePr7gXXBJ0zrznyufvAZ+ofDeBo4rn
wacEzyfHf3EL+NTgpNzBZUN7wKcr/kPw7GDxxC9+Dv5QUDXx80vwWcEry4Zm
5X4LPjtoHC/3zhfBpVr/R/C5iu8Fnxf86pHxn7vB5wcT4fgXwRdMq/fC4MyJ
Bk2uv2havR+V3p+B56j+x8Af0/pnwHODieXJMfDFqi/SYnyJ6vkb8XnKP6nn
Uun7CXi++nkHOBAfesJAz0HilwXj2ecd+SDxy4IJunmPEr9cftLf8HLVd4D4
Aun7X+ILxHcE9S8Mxt05uOz/iC8MJsqb9Sf2X6F8jxC/QvP2TeKL1O/vEl8U
3Hbr+M/9xK/UvI4Qv1J6niO+WP5Sb7hY/fs78atUD/WGV6neYuq/Olg+8YvJ
+NWa/0k/rlH/nyb/NXo+RHyJ/Pg+8SWq72HiS6f1d6n0HyR+rep7jfi14v8H
8euCifGZ+V7qu07PU6m/TP4cbxyUKf9b5CuT3t8ZD5cFE+3cwDxElmn9fcbB
MtXzOPuXyY+X2O/4ZH+Wyx/mOViufEdR73LN9weMh71+sv4VmsdZ7F+h/r2T
/cb0a3iF+jnZ35Xy71fUv1L+P0v9K6V3cv9K5WOeI6um8gWrVM8x8BufQv2r
5Dc4slr86AtWi+849jv+KvyrNe/4EVmj+X2S+tdMXR+uEd+b7F8zdV4j5fLn
ffCXq97T4S9Xvy6m/nKd38vYv1bPS9i/VvM2uX+t5vFw9q9V/j9T/zrxP0/9
63TfTd4Hxpy34XXiPw3+9XrOhn+97otS+NdL/yL2e30Z+zdovtATbNB+8oUb
tB8/hzfo+Tr1b5Qe+hts1HmanN+N8vMk9m/U/J8J/ybdD+fBv0n5LmX/Jp0/
6h3epP1r2b9Z/V3F/s3afzn7HT+Z/ZvVP/yIxPScYRyNKf97yBdTvrONY14f
kD82tb8DMfm/Dr5Y8OC4/BvrjEcdb4N/i/qzHf4tim+Cf4v2z4V/y7T52qL5
OBH+LdL7Efi3aN7xd3SLzs+k/xXyazP8FTr/O+GvEF8a/gr1LwV/hfQn4a/Q
PFXCX6H74Rr4KzTv58K/VfUwr9Gtut/ob7BV/Mvh3yq+Cvi3ql76O+B4E/xb
Nc9d8Hv9DfBvk98fh3+b+tcK/zatXw2/4xfCv031z4F/m+6jJfBvk54Y/Ns0
zzvgr5Q++het1JN6g0q9f/s8/JWq98vwV6rfn4a/UnpD+L0eP0a9fin8Vbrf
VsBfpWcN/FXSk4DfuA/+KunfBb/jX4Hf+Ybgr/L7VfirVd/98FdrXr8Bf7Xy
3wx/tfpJPWG1/MHvgWqdF+Z1uFrn9xPwV2v+boG/Rufv6/DXqL4fwF/j99Pw
12ien4C/Rv17EP4a6fkW/N7/GfhrdH6Yr0itzm8L/LXSm4W/Vutvhb9W9VFv
WKv6qXegVvXdB3+t5vVx+GtV73Pw1+m8PA1/neaN/UGd1n8J/jo9J/2vU/4c
/HWa58/CXyc/vwZ/nfQxD5Hter/zMPzble8p+B0/CP921QcOt6sf6BnYrn6h
d3i75mMP/NvVrxvh36F8n4R/h+bnDvh3qP4fwr9D+ZiHcIf692v4dyj/X+Hf
ofk7rNX83n+McaRe+4lH67X+L/DXq1974a/X+f4u/PWaH/BAvfg5X8P1mvdn
0F+v+aC+yE6dp9fRv1P6j3Q9wU6tP8E4tlP3V9Q49H7wwE49i4yHd0rfy/Dv
lL8/hb9B80W90Qbl+x36G1QP/Yg1TO1n2KD6joK/QfWdCn+DzuNH6H+D5ul8
+h8X3wXGxXH1twQ/4pqPt8xfasy8BXHle8G4LC6+N6jX+L+cLx7XfTCL+uO6
j08z7vf6y9AT17xcazwYV7/WoC/u9z/GI45/FL1x9f/9xmNxPWegv3FqP4sb
dX/PRH+j+kE/S43pV+D1i43LGv3+h3lp1PzVot/74+g3rkF/o/QvRX+jzvcZ
6G+UvmPRb/5i9Hv/mehv1Pxciv7Gqf2MNMn/Dehv8usz+pt0nnrR7/j16G+S
3h70N6nfVehv0nwsQL/Xn47+JtUH7m/SPOPfQJPO9xL0N/n9L/qb1D/qHWnS
fdWK/ibN22fR3yS/70B/s/R/Af3Nyp9Dv+P4U9qsflyJ/mbVN+l/s+qhn7Fm
+dWMfu/PoL9Z/boB/c3y5zb0N6veb6PffD9Gf7P6R3zE/OgZbVb/O9HfrPNG
/8Y/d//7/GxEf4vu2xb0+xz3o79F8/g59LeI/y70G/8E/ca/RH+L6n8S/S1+
f4F+43vQ36L+34z+Ft0/7ehv0fnC7xHX90n0t2gevox+89+N/la/30G/nw+h
v1X9+T36WzX/B9Dv/c+hf9r+WKu/b0N/69T+ha2at0+hv1X67kR/q/yjvkHv
fxj9zv8o+lv9/QD6W9XPN9FvfFib9bf5+0P0t2k+X0B/m9/fob9Nfu5Bf5vq
/Tr62/T+4370t031O94mP+lf6Pxvod91Ffk50Ob723iwTX6fZjzcpvtklvFI
m+7Do41H29S//eh3vY/hf7vm4yn0t+v8vYx+x+lPabv8epfzB17/XuOyduk/
2TjWLr6LjePt0jvfOGz3fWfc3676o+hvlz//wH/j5/HffC/hv/cfwv92+XWM
8421a54/gP8Jfx41Lk7oeYlxNKH+LjIuNV6N/oTuJ+JlxmejP6F5LEa/9zOP
YUL6J/33/nejP+HXB/xPqN/kH07Ij3n4n1A/VuF/wq9n6E/o/DSjv0N4K/o7
1L+F6O+Qfyehv0P9Pxz9HarnHejv8PeR6O/QeTof/d5/Bf47vgL/zbcZ/cbU
O+j1neg3fxv6O3S+l6O/Q/N/Dvo7dP7wI5JUf5nf4qTOG/2OJpV/LvqTmpdl
6Pd65qEsKX216E+qH9QXT6q/WfQ7nkR/0u/v0J9UvczjoNefgv6k/Psg+pO6
b+ag37gM/UnNfyX6O/1+DP2diqfQb3wL+juV7wvo79T83oj+Tn8+R3+nX2/R
73zMa9gpPxegv1P+rUN/p/rdiH7XG6K/0/vQ36l+fAn9ru8H6O/U+bgX/V3C
30N/11R9Ucdb0d/l71PQ3yU/KtDfJX0d6Pf6T6G/S/7eiX6vh7/f/A+hv8t/
D0F/l55Por9L98sI+r3+R+jv0rztQr/jnJ9It84XuLhb/aWf0W7puwv93TpP
30F/t/8egv5uv59Bv9fvR3+37qNX0N8tv36Lfuf7OfqdD/7BbtVfQL/3M38j
Xr8H/d2ax73ot56n0d/j79/R3yM/3kB/j/pxdLv196jfJcZBj+7zdxuX9aie
f6J/Wv54j+6bB9Dv/NTX36P75Fn098i/19HvfIebb7hH8zLTeKTHfy8yHu3x
9+vGYz16PT/XONKrfp9hXNwr/e8zjvZK7xj+92p+H8P/Xvm5D/971Y+/oL9X
/Z/hfHHvP944NP8Jxv29ep5lPNCrfs43HnT8EvT3Ss889LueKPqN4R/rVT/+
G/9D3e/golD9LKIfoc4//SwJpYf6oqHm8WLj2aH0X828hPKv3HiO88eYn1D1
rDZe7HrmMk9ef6JxeejXX+NYKL+OMK5xPSfR71DzdJFxIlT/r6H/ofq3yrjP
9W7DD+drNt7l+nrwx/FO492h5rsCv1x/YDzkes7Gv1D+fth4r/Mvwk/HNxvv
C3WfNuKvcbfxgdDf9+K3+W43PuR67mb+U5q/rxoXpeTfDfifUv5a/E+p//Qr
mtL5WIn/jtfjf0r8afw3/gz+p9TvAfx3vkH8T/l+wH+vfwT/U/LvXvxPaZ5u
w/9p/ImU+luF/9Zbh/8pzXsO/72efLu8fg/+p/x5F/9Tvh/wPyX/9uN/yn//
xH/X+zL+m+9R/De+B/+9H39GU5q/m/Df/dqN/+7nQ/hvfc/gf3oqf1Fa5+lV
/E/785Q/F5Sk9Xp5nHE0rde3txvPdj70laZ1X/8C/9OqD3+DtN9/4L/X/xT/
07q/RvHf8dfwPy3/32b+mrT0Um887fNlnEhr/s8yDs1/mnGf1x9l3G99L+B/
Wv4+gf/mfwr/HT+I/2n5Q3+GzH+i8bDrjRrvdfxU4xHXd6HxPseXGI+6vvnG
B+zfmcZjaZ3fw40PpTWvb+J/Ruf/f/A/o/g7vL44I7+otySj83Qe/mf8/wH4
7/VlxqUZf79oPCfj99/GgfevN16c0XOhcZnz0Y9yrz/WOJbReTgS/zP+PID/
GZ3Xufhvfdfiv3EV/mf8/SH+W+8njHe5XzcZDzh/3nj3tHyDrn8x/mfkXyn+
Z3S+L8J/8y/F/4z83Yz/7k8C/zM6nyH+G1+P/xnN3+fw3/XdZRzJ+u9bxkVZ
/z0I/7OaP/wqyar+lfifVf4V+J9V/6vxP6v5pr45xjfjf1b9GcD/rF4/vob/
WfX3Z/if9f2I/1nfv/jv/Lvx3/k+jv9ZnQf8DbO6X1rw3/3A336vp55d1v9j
/DcewX/X8yz+Z33f47/5Ih3Cw673FfzP+v8r8d/7v4//9ufz+J/VfXs7/mf9
eQr/p9V3yP0exf+c6nkR/3Oq///xP6d6SlxvSc7/z2Iczfn7L+PZzvc6/jv+
a/zPiX8I/833AP7n/P9y+J/T/L2G/853mPliOc17kXFNTuflBON4Tq8XFxon
nP9y4zCnfp5j3Gd9xxv359RP+HflNA+/x3/z7cd/65/h/YM53+/GQzm/HuF/
Ts+Fxnu9vsx4xPV3GO9z/T3Go+ZvMD6Q07xfZTyW0zyfYXzI/McZR/K+342L
8v6+0rg4r/m7Gv/zvr/xP+//78F/50sYlzrfTcZznO924yAvfz9tvNi41bgs
r36vMi43/hj+G8/D/7zfj+J/3k/8z6t/afzPy68+/M+rf7fif179+6rxrry/
TzEeyPv/UY13O/8N+O/+NOF/XvO1Hv+dbyv+O57Bf9d3M/7ndZ4H8d/r78P/
vM7HA/hvP/bhv/17Ff8Lqu+P+F/w/z/gf0H57sD/gu6D6/G/oCd4dkHzRb9K
jck3pyD+Z/C/oH6/hP8F/78D/hfU/3cmhcsL8nemcayg83GEcU1Br59/wv+C
+vUI/hfUzyH8tx5wn/c/jv+Ov4j/3n8I/63/aPPvLmi+3288WND9VGo8VNDr
2XnGwwX5f47x3oL8PNZ4xH7sx3/nexL/7c8f8N/1juG/8x3lfIfM90HjSJ/6
c4FxUZ/6e5ZxcZ/8W2Bc0id/rjOO/gf/CzC3LEw=
        "]]}, {
       RGBColor[0.880722, 0.611041, 0.142051], 
       PointSize[0.006944444444444445], 
       AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxdmnt43HWZxWcLPoaCEAS0ImBUhICo4WItSuHHrRegkKa0Te+Ta5MmaSb3
ZHL7zTXxsrZdFAOyOtpl6YJo8ALxwuO0FbaC7Ja1SldZDLhoBZGgolUQTTjn
M8/D9J95Tt/v9z3vec/7/c5vZvLu2vaqhnmRSOTYYyKRuVf9m7li8NSvLn36
37sC/0ew/+XyjTu+Di4Jduyb/Y97wKXB/Cd2xxYX4qcGr+8v4AXC+8BnBE/H
Z/9jL7hM+e8Hvye4eO7fN8Bna38hfk7w2I9m/02By4M/zW7f9yD4/GB2dfzU
wvoLivJ/MPi32OL5TzwArgjm0sfz4AuL8l0UnDcLXy7ELw6WzQl4FHyJ9DwE
/rDqfQS8MLj9ttl/hfhHgsa5fw+DF4mvEL9U9fwA/FH1o8D3seC3K6fOyvwY
fJnwE+DFwSx6fuVh8OXBnD3zC+uvUL2PgwPhx4zDQP37L+JXyu//Jn6l6mV9
5Ko35guvCubaVX6I+NXq//8Qv1rxJ4lfI76fETd+ivi16v808WvVv0J8STCr
duqsZ4kvkb+/IL406JiFu+ELl6qewv5lwbvmEoDDZZrnXxFfrny/JL5c/j5D
/Dr1/9fEr1O+3xG/XuufI3694r8nfoP8Ley/Qf38DfEVRflXaP3zxG+Uv4X4
jepHYf9NOi8zxG9S//5EvFLrXzYOKovWF+F8pfpTqH+l5o14sFL1vsj+lfKT
9fmV8uMo+6uCqrkEBf4q+UN9YZX0/pn9VUX1r9Lrq+xfpXrAoeORbu9fpfx/
Zf/Nwq+x/2b1/y/sv1n+F/hvLuJfrfks8K8O5uTFCvtX6zwTz69WP//I/jXS
9wr71+h8lLjecI345lH/Guk7wTiyVufxTcbBWvERD9cq/zHsX6v6jmN/tc73
Seyvlv6T2V+t9aexv1r5TmH/Os3PO9i/TvN+OvvXqX5wfp3uQ9ZH1us8vJX9
65X/nexfr/6ewf71mp+z2b9B+s9k/wbdz4X9G7S+jP0bNG/vZv9G+X8W+zdK
L/nCjerPe9m/UfnBkU2a93PZv0l6z2f/Jr1ewP5Nqqec/ZvlNzjYrPkAh5tV
73ns36z+kj+yRef/YvZvUb0fYf8WrV/I/i3y68Psj8pvcFlUr5eQL6r8HzOO
RqX3CvJHNY+XGeei8usa+BwHT0fVv6Xw10j/MvhrNA9V8NeI7yb4a9SP1fDX
6H65Ef4a9fcG+GvkL/HpGp2PSvhr5Tf5ymo1T+vgr9X53wB/rfJRX1irfq+F
v1b1rIff+7fAX6v5r4G/Tv7Uwl+n+Wd94Phm+Ot0/7I+rJOeKPx1yr8J/jrV
swb+OueBv156G+Cv1/xug79e9bfAX6/+sz6s13wQz9XrtRX+es1bG/z18p/1
kQbhdvgbpK8R/gb52Q2/453wN0jfdvgbpKcH/gbNUxz+BtU/DH+j5j8Df6P6
PwZ/o/IRjzZqXsfhb9Q8fBr+Rs3DDvidfxf8jdIzAf9Wzd+/wr9V/f8y/Ful
7274t+p+2AP/VvX3Tvi9nv35rdLzOfi9/rPwNylfDv4m9bfA36Tztxv+JukD
h03Scwf8RfG849Q73aR5uQv+Zt0PxMua9QoOmnWfgKPN6te98Ddr3sG5ZvlL
P/LNOh8F/mbp+Rr82+TnJPzb5Pd98G+Tf9+Cf5v4vg2/14Nz29RfcL5o/fQ2
zeN34G+RX/vgb1G/vgd/i+aLeLRFr8TDFvVnCv4W6dsPf4vq2Qt/EY60av33
4W/15xX4jX8If6v8+hH8rcpHPNeq+f0p/K3Scxj+Vj+fw9/m53P427wO/jY/
78Pfpn4/C7/XH4G/TfP1PPxtmpffwN8mv2fg3/7GeNl2vRIPtkvfS/AX4dD7
/wL/dtX7V/i3ax7/Bv928R+Fv139fwX+dvXn7/C36zy+Br/XH9Nj/nbnMc61
ax5KjPPt6tc/GU87P/sjMc33W4xLY+rf8cZlMT/vGVc4Dg5ifv4zroypH+Co
859pHItp3t9D/THNF/GdMT8PoScmPWcbT8bU33PQ5/0fMD7o9eyfdn0XGs+Y
fyH6O5QPXNrh5yf0d6ieS9DfofPL+qDDz0Po75D+K9Hf4XXo79D7HevDDt2/
xHc6/+Xo79D8LEZ/h+6Dq9DfoflYgv4O+Xs9+jvUnxXod30r0d8p/VXo79Tz
Bris089H6Hd8Pfo7Ve8a9Hf6+Qn9naqP9bFO+VON/k7dJxvR36l5YX+uU/O3
Af2demV9vlN669Bv/k3o79T934r+TvnVjv4uP1+gv0v19aO/S/WPoL9L/RhA
f5f4htHfpX6wPtol/xLo79I8ZtDfpXnMor9L85ZGv+sbR7/5P47+Lun5JPq7
1M+d6Hd9u9Dvz5mfQn+3zvMt6O/WPNyK/m7V9wX0d4v/NvR3ax6Jzz5Xv67v
P9Dfrfn7Evqd78vo7/bzBfq75T/rc0X5Jh0H550ffNDr70V/t/o3if5u+fsV
9Pf4eQD9PeoHuKxH+b6F/h75ez/6e/z+jv4ef1+J/h75OYX+HvnxQ/T3qL48
+nv8/R/6vf4h9Peo34+gv0f3yX7092heH0a/9z+G/h759zj6e8V3CP29qvcw
+ns1Dz9Df6/0/h/6e3Vf/gL9veJ/Bv1FONar8/pr9Bu/iP4inHN9M+jvlV9/
QH+v7s+j6He983qt33oixjO98od4pE/n8zjj0j7xlRiX9ek8gSv6VN9JxkGf
3y+NK/vUH/JF+zQ/JxvHnP8E47BP81hqvLNP5+Ntxrk+1QuedL2nGeed/x3G
B73+dPT3+fsM9Jv/DPT3K9/70N8vvWejv1/9Y31Fv7//QL/Xl6G/X/0hHu33
9xXo71e/3o9+4w+h3+svQr/5L0F/v/z9IPr7Nd8Xor9f5+ky9Pern1ehv1/+
XIn+AcUvR/+Av+9A/4DWX4r+AZ2/j6K/aH3lgN+v0T+g/gToH1B916B/QPO8
FP2uZwn6B/z9CPqdD5wfkP8r0T+g+3E5+gd0X12H/gH161r0x8V/Pfrj/n4G
/XG9wlcR17xWoj8uPcQr4/4+Bv1x3Q/kj8V1H1ShP655WYX+uPq3Av1x9Xct
+uPqRzX6437eQH9c87Ee/XHp34x+66lH/6Dqq0P/oPxtRP+gzk8z+otwMKj+
gyu9fzv6B/18gf5B9Q8cDqpfcfQP6j4bQr/rG0W/84+gf1DnJYn+QfUvg/5B
9etT6B/08wL6h+T3DvQPad53oX9I+T+N/iE9j30e/UOaxwn0D+n1DvQPqf+3
o998X0T/kOq5C/1Dmo+70T+k+WD9pPfvRv+Q3+/R7/jX0D+k/n4d/c4Pjgyr
X/ehf9i/X6J/WPm+gf5h3Z+T6B/WvN2P/mH1g3h0WPU9iH7zgcNhf35H/7D0
fhf95v8++od1vtmfdz0/QP+w5uVR9Dt+CP3D/j0Q/SOaT+KlI+L7OfpH5N8z
6B/x71noH9E8vIh+5/sj+kfE9wr6R/z5F/0j6s/f0O98rM+N6DzMvk9L/4j8
nGecH5HeNxsfHPHnW+PpEb+/G8+MqN/HGkdGlR9cOip9JxqXjYpvvnHFqPrJ
+sD7TzCuHNV99BbjaFG+2KjqO8U4ND7JeGdRPDeq/r0d/aPSQ/78qO6D09Fv
/tPQ7/Vnon9U/ToX/aH8Pce4JJT/xEvDN65fEOp+OI/+hPLrQ8blofpbQb9C
6SG+KPT7Nf0z/0XGy0LNN/HKUOd1oXG1919Kf13PYuMm57ucfof+PG7cb31L
6b/rA487/3L8CP3+Zjzh/Tfhj/uz1niP61+HX+7PBuMp56vHP/cranwg1P3R
hJ+h7scW48Ohv0/HX+dvNz5iPeAZ4y7jo65/EP8Tqj+F/wm/f+B/QvWk8T+h
++4T+F+EyxPi24H/Cb9/4L/5iAcJf/7Ef+e7Ff8TOl934H9C8347/ifUj9vw
3/Xvwn/n+wL+F+ULE/YR/13/XfifUL/AE85/J/4nNH/34X9CfjyA/wnN34P4
7/zE865/L/4ndN88jP8Jf17Ef+ffj/+u/wD+u5+P4r/5H8f/hObzJ/ifFP5f
/E+qHuKlSfE/jf9J/z0G/ifl71P4n1Q/WF+R1Pz8P/47/iz+J+Xnc/jv9Ufw
P6n6X8D/pPrzO/xP+vMg/if99xX4n1S//o7/rv8o/hvPfg56HY8n9Xqs8c6i
/RNeX+J4zvzHG+9Jat5ONJ50P082nkrq/C8wzjv/KcYHivIdTOq8gA8n5e87
jafd/9ONjzh/mfFMUvP7LuOjXn++cSSleTzXuCSlfp9nXJrS/cv6BSnNwweM
y1LqxwXG5SnxLzKuSKkfFxkvMt/FxkHK37caL0v592TjSq+/wrg6pf5cbRxN
+fObcZPru9Y4llK/lhr3p3R+lxuHzrcW/1P+/RT/vb7GeML9Aee8Hrwn5d9r
8d/66vA/pXlowH/zt+C/9bbjf0r3VSv+W08X/ru+Dvx3/7rxP6Xz3Yb/zs/+
SFr+xvE/rdc0/qflZ4j/aen9OP6n9Tw0jv/O9wn8T8uPf8b/tPTvwv+05v8W
/E/7/QP/05qf2/E/rXn+PP6n5T/xprT68SX8N74T/53/Hvx3vXfjv/V/E//T
6id4wvm+jf+uZz/+W99e/Hf/vof/5nsE/73/P/Hf+R/Hf/Mfwn/X/2P8d73E
j9ifn+C//XkS/73/5/ifUf+fwP+M+J/F/4z6+xz+Z3Tej+B/Rnwv4b/xC/if
8e9l+J/RPICDjP/eCv8z/nsr/Dffq/if0f3+Gv5n/Pde+J/x72MDwrGMPx8Y
91vv8cZhRvM133jc9Z1svDMj/0qNJzL+Ps44l5GfZxnvcf3vNZ50Pe83njL/
ucZ58y80PmC+RcYHre8G48MZvV8uMZ7O6D5abnzE/FcbzxStP2p/VhhHspq/
VcYlWf+9i3FpVv6sNl6QVX1R47Ks/NloXJ7VfUW8Iuu/FzFeVISDrPq5zXhZ
Vp8PY8aVzt9tXJ2V/53GUdffZdyU9d9/4H9W/g/if1bzOIz/Xj+A/+YL8T8r
f+L4b75R/M/6PsT/rH+fwX/X+y/47/yfwX/jCfx3/3fjv/EX8T8rP+/G/6x5
8N9678F/9/te/M9qHh/A/zHp+S7+j/n3DPwfU/378H9M+h7Cf6/fi/9j8u8A
/o/5+wj8H/P9hf9jul9+iv/efwj/xzT/T+K/63kK/42fwX/n/yX+e/9v8d/1
voT/xi/g/5j8/j3+uz8v4n9RPDem8/Aq/rueef6ecXJM/X+T8ZTzvYL/1lvi
+AH39zjjg+7fm40Pu18nGk+P6X4/1fiI6yk1nhnzfWV8dMx/T2kcGdd5eJ9x
ybjO+2nGpeNav8B4wbj/ftO4zPHyePAPPntD8Q==
        "]]}}, {{}, {}}}, 
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
    Axes -> {True, True}, AxesLabel -> {
      FormBox["\"Year\"", TraditionalForm], 
      FormBox[
      "\"CO\\!\\(\\*StyleBox[\\\"2\\\",FontSize->7]\\) (ppm)\"", 
       TraditionalForm]}, AxesOrigin -> {0., 306.39888888888885`}, 
    DisplayFunction -> Identity, Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {{205, 385, 565, 745}, Automatic}, GridLinesStyle -> 
    Directive[
      GrayLevel[0.5, 0.4]], ImageSize -> {554.3734436035156, Automatic}, 
    Method -> {
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}}, PlotLabel -> 
    FormBox["\"Average and Deseasonalised Effects \
\\!\\(\\*StyleBox[\\(CO\\*StyleBox[\\\"2\\\",FontSize->7]\\)]\\)\\!\\(\\*\
StyleBox[\\\" \\\",FontSize->7]\\)(ppm)\"", TraditionalForm], 
    PlotRange -> {{0., 772.}, {306.39888888888885`, 420.99}}, 
    PlotRangeClipping -> True, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}}, Ticks -> {{{205, 
        FormBox["\"1975\"", TraditionalForm]}, {385, 
        FormBox["\"1990\"", TraditionalForm]}, {565, 
        FormBox["\"2005\"", TraditionalForm]}, {745, 
        FormBox["\"2020\"", TraditionalForm]}}, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Average Effects\"", "\"Deseasonalised\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.867839622403686*^9, 3.86783966578767*^9}, {
   3.8678433166995373`*^9, 3.867843341568842*^9}, 3.867843375357113*^9, 
   3.8679099327878733`*^9, 3.867909994443022*^9, 3.8679115201830387`*^9, {
   3.867912214805825*^9, 3.867912258391802*^9}, 3.867992860708713*^9, {
   3.868012173925563*^9, 3.868012187618424*^9}},
 CellLabel->
  "Out[825]=",ExpressionUUID->"55148a0e-f313-4bb5-9895-4df910e8f834"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot seasonality across the year", "Subsubsection",
 CellChangeTimes->{{3.867861817361495*^9, 
  3.867861825877852*^9}},ExpressionUUID->"bfaccae5-a160-4688-a29a-\
f452c6375f74"],

Cell["1959, 1960, 1961.", "Text",
 CellChangeTimes->{{3.8675792674036427`*^9, 
  3.8675792728464537`*^9}},ExpressionUUID->"c465636e-8ec6-4b14-9bb8-\
dda03b6bbb75"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"monthlyCO2", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"12", ";;", "23"}], ",", " ", ";;"}], "]"}], "]"}], "//", 
    "Dataset"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"1959", " ", "only"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"monthlyCO2", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"24", ";;", "35"}], ",", " ", ";;"}], "]"}], "]"}], "//", 
   "Dataset"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"monthlyCO2", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"36", ";;", "47"}], ",", " ", ";;"}], "]"}], "]"}], "//", 
   "Dataset"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"average", "[", 
    RowBox[{"[", 
     RowBox[{"12", ";;", "23"}], "]"}], "]"}], ";"}], " ", 
  RowBox[{"(*", "1959", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"average", "[", 
    RowBox[{"[", 
     RowBox[{"24", ";;", "35"}], "]"}], "]"}], ";"}], 
  RowBox[{"(*", "1960", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"average", "[", 
    RowBox[{"[", 
     RowBox[{"36", ";;", "47"}], "]"}], "]"}], ";"}], " ", 
  RowBox[{"(*", "1961", " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.867581876966434*^9, 3.8675818867898607`*^9}, {
  3.867839737283496*^9, 3.867839740347086*^9}, {3.867839911962051*^9, 
  3.867839925999302*^9}, {3.867840162809471*^9, 3.867840164628131*^9}},
 CellLabel->
  "In[763]:=",ExpressionUUID->"162a6051-9222-443e-86c2-cd0ec36ed3b0"],

Cell["1979, 1980, 1981.", "Text",
 CellChangeTimes->{{3.867580700783372*^9, 3.8675807166049967`*^9}, {
  3.8678399869663277`*^9, 
  3.867839997093836*^9}},ExpressionUUID->"beaaa07b-a4fd-42b1-9abc-\
051a39e1a2b3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"monthlyCO2", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"252", ";;", "263"}], ",", ";;"}], "]"}], "]"}], "//", 
   "Dataset"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"monthlyCO2", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"264", ";;", "275"}], ",", ";;"}], "]"}], "]"}], "//", 
   "Dataset"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"monthlyCO2", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"276", ";;", "287"}], ",", ";;"}], "]"}], "]"}], "//", 
   "Dataset"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"average", "[", 
    RowBox[{"[", 
     RowBox[{"252", ";;", "263"}], "]"}], "]"}], " ", ";"}], 
  RowBox[{"(*", "1979", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"average", "[", 
    RowBox[{"[", 
     RowBox[{"264", ";;", "275"}], "]"}], "]"}], " ", ";"}], 
  RowBox[{"(*", "1980", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"average", "[", 
    RowBox[{"[", 
     RowBox[{"276", ";;", "287"}], "]"}], "]"}], ";"}], " ", 
  RowBox[{"(*", "1981", " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.867580720963546*^9, 3.867580771281129*^9}, {
  3.867580834815377*^9, 3.867580853404483*^9}, {3.867581860666996*^9, 
  3.867581869013465*^9}, {3.8678397456840878`*^9, 3.867839747993816*^9}, {
  3.8678399453038187`*^9, 3.867839949527837*^9}, {3.867840002742244*^9, 
  3.8678401250495777`*^9}},
 CellLabel->
  "In[769]:=",ExpressionUUID->"72318d5a-cf44-4bd3-b8a2-6fc4474afc15"],

Cell["1999, 2000, 2001.", "Text",
 CellChangeTimes->{{3.867580969555896*^9, 3.867580974423346*^9}, {
  3.867840192171899*^9, 
  3.867840199510435*^9}},ExpressionUUID->"662670e0-44ef-4107-bb01-\
fe1388021f9a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"monthlyCO2", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"492", ";;", "503"}], ",", ";;"}], "]"}], "]"}], "//", 
   "Dataset"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"monthlyCO2", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"504", ";;", "515"}], ",", ";;"}], "]"}], "]"}], "//", 
   "Dataset"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"monthlyCO2", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"516", ";;", "527"}], ",", ";;"}], "]"}], "]"}], "//", 
   "Dataset"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"average", "[", 
    RowBox[{"[", 
     RowBox[{"492", ";;", "503"}], "]"}], "]"}], " ", ";"}], 
  RowBox[{"(*", "1999", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"average", "[", 
    RowBox[{"[", 
     RowBox[{"504", ";;", "515"}], "]"}], "]"}], " ", ";"}], 
  RowBox[{"(*", "2000", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"average", "[", 
    RowBox[{"[", 
     RowBox[{"516", ";;", "527"}], "]"}], "]"}], ";"}], " ", 
  RowBox[{"(*", "2001", " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.867579341888825*^9, 3.867579491134387*^9}, {
  3.8675808727760067`*^9, 3.867580956074601*^9}, {3.867581836657982*^9, 
  3.867581854741975*^9}, {3.867839754107526*^9, 3.8678397561240377`*^9}, {
  3.867840207697682*^9, 3.867840316810369*^9}, {3.867840493013259*^9, 
  3.867840498954988*^9}},
 CellLabel->
  "In[775]:=",ExpressionUUID->"cbce004b-9667-4958-b07b-1e4243566b45"],

Cell["2019, 2020, 2021.", "Text",
 CellChangeTimes->{{3.8675792787739277`*^9, 
  3.867579282841261*^9}},ExpressionUUID->"825d09ab-ecc4-4d26-a761-\
3debbd8b8884"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"monthlyCO2", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"732", ";;", "743"}], ",", ";;"}], "]"}], "]"}], "//", 
   "Dataset"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"monthlyCO2", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"744", ";;", "755"}], ",", ";;"}], "]"}], "]"}], "//", 
   "Dataset"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"monthlyCO2", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"756", ";;", "767"}], ",", ";;"}], "]"}], "]"}], "//", 
   "Dataset"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"average", "[", 
    RowBox[{"[", 
     RowBox[{"732", ";;", "743"}], "]"}], "]"}], " ", ";"}], 
  RowBox[{"(*", "2019", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"average", "[", 
    RowBox[{"[", 
     RowBox[{"744", ";;", "755"}], "]"}], "]"}], " ", ";"}], 
  RowBox[{"(*", "2020", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"average", "[", 
    RowBox[{"[", 
     RowBox[{"756", ";;", "767"}], "]"}], "]"}], " ", ";"}], 
  RowBox[{"(*", "2021", " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.867581823071362*^9, 3.867581831263548*^9}, {
  3.867839759353897*^9, 3.867839762008762*^9}, {3.867840334212932*^9, 
  3.86784036265576*^9}, {3.8678406948991623`*^9, 3.8678407051195717`*^9}, {
  3.867861245698254*^9, 3.867861247353765*^9}},
 CellLabel->
  "In[781]:=",ExpressionUUID->"9349004b-d259-46c1-b55d-2f3b04732a97"],

Cell["Look at the five year intervals, rather than 1. ", "Text",
 CellChangeTimes->{{3.867861049433263*^9, 
  3.8678610626742477`*^9}},ExpressionUUID->"dbfbb628-fa40-4b64-824e-\
f05e7a3e3468"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"monthlyCO2", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"24", ";;", "35"}], ",", " ", ";;"}], "]"}], "]"}], "//", 
   "Dataset"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"monthlyCO2", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"84", ";;", "95"}], ",", " ", ";;"}], "]"}], "]"}], "//", 
    "Dataset"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"1959", " ", "only"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"monthlyCO2", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"144", ";;", "155"}], ",", " ", ";;"}], "]"}], "]"}], "//", 
   "Dataset"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"average", "[", 
    RowBox[{"[", 
     RowBox[{"24", ";;", "35"}], "]"}], "]"}], ";"}], " ", 
  RowBox[{"(*", "1960", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"average", "[", 
    RowBox[{"[", 
     RowBox[{"84", ";;", "95"}], "]"}], "]"}], ";"}], 
  RowBox[{"(*", "1965", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"average", "[", 
    RowBox[{"[", 
     RowBox[{"144", ";;", "155"}], "]"}], "]"}], ";"}], " ", 
  RowBox[{"(*", "1970", " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.867861067995323*^9, 3.8678612194293013`*^9}},
 CellLabel->
  "In[787]:=",ExpressionUUID->"1068cfa2-a5da-40c4-aeff-eeebeccbba73"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"monthlyCO2", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"624", ";;", "635"}], ",", " ", ";;"}], "]"}], "]"}], "//", 
   "Dataset"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"monthlyCO2", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"684", ";;", "695"}], ",", " ", ";;"}], "]"}], "]"}], "//", 
   "Dataset"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"monthlyCO2", "[", 
    RowBox[{"[", 
     RowBox[{"744", ";;", "755"}], "]"}], "]"}], "//", "Dataset"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"average", "[", 
    RowBox[{"[", 
     RowBox[{"624", ";;", "635"}], "]"}], "]"}], ";"}], " ", 
  RowBox[{"(*", "2010", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"average", "[", 
    RowBox[{"[", 
     RowBox[{"684", ";;", "695"}], "]"}], "]"}], " ", ";"}], 
  RowBox[{"(*", "2015", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"average", "[", 
    RowBox[{"[", 
     RowBox[{"744", ";;", "755"}], "]"}], "]"}], " ", ";"}], 
  RowBox[{"(*", "2020", " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.867861251932404*^9, 3.8678613207805653`*^9}, {
  3.867861544224828*^9, 3.867861548971087*^9}},
 CellLabel->
  "In[793]:=",ExpressionUUID->"1986ecbb-d5a5-4c6b-8272-439fa3686796"],

Cell["Now let\[CloseCurlyQuote]s take a look at plotting these four sets of \
years.", "Text",
 CellChangeTimes->{{3.867579530107872*^9, 3.8675795400887947`*^9}, {
  3.867581813085349*^9, 
  3.867581813685484*^9}},ExpressionUUID->"3df12fb3-d7cb-4144-b0a1-\
8b5479e936cb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{"1959", ",", " ", "2019", ",", " ", "20"}], "]"}]], "Input",
 CellChangeTimes->{{3.8678398163890753`*^9, 3.867839826444055*^9}, {
  3.8678398849940357`*^9, 3.867839885229735*^9}},
 CellLabel->
  "In[799]:=",ExpressionUUID->"b9b96008-e8d4-4b5d-a377-221a67a1d485"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1959", ",", "1979", ",", "1999", ",", "2019"}], "}"}]], "Output",
 CellChangeTimes->{3.867839826768138*^9, 3.86783988560921*^9, 
  3.8679099328551702`*^9, 3.8679099945281477`*^9, 3.867911520273582*^9, 
  3.867992860798829*^9, 3.868012173998111*^9},
 CellLabel->
  "Out[799]=",ExpressionUUID->"c4b35a73-35dd-449e-8782-94dd0e862a99"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"average", "[", 
      RowBox[{"[", 
       RowBox[{"36", ";;", "47"}], "]"}], "]"}], " ", ",", " ", 
     RowBox[{"average", "[", 
      RowBox[{"[", 
       RowBox[{"24", ";;", "35"}], "]"}], "]"}], " ", ",", 
     RowBox[{"average", "[", 
      RowBox[{"[", 
       RowBox[{"12", ";;", "23"}], "]"}], "]"}]}], "}"}], ",", "  ", 
   RowBox[{"PlotLabels", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<1961\>\"", ",", " ", "\"\<1960\>\"", " ", ",", " ", 
      "\"\<1959\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Annual Average Effects CO\!\(\*StyleBox[\"2\",FontSize->7]\) \
(ppm)\>\"", ",", " ", "16"}], "]"}]}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Month\>\"", ",", 
      "\"\<CO\!\(\*StyleBox[\"2\",FontSize->7]\) (ppm)\>\""}], "}"}]}], ",", 
   " ", 
   RowBox[{"Ticks", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", "12", ",", "1"}], "]"}], ",", " ", "Automatic"}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"average", "[", 
      RowBox[{"[", 
       RowBox[{"276", ";;", "287"}], "]"}], "]"}], ",", " ", 
     RowBox[{"average", "[", 
      RowBox[{"[", 
       RowBox[{"264", ";;", "275"}], "]"}], "]"}], " ", ",", 
     RowBox[{"average", "[", 
      RowBox[{"[", 
       RowBox[{"252", ";;", "263"}], "]"}], "]"}]}], " ", "}"}], ",", "  ", 
   RowBox[{"PlotLabels", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<1981\>\"", ",", " ", "\"\<1980\>\"", " ", ",", " ", 
      "\"\<1979\>\""}], "}"}]}], ",", " ", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Annual Average Effects CO\!\(\*StyleBox[\"2\",FontSize->7]\) \
(ppm)\>\"", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Month\>\"", ",", 
      "\"\<CO\!\(\*StyleBox[\"2\",FontSize->7]\) (ppm)\>\""}], "}"}]}], ",", 
   " ", 
   RowBox[{"Ticks", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", "12", ",", "1"}], "]"}], ",", " ", "Automatic"}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"average", "[", 
      RowBox[{"[", 
       RowBox[{"516", ";;", "527"}], "]"}], "]"}], " ", ",", " ", 
     RowBox[{"average", "[", 
      RowBox[{"[", 
       RowBox[{"504", ";;", "515"}], "]"}], "]"}], " ", ",", 
     RowBox[{"average", "[", 
      RowBox[{"[", 
       RowBox[{"492", ";;", "503"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotLabels", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<2001\>\"", ",", " ", "\"\<2000\>\"", " ", ",", " ", 
      "\"\<1999\>\""}], "}"}]}], ",", "   ", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Annual Average Effects CO\!\(\*StyleBox[\"2\",FontSize->7]\) \
(ppm)\>\"", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Month\>\"", ",", 
      "\"\<CO\!\(\*StyleBox[\"2\",FontSize->7]\) (ppm)\>\""}], "}"}]}], ",", 
   " ", 
   RowBox[{"Ticks", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", "12", ",", "1"}], "]"}], ",", " ", "Automatic"}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"average", "[", 
      RowBox[{"[", 
       RowBox[{"756", ";;", "767"}], "]"}], "]"}], ",", " ", 
     RowBox[{"average", "[", 
      RowBox[{"[", 
       RowBox[{"744", ";;", "755"}], "]"}], "]"}], " ", ",", 
     RowBox[{"average", "[", 
      RowBox[{"[", 
       RowBox[{"732", ";;", "743"}], "]"}], "]"}]}], " ", "}"}], ",", 
   RowBox[{"PlotLabels", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<2021\>\"", ",", " ", "\"\<2020\>\"", " ", ",", " ", 
      "\"\<2019\>\""}], "}"}]}], ",", "  ", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Annual Average Effects CO\!\(\*StyleBox[\"2\",FontSize->7]\) \
(ppm)\>\"", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Month\>\"", ",", 
      "\"\<CO\!\(\*StyleBox[\"2\",FontSize->7]\) (ppm)\>\""}], "}"}]}], ",", 
   " ", 
   RowBox[{"Ticks", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", "12", ",", "1"}], "]"}], ",", " ", "Automatic"}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.8678598291409683`*^9, {3.867860003994706*^9, 3.867860047241172*^9}, {
   3.868012209260292*^9, 3.868012234657514*^9}},
 CellLabel->
  "In[834]:=",ExpressionUUID->"3d93e77a-ab1a-4d4d-a2c5-21178bc33d03"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 317.7}, {2., 318.54}, {3., 319.48}, {4., 320.58}, {5., 
      319.77}, {6., 318.57}, {7., 316.79}, {8., 314.99}, {9., 315.31}, {10., 
      316.1}, {11., 317.01}, {12., 317.94}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 316.98}, {2., 317.58}, {3., 319.03}, {4., 320.04}, {5., 
      319.59}, {6., 318.18}, {7., 315.9}, {8., 314.17}, {9., 313.83}, {10., 
      315.}, {11., 316.19}, {12., 316.89}}]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 316.48}, {2., 316.65}, {3., 317.72}, {4., 318.29}, {5., 
      318.15}, {6., 316.54}, {7., 314.8}, {8., 313.84}, {9., 313.33}, {10., 
      314.81}, {11., 315.58}, {12., 316.43}}]}}, {{{{}, {GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {12.24, 317.94}], Offset[{0, 0}, {12.24, 317.94}], 
            Offset[{0., 0.}, {12.365, 317.94}], 
            Offset[{0., 0.}, {12.365, 317.94}], 
            Offset[{0., 0.}, {12.49, 317.94}], 
            Offset[{0, 0}, {12.73, 317.94004199240163`}], 
            Offset[{5., 1.1102230246251565`*^-15}, {12.73, 
             317.94004199240163`}], 
            Offset[{10., 2.220446049250313*^-15}, {12.73, 
             317.94004199240163`}], 
            Offset[{10., 2.220446049250313*^-15}, {12.73, 
             317.94004199240163`}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {12.24, 317.94}], Offset[{0, 0}, {12.24, 317.94}], 
            Offset[{0., 0.}, {12.365, 317.94}], 
            Offset[{0., 0.}, {12.365, 317.94}], 
            Offset[{0., 0.}, {12.49, 317.94}], 
            Offset[{0, 0}, {12.73, 317.94004199240163`}], 
            Offset[{5., 1.1102230246251565`*^-15}, {12.73, 
             317.94004199240163`}], 
            Offset[{10., 2.220446049250313*^-15}, {12.73, 
             317.94004199240163`}], 
            Offset[{10., 2.220446049250313*^-15}, {12.73, 
             317.94004199240163`}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{38., 6.500000000000009}, {12.73, 317.94004199240163`}], 
            Offset[{38., -6.499999999999991}, {12.73, 317.94004199240163`}], 
            Offset[{10.000000000000002`, -6.499999999999998}, {12.73, 
             317.94004199240163`}], 
            Offset[{9.999999999999998, 6.500000000000002}, {12.73, 
             317.94004199240163`}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"1961\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{24., 5.329070518200751*^-15}, {12.73, 317.94004199240163}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {12.24, 316.89}], Offset[{0, 0}, {12.24, 316.89}], 
            Offset[{0., 0.}, {12.365, 316.89}], 
            Offset[{0., 0.}, {12.365, 316.89}], 
            Offset[{0., 0.}, {12.49, 316.89}], 
            Offset[{0, 0}, {12.73, 317.0379501941525}], 
            Offset[{5., 1.1102230246251565`*^-15}, {12.73, 
             317.0379501941525}], 
            Offset[{10., 2.220446049250313*^-15}, {12.73, 317.0379501941525}],
             Offset[{10., 2.220446049250313*^-15}, {12.73, 
             317.0379501941525}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {12.24, 316.89}], Offset[{0, 0}, {12.24, 316.89}], 
            Offset[{0., 0.}, {12.365, 316.89}], 
            Offset[{0., 0.}, {12.365, 316.89}], 
            Offset[{0., 0.}, {12.49, 316.89}], 
            Offset[{0, 0}, {12.73, 317.0379501941525}], 
            Offset[{5., 1.1102230246251565`*^-15}, {12.73, 
             317.0379501941525}], 
            Offset[{10., 2.220446049250313*^-15}, {12.73, 317.0379501941525}],
             Offset[{10., 2.220446049250313*^-15}, {12.73, 
             317.0379501941525}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{38., 6.500000000000009}, {12.73, 317.0379501941525}], 
            Offset[{38., -6.499999999999991}, {12.73, 317.0379501941525}], 
            Offset[{10.000000000000002`, -6.499999999999998}, {12.73, 
             317.0379501941525}], 
            Offset[{9.999999999999998, 6.500000000000002}, {12.73, 
             317.0379501941525}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"1960\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{24., 5.329070518200751*^-15}, {12.73, 317.0379501941525}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {12.24, 316.43}], Offset[{0, 0}, {12.24, 316.43}], 
            Offset[{0., 0.}, {12.365, 316.43}], 
            Offset[{0., 0.}, {12.365, 316.43}], 
            Offset[{0., 0.}, {12.49, 316.43}], 
            Offset[{0, 0}, {12.73, 316.28200761808284`}], 
            Offset[{5., 1.1102230246251565`*^-15}, {12.73, 
             316.28200761808284`}], 
            Offset[{10., 2.220446049250313*^-15}, {12.73, 
             316.28200761808284`}], 
            Offset[{10., 2.220446049250313*^-15}, {12.73, 
             316.28200761808284`}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {12.24, 316.43}], Offset[{0, 0}, {12.24, 316.43}], 
            Offset[{0., 0.}, {12.365, 316.43}], 
            Offset[{0., 0.}, {12.365, 316.43}], 
            Offset[{0., 0.}, {12.49, 316.43}], 
            Offset[{0, 0}, {12.73, 316.28200761808284`}], 
            Offset[{5., 1.1102230246251565`*^-15}, {12.73, 
             316.28200761808284`}], 
            Offset[{10., 2.220446049250313*^-15}, {12.73, 
             316.28200761808284`}], 
            Offset[{10., 2.220446049250313*^-15}, {12.73, 
             316.28200761808284`}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{38., 6.500000000000009}, {12.73, 316.28200761808284`}], 
            Offset[{38., -6.499999999999991}, {12.73, 316.28200761808284`}], 
            Offset[{10.000000000000002`, -6.499999999999998}, {12.73, 
             316.28200761808284`}], 
            Offset[{9.999999999999998, 6.500000000000002}, {12.73, 
             316.28200761808284`}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"1959\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{24., 5.329070518200751*^-15}, {12.73, 316.28200761808284}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}]}}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Month\"", TraditionalForm], 
    FormBox[
    "\"CO\\!\\(\\*StyleBox[\\\"2\\\",FontSize->7]\\) (ppm)\"", 
     TraditionalForm]},
  AxesOrigin->{0., 312.9272222222222},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 56.4}, {All, All}},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox[
    "\"Annual Average Effects CO\\!\\(\\*StyleBox[\\\"2\\\",FontSize->7]\\) \
(ppm)\"", 16, StripOnInput -> False], TraditionalForm],
  PlotRange->{{0., 12.}, {312.9272222222222, 320.58}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.08090169943749476]}},
  Ticks->{{{1, 
      FormBox["1", TraditionalForm]}, {2, 
      FormBox["2", TraditionalForm]}, {3, 
      FormBox["3", TraditionalForm]}, {4, 
      FormBox["4", TraditionalForm]}, {5, 
      FormBox["5", TraditionalForm]}, {6, 
      FormBox["6", TraditionalForm]}, {7, 
      FormBox["7", TraditionalForm]}, {8, 
      FormBox["8", TraditionalForm]}, {9, 
      FormBox["9", TraditionalForm]}, {10, 
      FormBox["10", TraditionalForm]}, {11, 
      FormBox["11", TraditionalForm]}, {12, 
      FormBox["12", TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{{3.867860031852188*^9, 3.8678600482221518`*^9}, 
   3.867909933199332*^9, 3.867909994620944*^9, 3.8679115203793488`*^9, 
   3.8679928608909693`*^9, 3.868012174192408*^9, {3.8680122103993797`*^9, 
   3.868012235117364*^9}},
 CellLabel->
  "Out[834]=",ExpressionUUID->"4bebbe5e-4bd0-45d8-9da8-a6a01f4d8dc6"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 340.55}, {2., 341.63}, {3., 342.6}, {4., 343.04}, {5., 
      342.54}, {6., 340.82}, {7., 338.48}, {8., 336.95}, {9., 337.05}, {10., 
      338.57}, {11., 339.91}, {12., 340.93}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 338.34}, {2., 340.07}, {3., 340.93}, {4., 341.45}, {5., 
      341.36}, {6., 339.45}, {7., 337.67}, {8., 336.25}, {9., 336.14}, {10., 
      337.3}, {11., 338.29}, {12., 339.29}}]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 336.69}, {2., 338.27}, {3., 338.82}, {4., 339.24}, {5., 
      339.26}, {6., 337.54}, {7., 335.72}, {8., 333.97}, {9., 334.24}, {10., 
      335.32}, {11., 336.82}, {12., 337.9}}]}}, {{{{}, {GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {12.24, 340.93}], Offset[{0, 0}, {12.24, 340.93}], 
            Offset[{0., 0.}, {12.365, 340.93}], 
            Offset[{0., 0.}, {12.365, 340.93}], 
            Offset[{0., 0.}, {12.49, 340.93}], 
            Offset[{0, 0}, {12.73, 340.93000771895305`}], 
            Offset[{5., 1.1102230246251565`*^-15}, {12.73, 
             340.93000771895305`}], 
            Offset[{10., 2.220446049250313*^-15}, {12.73, 
             340.93000771895305`}], 
            Offset[{10., 2.220446049250313*^-15}, {12.73, 
             340.93000771895305`}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {12.24, 340.93}], Offset[{0, 0}, {12.24, 340.93}], 
            Offset[{0., 0.}, {12.365, 340.93}], 
            Offset[{0., 0.}, {12.365, 340.93}], 
            Offset[{0., 0.}, {12.49, 340.93}], 
            Offset[{0, 0}, {12.73, 340.93000771895305`}], 
            Offset[{5., 1.1102230246251565`*^-15}, {12.73, 
             340.93000771895305`}], 
            Offset[{10., 2.220446049250313*^-15}, {12.73, 
             340.93000771895305`}], 
            Offset[{10., 2.220446049250313*^-15}, {12.73, 
             340.93000771895305`}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{38., 6.500000000000009}, {12.73, 340.93000771895305`}], 
            Offset[{38., -6.499999999999991}, {12.73, 340.93000771895305`}], 
            Offset[{10.000000000000002`, -6.499999999999998}, {12.73, 
             340.93000771895305`}], 
            Offset[{9.999999999999998, 6.500000000000002}, {12.73, 
             340.93000771895305`}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"1981\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{24., 5.329070518200751*^-15}, {12.73, 340.93000771895305}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {12.24, 339.29}], Offset[{0, 0}, {12.24, 339.29}], 
            Offset[{0., 0.}, {12.365, 339.29}], 
            Offset[{0., 0.}, {12.365, 339.29}], 
            Offset[{0., 0.}, {12.49, 339.29}], 
            Offset[{0, 0}, {12.73, 339.29000399945556`}], 
            Offset[{5., 1.1102230246251565`*^-15}, {12.73, 
             339.29000399945556`}], 
            Offset[{10., 2.220446049250313*^-15}, {12.73, 
             339.29000399945556`}], 
            Offset[{10., 2.220446049250313*^-15}, {12.73, 
             339.29000399945556`}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {12.24, 339.29}], Offset[{0, 0}, {12.24, 339.29}], 
            Offset[{0., 0.}, {12.365, 339.29}], 
            Offset[{0., 0.}, {12.365, 339.29}], 
            Offset[{0., 0.}, {12.49, 339.29}], 
            Offset[{0, 0}, {12.73, 339.29000399945556`}], 
            Offset[{5., 1.1102230246251565`*^-15}, {12.73, 
             339.29000399945556`}], 
            Offset[{10., 2.220446049250313*^-15}, {12.73, 
             339.29000399945556`}], 
            Offset[{10., 2.220446049250313*^-15}, {12.73, 
             339.29000399945556`}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{38., 6.500000000000009}, {12.73, 339.29000399945556`}], 
            Offset[{38., -6.499999999999991}, {12.73, 339.29000399945556`}], 
            Offset[{10.000000000000002`, -6.499999999999998}, {12.73, 
             339.29000399945556`}], 
            Offset[{9.999999999999998, 6.500000000000002}, {12.73, 
             339.29000399945556`}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"1980\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{24., 5.329070518200751*^-15}, {12.73, 339.29000399945556}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {12.24, 337.9}], Offset[{0, 0}, {12.24, 337.9}], 
            Offset[{0., 0.}, {12.365, 337.9}], 
            Offset[{0., 0.}, {12.365, 337.9}], 
            Offset[{0., 0.}, {12.49, 337.9}], 
            Offset[{0, 0}, {12.73, 337.89998749382494`}], 
            Offset[{5., 1.1102230246251565`*^-15}, {12.73, 
             337.89998749382494`}], 
            Offset[{10., 2.220446049250313*^-15}, {12.73, 
             337.89998749382494`}], 
            Offset[{10., 2.220446049250313*^-15}, {12.73, 
             337.89998749382494`}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {12.24, 337.9}], Offset[{0, 0}, {12.24, 337.9}], 
            Offset[{0., 0.}, {12.365, 337.9}], 
            Offset[{0., 0.}, {12.365, 337.9}], 
            Offset[{0., 0.}, {12.49, 337.9}], 
            Offset[{0, 0}, {12.73, 337.89998749382494`}], 
            Offset[{5., 1.1102230246251565`*^-15}, {12.73, 
             337.89998749382494`}], 
            Offset[{10., 2.220446049250313*^-15}, {12.73, 
             337.89998749382494`}], 
            Offset[{10., 2.220446049250313*^-15}, {12.73, 
             337.89998749382494`}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{38., 6.500000000000009}, {12.73, 337.89998749382494`}], 
            Offset[{38., -6.499999999999991}, {12.73, 337.89998749382494`}], 
            Offset[{10.000000000000002`, -6.499999999999998}, {12.73, 
             337.89998749382494`}], 
            Offset[{9.999999999999998, 6.500000000000002}, {12.73, 
             337.89998749382494`}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"1979\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{24., 5.329070518200751*^-15}, {12.73, 337.89998749382494}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}]}}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Month\"", TraditionalForm], 
    FormBox[
    "\"CO\\!\\(\\*StyleBox[\\\"2\\\",FontSize->7]\\) (ppm)\"", 
     TraditionalForm]},
  AxesOrigin->{0., 333.46611111111116`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 56.4}, {All, All}},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox[
    "\"Annual Average Effects CO\\!\\(\\*StyleBox[\\\"2\\\",FontSize->7]\\) \
(ppm)\"", 16, StripOnInput -> False], TraditionalForm],
  PlotRange->{{0., 12.}, {333.46611111111116`, 343.04}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.08090169943749476]}},
  Ticks->{{{1, 
      FormBox["1", TraditionalForm]}, {2, 
      FormBox["2", TraditionalForm]}, {3, 
      FormBox["3", TraditionalForm]}, {4, 
      FormBox["4", TraditionalForm]}, {5, 
      FormBox["5", TraditionalForm]}, {6, 
      FormBox["6", TraditionalForm]}, {7, 
      FormBox["7", TraditionalForm]}, {8, 
      FormBox["8", TraditionalForm]}, {9, 
      FormBox["9", TraditionalForm]}, {10, 
      FormBox["10", TraditionalForm]}, {11, 
      FormBox["11", TraditionalForm]}, {12, 
      FormBox["12", TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{{3.867860031852188*^9, 3.8678600482221518`*^9}, 
   3.867909933199332*^9, 3.867909994620944*^9, 3.8679115203793488`*^9, 
   3.8679928608909693`*^9, 3.868012174192408*^9, {3.8680122103993797`*^9, 
   3.868012235221855*^9}},
 CellLabel->
  "Out[835]=",ExpressionUUID->"d958495a-e2bd-49ba-aa3d-559505d4b5b6"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 371.69}, {2., 372.63}, {3., 373.55}, {4., 374.03}, {5., 
      373.4}, {6., 371.68}, {7., 369.78}, {8., 368.34}, {9., 368.61}, {10., 
      369.94}, {11., 371.42}, {12., 372.7}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 369.71}, {2., 370.75}, {3., 371.98}, {4., 371.75}, {5., 
      371.87}, {6., 370.02}, {7., 368.27}, {8., 367.15}, {9., 367.18}, {10., 
      368.53}, {11., 369.83}, {12., 370.76}}]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 369.28}, {2., 369.84}, {3., 371.15}, {4., 371.12}, {5., 
      370.46}, {6., 369.61}, {7., 367.06}, {8., 364.95}, {9., 365.52}, {10., 
      366.88}, {11., 368.26}, {12., 369.45}}]}}, {{{{}, {GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {12.24, 372.7}], Offset[{0, 0}, {12.24, 372.7}], 
            Offset[{0., 0.}, {12.365, 372.7}], 
            Offset[{0., 0.}, {12.365, 372.7}], 
            Offset[{0., 0.}, {12.49, 372.7}], 
            Offset[{0, 0}, {12.73, 372.7000042360259}], 
            Offset[{5., 1.1102230246251565`*^-15}, {12.73, 
             372.7000042360259}], 
            Offset[{10., 2.220446049250313*^-15}, {12.73, 372.7000042360259}],
             Offset[{10., 2.220446049250313*^-15}, {12.73, 
             372.7000042360259}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {12.24, 372.7}], Offset[{0, 0}, {12.24, 372.7}], 
            Offset[{0., 0.}, {12.365, 372.7}], 
            Offset[{0., 0.}, {12.365, 372.7}], 
            Offset[{0., 0.}, {12.49, 372.7}], 
            Offset[{0, 0}, {12.73, 372.7000042360259}], 
            Offset[{5., 1.1102230246251565`*^-15}, {12.73, 
             372.7000042360259}], 
            Offset[{10., 2.220446049250313*^-15}, {12.73, 372.7000042360259}],
             Offset[{10., 2.220446049250313*^-15}, {12.73, 
             372.7000042360259}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{38., 6.500000000000009}, {12.73, 372.7000042360259}], 
            Offset[{38., -6.499999999999991}, {12.73, 372.7000042360259}], 
            Offset[{10.000000000000002`, -6.499999999999998}, {12.73, 
             372.7000042360259}], 
            Offset[{9.999999999999998, 6.500000000000002}, {12.73, 
             372.7000042360259}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"2001\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{24., 5.329070518200751*^-15}, {12.73, 372.7000042360259}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {12.24, 370.76}], Offset[{0, 0}, {12.24, 370.76}], 
            Offset[{0., 0.}, {12.365, 370.76}], 
            Offset[{0., 0.}, {12.365, 370.76}], 
            Offset[{0., 0.}, {12.49, 370.76}], 
            Offset[{0, 0}, {12.73, 370.76003458839637`}], 
            Offset[{5., 1.1102230246251565`*^-15}, {12.73, 
             370.76003458839637`}], 
            Offset[{10., 2.220446049250313*^-15}, {12.73, 
             370.76003458839637`}], 
            Offset[{10., 2.220446049250313*^-15}, {12.73, 
             370.76003458839637`}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {12.24, 370.76}], Offset[{0, 0}, {12.24, 370.76}], 
            Offset[{0., 0.}, {12.365, 370.76}], 
            Offset[{0., 0.}, {12.365, 370.76}], 
            Offset[{0., 0.}, {12.49, 370.76}], 
            Offset[{0, 0}, {12.73, 370.76003458839637`}], 
            Offset[{5., 1.1102230246251565`*^-15}, {12.73, 
             370.76003458839637`}], 
            Offset[{10., 2.220446049250313*^-15}, {12.73, 
             370.76003458839637`}], 
            Offset[{10., 2.220446049250313*^-15}, {12.73, 
             370.76003458839637`}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{38., 6.500000000000009}, {12.73, 370.76003458839637`}], 
            Offset[{38., -6.499999999999991}, {12.73, 370.76003458839637`}], 
            Offset[{10.000000000000002`, -6.499999999999998}, {12.73, 
             370.76003458839637`}], 
            Offset[{9.999999999999998, 6.500000000000002}, {12.73, 
             370.76003458839637`}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"2000\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{24., 5.329070518200751*^-15}, {12.73, 370.76003458839637}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {12.24, 369.45}], Offset[{0, 0}, {12.24, 369.45}], 
            Offset[{0., 0.}, {12.365, 369.45}], 
            Offset[{0., 0.}, {12.365, 369.45}], 
            Offset[{0., 0.}, {12.49, 369.45}], 
            Offset[{0, 0}, {12.73, 369.44995946541985`}], 
            Offset[{5., 1.1102230246251565`*^-15}, {12.73, 
             369.44995946541985`}], 
            Offset[{10., 2.220446049250313*^-15}, {12.73, 
             369.44995946541985`}], 
            Offset[{10., 2.220446049250313*^-15}, {12.73, 
             369.44995946541985`}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {12.24, 369.45}], Offset[{0, 0}, {12.24, 369.45}], 
            Offset[{0., 0.}, {12.365, 369.45}], 
            Offset[{0., 0.}, {12.365, 369.45}], 
            Offset[{0., 0.}, {12.49, 369.45}], 
            Offset[{0, 0}, {12.73, 369.44995946541985`}], 
            Offset[{5., 1.1102230246251565`*^-15}, {12.73, 
             369.44995946541985`}], 
            Offset[{10., 2.220446049250313*^-15}, {12.73, 
             369.44995946541985`}], 
            Offset[{10., 2.220446049250313*^-15}, {12.73, 
             369.44995946541985`}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{38., 6.500000000000009}, {12.73, 369.44995946541985`}], 
            Offset[{38., -6.499999999999991}, {12.73, 369.44995946541985`}], 
            Offset[{10.000000000000002`, -6.499999999999998}, {12.73, 
             369.44995946541985`}], 
            Offset[{9.999999999999998, 6.500000000000002}, {12.73, 
             369.44995946541985`}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"1999\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{24., 5.329070518200751*^-15}, {12.73, 369.44995946541985}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}]}}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Month\"", TraditionalForm], 
    FormBox[
    "\"CO\\!\\(\\*StyleBox[\\\"2\\\",FontSize->7]\\) (ppm)\"", 
     TraditionalForm]},
  AxesOrigin->{0., 364.44555555555553`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 56.4}, {All, All}},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox[
    "\"Annual Average Effects CO\\!\\(\\*StyleBox[\\\"2\\\",FontSize->7]\\) \
(ppm)\"", 16, StripOnInput -> False], TraditionalForm],
  PlotRange->{{0., 12.}, {364.44555555555553`, 374.03}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.08090169943749476]}},
  Ticks->{{{1, 
      FormBox["1", TraditionalForm]}, {2, 
      FormBox["2", TraditionalForm]}, {3, 
      FormBox["3", TraditionalForm]}, {4, 
      FormBox["4", TraditionalForm]}, {5, 
      FormBox["5", TraditionalForm]}, {6, 
      FormBox["6", TraditionalForm]}, {7, 
      FormBox["7", TraditionalForm]}, {8, 
      FormBox["8", TraditionalForm]}, {9, 
      FormBox["9", TraditionalForm]}, {10, 
      FormBox["10", TraditionalForm]}, {11, 
      FormBox["11", TraditionalForm]}, {12, 
      FormBox["12", TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{{3.867860031852188*^9, 3.8678600482221518`*^9}, 
   3.867909933199332*^9, 3.867909994620944*^9, 3.8679115203793488`*^9, 
   3.8679928608909693`*^9, 3.868012174192408*^9, {3.8680122103993797`*^9, 
   3.8680122353235817`*^9}},
 CellLabel->
  "Out[836]=",ExpressionUUID->"2a44ef13-d5a3-4e74-925d-24f9152ba516"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 416.75}, {2., 417.64}, {3., 419.05}, {4., 419.13}, {5., 
      418.94}, {6., 416.96}, {7., 414.47}, {8., 413.3}, {9., 413.93}, {10., 
      415.01}, {11., 416.71}, {12., 418.19}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 414.34}, {2., 414.74}, {3., 416.45}, {4., 417.31}, {5., 
      416.6}, {6., 414.62}, {7., 412.78}, {8., 411.52}, {9., 411.51}, {10., 
      413.12}, {11., 414.26}, {12., 415.52}}]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 411.96}, {2., 412.18}, {3., 413.54}, {4., 414.86}, {5., 
      414.16}, {6., 411.97}, {7., 410.18}, {8., 408.76}, {9., 408.75}, {10., 
      410.48}, {11., 411.98}, {12., 413.61}}]}}, {{{{}, {GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {12.24, 418.19}], Offset[{0, 0}, {12.24, 418.19}], 
            Offset[{0., 0.}, {12.365, 418.19}], 
            Offset[{0., 0.}, {12.365, 418.19}], 
            Offset[{0., 0.}, {12.49, 418.19}], 
            Offset[{0, 0}, {12.73, 418.1900013540534}], 
            Offset[{5., 1.1102230246251565`*^-15}, {12.73, 
             418.1900013540534}], 
            Offset[{10., 2.220446049250313*^-15}, {12.73, 418.1900013540534}],
             Offset[{10., 2.220446049250313*^-15}, {12.73, 
             418.1900013540534}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {12.24, 418.19}], Offset[{0, 0}, {12.24, 418.19}], 
            Offset[{0., 0.}, {12.365, 418.19}], 
            Offset[{0., 0.}, {12.365, 418.19}], 
            Offset[{0., 0.}, {12.49, 418.19}], 
            Offset[{0, 0}, {12.73, 418.1900013540534}], 
            Offset[{5., 1.1102230246251565`*^-15}, {12.73, 
             418.1900013540534}], 
            Offset[{10., 2.220446049250313*^-15}, {12.73, 418.1900013540534}],
             Offset[{10., 2.220446049250313*^-15}, {12.73, 
             418.1900013540534}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{38., 6.500000000000009}, {12.73, 418.1900013540534}], 
            Offset[{38., -6.499999999999991}, {12.73, 418.1900013540534}], 
            Offset[{10.000000000000002`, -6.499999999999998}, {12.73, 
             418.1900013540534}], 
            Offset[{9.999999999999998, 6.500000000000002}, {12.73, 
             418.1900013540534}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"2021\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{24., 5.329070518200751*^-15}, {12.73, 418.1900013540534}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {12.24, 415.52}], Offset[{0, 0}, {12.24, 415.52}], 
            Offset[{0., 0.}, {12.365, 415.52}], 
            Offset[{0., 0.}, {12.365, 415.52}], 
            Offset[{0., 0.}, {12.49, 415.52}], 
            Offset[{0, 0}, {12.73, 415.5200034916509}], 
            Offset[{5., 1.1102230246251565`*^-15}, {12.73, 
             415.5200034916509}], 
            Offset[{10., 2.220446049250313*^-15}, {12.73, 415.5200034916509}],
             Offset[{10., 2.220446049250313*^-15}, {12.73, 
             415.5200034916509}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {12.24, 415.52}], Offset[{0, 0}, {12.24, 415.52}], 
            Offset[{0., 0.}, {12.365, 415.52}], 
            Offset[{0., 0.}, {12.365, 415.52}], 
            Offset[{0., 0.}, {12.49, 415.52}], 
            Offset[{0, 0}, {12.73, 415.5200034916509}], 
            Offset[{5., 1.1102230246251565`*^-15}, {12.73, 
             415.5200034916509}], 
            Offset[{10., 2.220446049250313*^-15}, {12.73, 415.5200034916509}],
             Offset[{10., 2.220446049250313*^-15}, {12.73, 
             415.5200034916509}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{38., 6.500000000000009}, {12.73, 415.5200034916509}], 
            Offset[{38., -6.499999999999991}, {12.73, 415.5200034916509}], 
            Offset[{10.000000000000002`, -6.499999999999998}, {12.73, 
             415.5200034916509}], 
            Offset[{9.999999999999998, 6.500000000000002}, {12.73, 
             415.5200034916509}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"2020\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{24., 5.329070518200751*^-15}, {12.73, 415.5200034916509}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {12.24, 413.61}], Offset[{0, 0}, {12.24, 413.61}], 
            Offset[{0., 0.}, {12.365, 413.61}], 
            Offset[{0., 0.}, {12.365, 413.61}], 
            Offset[{0., 0.}, {12.49, 413.61}], 
            Offset[{0, 0}, {12.73, 413.60999277311015`}], 
            Offset[{5., 1.1102230246251565`*^-15}, {12.73, 
             413.60999277311015`}], 
            Offset[{10., 2.220446049250313*^-15}, {12.73, 
             413.60999277311015`}], 
            Offset[{10., 2.220446049250313*^-15}, {12.73, 
             413.60999277311015`}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {12.24, 413.61}], Offset[{0, 0}, {12.24, 413.61}], 
            Offset[{0., 0.}, {12.365, 413.61}], 
            Offset[{0., 0.}, {12.365, 413.61}], 
            Offset[{0., 0.}, {12.49, 413.61}], 
            Offset[{0, 0}, {12.73, 413.60999277311015`}], 
            Offset[{5., 1.1102230246251565`*^-15}, {12.73, 
             413.60999277311015`}], 
            Offset[{10., 2.220446049250313*^-15}, {12.73, 
             413.60999277311015`}], 
            Offset[{10., 2.220446049250313*^-15}, {12.73, 
             413.60999277311015`}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{38., 6.500000000000009}, {12.73, 413.60999277311015`}], 
            Offset[{38., -6.499999999999991}, {12.73, 413.60999277311015`}], 
            Offset[{10.000000000000002`, -6.499999999999998}, {12.73, 
             413.60999277311015`}], 
            Offset[{9.999999999999998, 6.500000000000002}, {12.73, 
             413.60999277311015`}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"2019\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{24., 5.329070518200751*^-15}, {12.73, 413.60999277311015}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}]}}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Month\"", TraditionalForm], 
    FormBox[
    "\"CO\\!\\(\\*StyleBox[\\\"2\\\",FontSize->7]\\) (ppm)\"", 
     TraditionalForm]},
  AxesOrigin->{0., 408.17333333333335`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 56.4}, {All, All}},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox[
    "\"Annual Average Effects CO\\!\\(\\*StyleBox[\\\"2\\\",FontSize->7]\\) \
(ppm)\"", 16, StripOnInput -> False], TraditionalForm],
  PlotRange->{{0., 12.}, {408.17333333333335`, 419.13}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.08090169943749476]}},
  Ticks->{{{1, 
      FormBox["1", TraditionalForm]}, {2, 
      FormBox["2", TraditionalForm]}, {3, 
      FormBox["3", TraditionalForm]}, {4, 
      FormBox["4", TraditionalForm]}, {5, 
      FormBox["5", TraditionalForm]}, {6, 
      FormBox["6", TraditionalForm]}, {7, 
      FormBox["7", TraditionalForm]}, {8, 
      FormBox["8", TraditionalForm]}, {9, 
      FormBox["9", TraditionalForm]}, {10, 
      FormBox["10", TraditionalForm]}, {11, 
      FormBox["11", TraditionalForm]}, {12, 
      FormBox["12", TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{{3.867860031852188*^9, 3.8678600482221518`*^9}, 
   3.867909933199332*^9, 3.867909994620944*^9, 3.8679115203793488`*^9, 
   3.8679928608909693`*^9, 3.868012174192408*^9, {3.8680122103993797`*^9, 
   3.8680122354155607`*^9}},
 CellLabel->
  "Out[837]=",ExpressionUUID->"f4d20a15-c9cb-478f-a83a-e4d27310cbdf"]
}, Open  ]],

Cell["\<\
Comparing  1960 and 2020, we see the seasonal effects of 1960 are diminished \
by the larger effects of 2020. The CO2 levels for 2020 are 100 ppm higher \
than CO2 levels for 1960.\
\>", "Text",
 CellChangeTimes->{{3.867840815177457*^9, 3.867840825986744*^9}, {
  3.867857789015346*^9, 3.8678578465769253`*^9}, {3.867860996380916*^9, 
  3.867861009703144*^9}},ExpressionUUID->"be335ae1-c4cb-4be6-8257-\
83ca3136ff56"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", "  ", 
    RowBox[{
     RowBox[{"average", "[", 
      RowBox[{"[", 
       RowBox[{"744", ";;", "755"}], "]"}], "]"}], ",", " ", 
     RowBox[{"average", "[", 
      RowBox[{"[", 
       RowBox[{"24", ";;", "35"}], "]"}], "]"}]}], "  ", "}"}], ",", 
   RowBox[{"PlotLabels", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<2020\>\"", " ", ",", " ", "\"\<1960\>\""}], "}"}]}], ",", 
   "  ", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Annual Average Effects CO\!\(\*StyleBox[\"2\",FontSize->7]\)\>\"", 
      ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Month\>\"", ",", "\"\<CO\!\(\*StyleBox[\"2\",FontSize->7]\)\>\""}], 
     "}"}]}], ",", " ", 
   RowBox[{"Ticks", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", "12", ",", "1"}], "]"}], ",", " ", "Automatic"}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.867840846250813*^9, 3.867840929344396*^9}},
 CellLabel->
  "In[804]:=",ExpressionUUID->"b0ad935a-660e-45c0-bb32-4d2cb553556b"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 414.34}, {2., 414.74}, {3., 416.45}, {4., 417.31}, {5., 
      416.6}, {6., 414.62}, {7., 412.78}, {8., 411.52}, {9., 411.51}, {10., 
      413.12}, {11., 414.26}, {12., 415.52}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 316.98}, {2., 317.58}, {3., 319.03}, {4., 320.04}, {5., 
      319.59}, {6., 318.18}, {7., 315.9}, {8., 314.17}, {9., 313.83}, {10., 
      315.}, {11., 316.19}, {12., 316.89}}]}}, {{{{}, GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {12.24, 415.52}], Offset[{0, 0}, {12.24, 415.52}], 
           Offset[{0., 0.}, {12.365, 415.52}], 
           Offset[{0., 0.}, {12.365, 415.52}], 
           Offset[{0., 0.}, {12.49, 415.52}], 
           Offset[{0, 0}, {12.730000021781592`, 415.5199994052052}], 
           Offset[{5., 1.1102230246251565`*^-15}, {12.730000021781592`, 
            415.5199994052052}], 
           Offset[{10., 2.220446049250313*^-15}, {12.730000021781592`, 
            415.5199994052052}], 
           Offset[{10., 2.220446049250313*^-15}, {12.730000021781592`, 
            415.5199994052052}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {12.24, 415.52}], Offset[{0, 0}, {12.24, 415.52}], 
           Offset[{0., 0.}, {12.365, 415.52}], 
           Offset[{0., 0.}, {12.365, 415.52}], 
           Offset[{0., 0.}, {12.49, 415.52}], 
           Offset[{0, 0}, {12.730000021781592`, 415.5199994052052}], 
           Offset[{5., 1.1102230246251565`*^-15}, {12.730000021781592`, 
            415.5199994052052}], 
           Offset[{10., 2.220446049250313*^-15}, {12.730000021781592`, 
            415.5199994052052}], 
           Offset[{10., 2.220446049250313*^-15}, {12.730000021781592`, 
            415.5199994052052}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{38., 6.500000000000009}, {12.730000021781592`, 
            415.5199994052052}], 
           Offset[{38., -6.499999999999991}, {12.730000021781592`, 
            415.5199994052052}], 
           Offset[{10.000000000000002`, -6.499999999999998}, {
            12.730000021781592`, 415.5199994052052}], 
           Offset[{9.999999999999998, 6.500000000000002}, {
            12.730000021781592`, 415.5199994052052}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"2020\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{24., 5.329070518200751*^-15}, \
{12.730000021781592, 415.5199994052052}], 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {12.24, 316.89}], Offset[{0, 0}, {12.24, 316.89}], 
           Offset[{0., 0.}, {12.365, 316.89}], 
           Offset[{0., 0.}, {12.365, 316.89}], 
           Offset[{0., 0.}, {12.49, 316.89}], 
           Offset[{0, 0}, {12.730000021781592`, 316.89000037090085`}], 
           Offset[{5., 1.1102230246251565`*^-15}, {12.730000021781592`, 
            316.89000037090085`}], 
           Offset[{10., 2.220446049250313*^-15}, {12.730000021781592`, 
            316.89000037090085`}], 
           Offset[{10., 2.220446049250313*^-15}, {12.730000021781592`, 
            316.89000037090085`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {12.24, 316.89}], Offset[{0, 0}, {12.24, 316.89}], 
           Offset[{0., 0.}, {12.365, 316.89}], 
           Offset[{0., 0.}, {12.365, 316.89}], 
           Offset[{0., 0.}, {12.49, 316.89}], 
           Offset[{0, 0}, {12.730000021781592`, 316.89000037090085`}], 
           Offset[{5., 1.1102230246251565`*^-15}, {12.730000021781592`, 
            316.89000037090085`}], 
           Offset[{10., 2.220446049250313*^-15}, {12.730000021781592`, 
            316.89000037090085`}], 
           Offset[{10., 2.220446049250313*^-15}, {12.730000021781592`, 
            316.89000037090085`}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{38., 6.500000000000009}, {12.730000021781592`, 
            316.89000037090085`}], 
           Offset[{38., -6.499999999999991}, {12.730000021781592`, 
            316.89000037090085`}], 
           Offset[{10.000000000000002`, -6.499999999999998}, {
            12.730000021781592`, 316.89000037090085`}], 
           Offset[{9.999999999999998, 6.500000000000002}, {
            12.730000021781592`, 316.89000037090085`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"1960\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{24., 5.329070518200751*^-15}, \
{12.730000021781592, 316.89000037090085}], 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}]}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Month\"", TraditionalForm], 
    FormBox[
    "\"CO\\!\\(\\*StyleBox[\\\"2\\\",FontSize->7]\\)\"", TraditionalForm]},
  AxesOrigin->{0., 308.0811111111111},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 56.40000065344774}, {All, All}},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox[
    "\"Annual Average Effects \
CO\\!\\(\\*StyleBox[\\\"2\\\",FontSize->7]\\)\"", 16, StripOnInput -> False], 
    TraditionalForm],
  PlotRange->{{0., 12.}, {308.0811111111111, 417.31}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.08090169943749476]}},
  Ticks->{{{1, 
      FormBox["1", TraditionalForm]}, {2, 
      FormBox["2", TraditionalForm]}, {3, 
      FormBox["3", TraditionalForm]}, {4, 
      FormBox["4", TraditionalForm]}, {5, 
      FormBox["5", TraditionalForm]}, {6, 
      FormBox["6", TraditionalForm]}, {7, 
      FormBox["7", TraditionalForm]}, {8, 
      FormBox["8", TraditionalForm]}, {9, 
      FormBox["9", TraditionalForm]}, {10, 
      FormBox["10", TraditionalForm]}, {11, 
      FormBox["11", TraditionalForm]}, {12, 
      FormBox["12", TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{3.8678409298210173`*^9, 3.867909933578257*^9, 
  3.867909994979204*^9, 3.86791152072351*^9, 3.867992861238742*^9, 
  3.868012174516938*^9},
 CellLabel->
  "Out[804]=",ExpressionUUID->"405b7158-a73d-4578-a145-33a2cec6defd"]
}, Open  ]],

Cell["\<\
Despite not appearing so, CO2 data from 2020 still forms strong peaks and \
troughs, which is muted out somewhat when compared against different time \
periods.\
\>", "Text",
 CellChangeTimes->{{3.867913824804246*^9, 
  3.8679138662813187`*^9}},ExpressionUUID->"607dbf4c-ed4f-42ee-9af4-\
863cec96e23f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", "  ", 
    RowBox[{"average", "[", 
     RowBox[{"[", 
      RowBox[{"744", ";;", "755"}], "]"}], "]"}], "}"}], ",", 
   RowBox[{"PlotLabels", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<2020\>\"", " ", ",", " ", "\"\<1960\>\""}], "}"}]}], ",", 
   "  ", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Annual Average Effects CO\!\(\*StyleBox[\"2\",FontSize->7]\)\>\"", 
      ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Month\>\"", ",", "\"\<CO\!\(\*StyleBox[\"2\",FontSize->7]\)\>\""}], 
     "}"}]}], ",", " ", 
   RowBox[{"Ticks", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", "12", ",", "1"}], "]"}], ",", " ", "Automatic"}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.867840846250813*^9, 3.867840929344396*^9}, 
   3.867913816607163*^9},
 CellLabel->
  "In[805]:=",ExpressionUUID->"38e8fb51-5b7b-47a9-a339-c8d56c501d5b"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], 
    PointBox[{{1., 414.34}, {2., 414.74}, {3., 416.45}, {4., 417.31}, {5., 
     416.6}, {6., 414.62}, {7., 412.78}, {8., 411.52}, {9., 411.51}, {10., 
     413.12}, {11., 414.26}, {12., 415.52}}]}, {{{{}, GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {12.24, 415.52}], Offset[{0, 0}, {12.24, 415.52}], 
           Offset[{0., 0.}, {12.365, 415.52}], 
           Offset[{0., 0.}, {12.365, 415.52}], 
           Offset[{0., 0.}, {12.49, 415.52}], 
           Offset[{0, 0}, {12.73, 415.51999882773794`}], 
           Offset[{5., 1.1102230246251565`*^-15}, {12.73, 
            415.51999882773794`}], 
           Offset[{10., 2.220446049250313*^-15}, {12.73, 
            415.51999882773794`}], 
           Offset[{10., 2.220446049250313*^-15}, {12.73, 
            415.51999882773794`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {12.24, 415.52}], Offset[{0, 0}, {12.24, 415.52}], 
           Offset[{0., 0.}, {12.365, 415.52}], 
           Offset[{0., 0.}, {12.365, 415.52}], 
           Offset[{0., 0.}, {12.49, 415.52}], 
           Offset[{0, 0}, {12.73, 415.51999882773794`}], 
           Offset[{5., 1.1102230246251565`*^-15}, {12.73, 
            415.51999882773794`}], 
           Offset[{10., 2.220446049250313*^-15}, {12.73, 
            415.51999882773794`}], 
           Offset[{10., 2.220446049250313*^-15}, {12.73, 
            415.51999882773794`}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{38., 6.500000000000009}, {12.73, 415.51999882773794`}], 
           Offset[{38., -6.499999999999991}, {12.73, 415.51999882773794`}], 
           Offset[{10.000000000000002`, -6.499999999999998}, {12.73, 
            415.51999882773794`}], 
           Offset[{9.999999999999998, 6.500000000000002}, {12.73, 
            415.51999882773794`}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"2020\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{24., 5.329070518200751*^-15}, {12.73, 415.51999882773794}], 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}]}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Month\"", TraditionalForm], 
    FormBox[
    "\"CO\\!\\(\\*StyleBox[\\\"2\\\",FontSize->7]\\)\"", TraditionalForm]},
  AxesOrigin->{0., 411.1877777777778},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 56.4}, {All, All}},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox[
    "\"Annual Average Effects \
CO\\!\\(\\*StyleBox[\\\"2\\\",FontSize->7]\\)\"", 16, StripOnInput -> False], 
    TraditionalForm],
  PlotRange->{{0., 12.}, {411.1877777777778, 417.31}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.08090169943749476]}},
  Ticks->{{{1, 
      FormBox["1", TraditionalForm]}, {2, 
      FormBox["2", TraditionalForm]}, {3, 
      FormBox["3", TraditionalForm]}, {4, 
      FormBox["4", TraditionalForm]}, {5, 
      FormBox["5", TraditionalForm]}, {6, 
      FormBox["6", TraditionalForm]}, {7, 
      FormBox["7", TraditionalForm]}, {8, 
      FormBox["8", TraditionalForm]}, {9, 
      FormBox["9", TraditionalForm]}, {10, 
      FormBox["10", TraditionalForm]}, {11, 
      FormBox["11", TraditionalForm]}, {12, 
      FormBox["12", TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{3.867913817764262*^9, 3.867992861317189*^9, 
  3.868012174578372*^9},
 CellLabel->
  "Out[805]=",ExpressionUUID->"66402f4f-4b12-40da-b8d3-6b169948cb9f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"average", "[", 
      RowBox[{"[", 
       RowBox[{"144", ";;", "157"}], "]"}], "]"}], " ", ",", " ", 
     RowBox[{"average", "[", 
      RowBox[{"[", 
       RowBox[{"84", ";;", "95"}], "]"}], "]"}], " ", ",", 
     RowBox[{"average", "[", 
      RowBox[{"[", 
       RowBox[{"24", ";;", "35"}], "]"}], "]"}]}], "}"}], ",", "  ", 
   RowBox[{"PlotLabels", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<1970\>\"", ",", " ", "\"\<1965\>\"", " ", ",", " ", 
      "\"\<1960\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Annual Average Effects CO\!\(\*StyleBox[\"2\",FontSize->7]\) \
(ppm)\>\"", ",", " ", "16"}], "]"}]}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Month\>\"", ",", 
      "\"\<CO\!\(\*StyleBox[\"2\",FontSize->7]\) (ppm)\>\""}], "}"}]}], ",", 
   " ", 
   RowBox[{"Ticks", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", "12", ",", "1"}], "]"}], ",", " ", "Automatic"}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"average", "[", 
      RowBox[{"[", 
       RowBox[{"744", ";;", "755"}], "]"}], "]"}], ",", " ", 
     RowBox[{"average", "[", 
      RowBox[{"[", 
       RowBox[{"684", ";;", "695"}], "]"}], "]"}], " ", ",", 
     RowBox[{"average", "[", 
      RowBox[{"[", 
       RowBox[{"624", ";;", "635"}], "]"}], "]"}]}], " ", "}"}], ",", 
   RowBox[{"PlotLabels", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<2020\>\"", ",", " ", "\"\<2015\>\"", " ", ",", " ", 
      "\"\<2010\>\""}], "}"}]}], ",", "  ", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Annual Average Effects CO\!\(\*StyleBox[\"2\",FontSize->7]\) \
(ppm)\>\"", ",", " ", "16"}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Month\>\"", ",", 
      "\"\<CO\!\(\*StyleBox[\"2\",FontSize->7]\) (ppm)\>\""}], "}"}]}], ",", 
   " ", 
   RowBox[{"Ticks", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", "12", ",", "1"}], "]"}], ",", " ", "Automatic"}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.867861433171494*^9, 3.8678615065365667`*^9}, {
  3.8678615665575743`*^9, 3.867861595009088*^9}},
 CellLabel->
  "In[806]:=",ExpressionUUID->"e13b3c3c-a897-44d1-86cb-5ecb684cc964"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 325.98}, {2., 326.93}, {3., 328.13}, {4., 328.08}, {5., 
      327.67}, {6., 326.34}, {7., 324.69}, {8., 323.1}, {9., 323.06}, {10., 
      324.01}, {11., 325.13}, {12., 326.17}, {13., 326.68}, {14., 
      327.17}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 320.44}, {2., 320.89}, {3., 322.14}, {4., 322.17}, {5., 
      321.87}, {6., 321.21}, {7., 318.87}, {8., 317.81}, {9., 317.3}, {10., 
      318.87}, {11., 319.42}, {12., 320.62}}]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 316.98}, {2., 317.58}, {3., 319.03}, {4., 320.04}, {5., 
      319.59}, {6., 318.18}, {7., 315.9}, {8., 314.17}, {9., 313.83}, {10., 
      315.}, {11., 316.19}, {12., 316.89}}]}}, {{{{}, {GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {14.28, 327.17}], Offset[{0, 0}, {14.28, 327.17}], 
            Offset[{0., 0.}, {14.425833333333333`, 327.17}], 
            Offset[{0., 0.}, {14.425833333333333`, 327.17}], 
            Offset[{0., 0.}, {14.571666666666665`, 327.17}], 
            Offset[{0, 0}, {14.851666666666667`, 327.169998783455}], 
            Offset[{5., 1.1102230246251565`*^-15}, {14.851666666666667`, 
             327.169998783455}], 
            Offset[{10., 2.220446049250313*^-15}, {14.851666666666667`, 
             327.169998783455}], 
            Offset[{10., 2.220446049250313*^-15}, {14.851666666666667`, 
             327.169998783455}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {14.28, 327.17}], Offset[{0, 0}, {14.28, 327.17}], 
            Offset[{0., 0.}, {14.425833333333333`, 327.17}], 
            Offset[{0., 0.}, {14.425833333333333`, 327.17}], 
            Offset[{0., 0.}, {14.571666666666665`, 327.17}], 
            Offset[{0, 0}, {14.851666666666667`, 327.169998783455}], 
            Offset[{5., 1.1102230246251565`*^-15}, {14.851666666666667`, 
             327.169998783455}], 
            Offset[{10., 2.220446049250313*^-15}, {14.851666666666667`, 
             327.169998783455}], 
            Offset[{10., 2.220446049250313*^-15}, {14.851666666666667`, 
             327.169998783455}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{38., 6.500000000000009}, {14.851666666666667`, 
             327.169998783455}], 
            Offset[{38., -6.499999999999991}, {14.851666666666667`, 
             327.169998783455}], 
            Offset[{10.000000000000002`, -6.499999999999998}, {
             14.851666666666667`, 327.169998783455}], 
            Offset[{9.999999999999998, 6.500000000000002}, {
             14.851666666666667`, 327.169998783455}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"1970\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{24., 5.329070518200751*^-15}, \
{14.851666666666667, 327.169998783455}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {12.28, 320.62}], Offset[{0, 0}, {12.28, 320.62}], 
            Offset[{0., 0.}, {13.425833333333333`, 320.62}], 
            Offset[{0., 0.}, {13.425833333333333`, 320.62}], 
            Offset[{0., 0.}, {14.571666666666665`, 320.62}], 
            Offset[{0, 0}, {14.851666666666667`, 320.6200016602957}], 
            Offset[{5., 1.1102230246251565`*^-15}, {14.851666666666667`, 
             320.6200016602957}], 
            Offset[{10., 2.220446049250313*^-15}, {14.851666666666667`, 
             320.6200016602957}], 
            Offset[{10., 2.220446049250313*^-15}, {14.851666666666667`, 
             320.6200016602957}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {12.28, 320.62}], Offset[{0, 0}, {12.28, 320.62}], 
            Offset[{0., 0.}, {13.425833333333333`, 320.62}], 
            Offset[{0., 0.}, {13.425833333333333`, 320.62}], 
            Offset[{0., 0.}, {14.571666666666665`, 320.62}], 
            Offset[{0, 0}, {14.851666666666667`, 320.6200016602957}], 
            Offset[{5., 1.1102230246251565`*^-15}, {14.851666666666667`, 
             320.6200016602957}], 
            Offset[{10., 2.220446049250313*^-15}, {14.851666666666667`, 
             320.6200016602957}], 
            Offset[{10., 2.220446049250313*^-15}, {14.851666666666667`, 
             320.6200016602957}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{38., 6.500000000000009}, {14.851666666666667`, 
             320.6200016602957}], 
            Offset[{38., -6.499999999999991}, {14.851666666666667`, 
             320.6200016602957}], 
            Offset[{10.000000000000002`, -6.499999999999998}, {
             14.851666666666667`, 320.6200016602957}], 
            Offset[{9.999999999999998, 6.500000000000002}, {
             14.851666666666667`, 320.6200016602957}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"1965\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{24., 5.329070518200751*^-15}, \
{14.851666666666667, 320.6200016602957}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {12.28, 316.89}], Offset[{0, 0}, {12.28, 316.89}], 
            Offset[{0., 0.}, {13.425833333333333`, 316.89}], 
            Offset[{0., 0.}, {13.425833333333333`, 316.89}], 
            Offset[{0., 0.}, {14.571666666666665`, 316.89}], 
            Offset[{0, 0}, {14.851666666666667`, 316.8899978902733}], 
            Offset[{5., 1.1102230246251565`*^-15}, {14.851666666666667`, 
             316.8899978902733}], 
            Offset[{10., 2.220446049250313*^-15}, {14.851666666666667`, 
             316.8899978902733}], 
            Offset[{10., 2.220446049250313*^-15}, {14.851666666666667`, 
             316.8899978902733}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {12.28, 316.89}], Offset[{0, 0}, {12.28, 316.89}], 
            Offset[{0., 0.}, {13.425833333333333`, 316.89}], 
            Offset[{0., 0.}, {13.425833333333333`, 316.89}], 
            Offset[{0., 0.}, {14.571666666666665`, 316.89}], 
            Offset[{0, 0}, {14.851666666666667`, 316.8899978902733}], 
            Offset[{5., 1.1102230246251565`*^-15}, {14.851666666666667`, 
             316.8899978902733}], 
            Offset[{10., 2.220446049250313*^-15}, {14.851666666666667`, 
             316.8899978902733}], 
            Offset[{10., 2.220446049250313*^-15}, {14.851666666666667`, 
             316.8899978902733}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{38., 6.500000000000009}, {14.851666666666667`, 
             316.8899978902733}], 
            Offset[{38., -6.499999999999991}, {14.851666666666667`, 
             316.8899978902733}], 
            Offset[{10.000000000000002`, -6.499999999999998}, {
             14.851666666666667`, 316.8899978902733}], 
            Offset[{9.999999999999998, 6.500000000000002}, {
             14.851666666666667`, 316.8899978902733}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"1960\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{24., 5.329070518200751*^-15}, \
{14.851666666666667, 316.8899978902733}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}]}}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Month\"", TraditionalForm], 
    FormBox[
    "\"CO\\!\\(\\*StyleBox[\\\"2\\\",FontSize->7]\\) (ppm)\"", 
     TraditionalForm]},
  AxesOrigin->{0., 313.03555555555556`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 56.4}, {All, All}},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox[
    "\"Annual Average Effects CO\\!\\(\\*StyleBox[\\\"2\\\",FontSize->7]\\) \
(ppm)\"", 16, StripOnInput -> False], TraditionalForm],
  PlotRange->{{0., 14.}, {313.03555555555556`, 328.13}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.08090169943749476]}},
  Ticks->{{{1, 
      FormBox["1", TraditionalForm]}, {2, 
      FormBox["2", TraditionalForm]}, {3, 
      FormBox["3", TraditionalForm]}, {4, 
      FormBox["4", TraditionalForm]}, {5, 
      FormBox["5", TraditionalForm]}, {6, 
      FormBox["6", TraditionalForm]}, {7, 
      FormBox["7", TraditionalForm]}, {8, 
      FormBox["8", TraditionalForm]}, {9, 
      FormBox["9", TraditionalForm]}, {10, 
      FormBox["10", TraditionalForm]}, {11, 
      FormBox["11", TraditionalForm]}, {12, 
      FormBox["12", TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{3.86786150804182*^9, 3.867861596054181*^9, 
  3.867909933653656*^9, 3.867909995079327*^9, 3.86791152082524*^9, 
  3.8679928614042177`*^9, 3.868012174658222*^9},
 CellLabel->
  "Out[806]=",ExpressionUUID->"741e4fd2-b715-4fab-85f4-adc171b9bdfe"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 414.34}, {2., 414.74}, {3., 416.45}, {4., 417.31}, {5., 
      416.6}, {6., 414.62}, {7., 412.78}, {8., 411.52}, {9., 411.51}, {10., 
      413.12}, {11., 414.26}, {12., 415.52}}]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 400.55}, {2., 401.74}, {3., 403.35}, {4., 404.15}, {5., 
      402.97}, {6., 401.46}, {7., 399.11}, {8., 397.82}, {9., 398.49}, {10., 
      400.27}, {11., 402.06}, {12., 402.73}}]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 390.41}, {2., 391.37}, {3., 392.67}, {4., 393.21}, {5., 
      392.38}, {6., 390.41}, {7., 388.54}, {8., 387.03}, {9., 387.43}, {10., 
      388.87}, {11., 389.99}, {12., 391.5}}]}}, {{{{}, GraphicsGroupBox[{
        {GrayLevel[1], AbsoluteThickness[4], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
         "Round"], 
         BSplineCurveBox[{
          Offset[{0, 0}, {12.24, 415.52}], Offset[{0, 0}, {12.24, 415.52}], 
           Offset[{0., 0.}, {12.365, 415.52}], 
           Offset[{0., 0.}, {12.365, 415.52}], 
           Offset[{0., 0.}, {12.49, 415.52}], 
           Offset[{0, 0}, {12.730000074993153`, 415.519999400763}], 
           Offset[{5., 1.1102230246251565`*^-15}, {12.730000074993153`, 
            415.519999400763}], 
           Offset[{10., 2.220446049250313*^-15}, {12.730000074993153`, 
            415.519999400763}], 
           Offset[{10., 2.220446049250313*^-15}, {12.730000074993153`, 
            415.519999400763}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], 
         BSplineCurveBox[{
          Offset[{0, 0}, {12.24, 415.52}], Offset[{0, 0}, {12.24, 415.52}], 
           Offset[{0., 0.}, {12.365, 415.52}], 
           Offset[{0., 0.}, {12.365, 415.52}], 
           Offset[{0., 0.}, {12.49, 415.52}], 
           Offset[{0, 0}, {12.730000074993153`, 415.519999400763}], 
           Offset[{5., 1.1102230246251565`*^-15}, {12.730000074993153`, 
            415.519999400763}], 
           Offset[{10., 2.220446049250313*^-15}, {12.730000074993153`, 
            415.519999400763}], 
           Offset[{10., 2.220446049250313*^-15}, {12.730000074993153`, 
            415.519999400763}]}]}, 
        {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
          NCache[
           Rational[2, 3], 0.6666666666666666]]}], 
         PolygonBox[{
          Offset[{38., 6.500000000000009}, {12.730000074993153`, 
            415.519999400763}], 
           Offset[{38., -6.499999999999991}, {12.730000074993153`, 
            415.519999400763}], 
           Offset[{10.000000000000002`, -6.499999999999998}, {
            12.730000074993153`, 415.519999400763}], 
           Offset[{9.999999999999998, 6.500000000000002}, {
            12.730000074993153`, 415.519999400763}]}]}, 
        {RGBColor[0.6666666666666666, 0.6666666666666666, 0.6666666666666666],
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
         StyleBox[
          RotationBox["\<\"2020\"\>",
           BoxRotation->0.],
          StripOnInput->False,
          LineOpacity->1,
          FrontFaceOpacity->1,
          BackFaceOpacity->1,
          Opacity->1,
          FontOpacity->1], 
         Offset[{24., 5.329070518200751*^-15}, \
{12.730000074993153, 415.519999400763}], 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], {
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {12.24, 402.73}], Offset[{0, 0}, {12.24, 402.73}], 
            Offset[{0., 0.}, {12.365, 402.73}], 
            Offset[{0., 0.}, {12.365, 402.73}], 
            Offset[{0., 0.}, {12.49, 402.73}], 
            Offset[{0, 0}, {12.730000074993153`, 402.73000014057567`}], 
            Offset[{5., 1.1102230246251565`*^-15}, {12.730000074993153`, 
             402.73000014057567`}], 
            Offset[{10., 2.220446049250313*^-15}, {12.730000074993153`, 
             402.73000014057567`}], 
            Offset[{10., 2.220446049250313*^-15}, {12.730000074993153`, 
             402.73000014057567`}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {12.24, 402.73}], Offset[{0, 0}, {12.24, 402.73}], 
            Offset[{0., 0.}, {12.365, 402.73}], 
            Offset[{0., 0.}, {12.365, 402.73}], 
            Offset[{0., 0.}, {12.49, 402.73}], 
            Offset[{0, 0}, {12.730000074993153`, 402.73000014057567`}], 
            Offset[{5., 1.1102230246251565`*^-15}, {12.730000074993153`, 
             402.73000014057567`}], 
            Offset[{10., 2.220446049250313*^-15}, {12.730000074993153`, 
             402.73000014057567`}], 
            Offset[{10., 2.220446049250313*^-15}, {12.730000074993153`, 
             402.73000014057567`}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{38., 6.500000000000009}, {12.730000074993153`, 
             402.73000014057567`}], 
            Offset[{38., -6.499999999999991}, {12.730000074993153`, 
             402.73000014057567`}], 
            Offset[{10.000000000000002`, -6.499999999999998}, {
             12.730000074993153`, 402.73000014057567`}], 
            Offset[{9.999999999999998, 6.500000000000002}, {
             12.730000074993153`, 402.73000014057567`}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"2015\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{24., 5.329070518200751*^-15}, \
{12.730000074993153, 402.73000014057567}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}], 
       GraphicsGroupBox[{
         {GrayLevel[1], AbsoluteThickness[4], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
          "Round"], 
          BSplineCurveBox[{
           Offset[{0, 0}, {12.24, 391.5}], Offset[{0, 0}, {12.24, 391.5}], 
            Offset[{0., 0.}, {12.365, 391.5}], 
            Offset[{0., 0.}, {12.365, 391.5}], 
            Offset[{0., 0.}, {12.49, 391.5}], 
            Offset[{0, 0}, {12.730000074993153`, 391.49999974106134`}], 
            Offset[{5., 1.1102230246251565`*^-15}, {12.730000074993153`, 
             391.49999974106134`}], 
            Offset[{10., 2.220446049250313*^-15}, {12.730000074993153`, 
             391.49999974106134`}], 
            Offset[{10., 2.220446049250313*^-15}, {12.730000074993153`, 
             391.49999974106134`}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], 
          BSplineCurveBox[{
           Offset[{0, 0}, {12.24, 391.5}], Offset[{0, 0}, {12.24, 391.5}], 
            Offset[{0., 0.}, {12.365, 391.5}], 
            Offset[{0., 0.}, {12.365, 391.5}], 
            Offset[{0., 0.}, {12.49, 391.5}], 
            Offset[{0, 0}, {12.730000074993153`, 391.49999974106134`}], 
            Offset[{5., 1.1102230246251565`*^-15}, {12.730000074993153`, 
             391.49999974106134`}], 
            Offset[{10., 2.220446049250313*^-15}, {12.730000074993153`, 
             391.49999974106134`}], 
            Offset[{10., 2.220446049250313*^-15}, {12.730000074993153`, 
             391.49999974106134`}]}]}, 
         {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
           NCache[
            Rational[2, 3], 0.6666666666666666]]}], 
          PolygonBox[{
           Offset[{38., 6.500000000000009}, {12.730000074993153`, 
             391.49999974106134`}], 
            Offset[{38., -6.499999999999991}, {12.730000074993153`, 
             391.49999974106134`}], 
            Offset[{10.000000000000002`, -6.499999999999998}, {
             12.730000074993153`, 391.49999974106134`}], 
            Offset[{9.999999999999998, 6.500000000000002}, {
             12.730000074993153`, 391.49999974106134`}]}]}, 
         {RGBColor[
          0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
          AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
          StyleBox[
           RotationBox["\<\"2010\"\>",
            BoxRotation->0.],
           StripOnInput->False,
           LineOpacity->1,
           FrontFaceOpacity->1,
           BackFaceOpacity->1,
           Opacity->1,
           FontOpacity->1], 
          Offset[{24., 5.329070518200751*^-15}, \
{12.730000074993153, 391.49999974106134}], 
          ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}]}}, {}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Month\"", TraditionalForm], 
    FormBox[
    "\"CO\\!\\(\\*StyleBox[\\\"2\\\",FontSize->7]\\) (ppm)\"", 
     TraditionalForm]},
  AxesOrigin->{0., 385.34777777777776`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{All, 56.40000224979459}, {All, All}},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox[
    "\"Annual Average Effects CO\\!\\(\\*StyleBox[\\\"2\\\",FontSize->7]\\) \
(ppm)\"", 16, StripOnInput -> False], TraditionalForm],
  PlotRange->{{0., 12.}, {385.34777777777776`, 417.31}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.08090169943749476]}},
  Ticks->{{{1, 
      FormBox["1", TraditionalForm]}, {2, 
      FormBox["2", TraditionalForm]}, {3, 
      FormBox["3", TraditionalForm]}, {4, 
      FormBox["4", TraditionalForm]}, {5, 
      FormBox["5", TraditionalForm]}, {6, 
      FormBox["6", TraditionalForm]}, {7, 
      FormBox["7", TraditionalForm]}, {8, 
      FormBox["8", TraditionalForm]}, {9, 
      FormBox["9", TraditionalForm]}, {10, 
      FormBox["10", TraditionalForm]}, {11, 
      FormBox["11", TraditionalForm]}, {12, 
      FormBox["12", TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{3.86786150804182*^9, 3.867861596054181*^9, 
  3.867909933653656*^9, 3.867909995079327*^9, 3.86791152082524*^9, 
  3.8679928614042177`*^9, 3.868012174719636*^9},
 CellLabel->
  "Out[807]=",ExpressionUUID->"4a5667f6-2650-44c0-a3b7-3ef421b28e91"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Standard deviation ", "Section",
 CellChangeTimes->{{3.867839489050651*^9, 3.867839489594721*^9}, {
  3.867840937986803*^9, 
  3.867840941398613*^9}},ExpressionUUID->"856187f6-904a-429f-b80d-\
283607feeb71"],

Cell["Create the upper and lower bounds. ", "Text",
 CellChangeTimes->{{3.867778373398355*^9, 
  3.867778384955905*^9}},ExpressionUUID->"d52ed9bc-bb71-4554-acfe-\
6d00a8d41f5a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Count", "[", 
  RowBox[{"sdev", ",", " ", 
   RowBox[{"-", "9.99"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sdev", " ", "=", " ", 
   RowBox[{"ReplaceAll", "[", 
    RowBox[{"sdev", ",", " ", 
     RowBox[{
      RowBox[{"-", "9.99"}], " ", "->", " ", "0"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.867839497963332*^9, 3.867839503585129*^9}},
 CellLabel->
  "In[808]:=",ExpressionUUID->"8449378d-90c7-4c65-942c-07dbdb4d86f5"],

Cell[BoxData["196"], "Output",
 CellChangeTimes->{{3.867839498375353*^9, 3.86783950443775*^9}, 
   3.867909933729557*^9, 3.8679099951892138`*^9, 3.867911520931185*^9, 
   3.867992861508353*^9, 3.868012174772696*^9},
 CellLabel->
  "Out[808]=",ExpressionUUID->"af8558e0-d499-4bfe-b262-386abd2f1e53"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"UB", " ", "=", " ", 
   RowBox[{"average", " ", "+", " ", "sdev"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LB", " ", "=", " ", 
   RowBox[{"average", " ", "-", " ", "sdev"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.867778332091045*^9, 3.867778405182919*^9}},
 CellLabel->
  "In[810]:=",ExpressionUUID->"eec35ede-3a0a-41f4-87b5-2a1f3e5f21a3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"summary", "[", "average", "]"}], "\[IndentingNewLine]", 
 RowBox[{"summary", "[", "UB", "]"}], "\[IndentingNewLine]", 
 RowBox[{"summary", "[", "LB", "]"}]}], "Input",
 CellChangeTimes->{{3.8677784082775707`*^9, 3.867778436216455*^9}},
 CellLabel->
  "In[812]:=",ExpressionUUID->"064d5668-391e-458c-b624-208f0b4e4b44"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "312.43`", ",", "329.56`", ",", "357.2782124352332`", ",", "382.02`", ",", 
   "420.99`"}], "}"}]], "Output",
 CellChangeTimes->{{3.867778399405788*^9, 3.8677784364921637`*^9}, 
   3.8678394069752293`*^9, 3.867839508138001*^9, 3.867909933764532*^9, 
   3.867909995232757*^9, 3.867911520970707*^9, 3.8679928615529823`*^9, 
   3.8680121748147173`*^9},
 CellLabel->
  "Out[812]=",ExpressionUUID->"81a56780-d607-45ff-a6e7-2cae6f2b1824"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "312.43`", ",", "329.69`", ",", "357.65097150259066`", ",", "382.4`", ",", 
   "421.75`"}], "}"}]], "Output",
 CellChangeTimes->{{3.867778399405788*^9, 3.8677784364921637`*^9}, 
   3.8678394069752293`*^9, 3.867839508138001*^9, 3.867909933764532*^9, 
   3.867909995232757*^9, 3.867911520970707*^9, 3.8679928615529823`*^9, 
   3.868012174818956*^9},
 CellLabel->
  "Out[813]=",ExpressionUUID->"bc01520a-e241-46c7-a363-dbcd08b12ac8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "312.43`", ",", "329.35`", ",", "356.9054533678757`", ",", "381.6`", ",", 
   "420.69`"}], "}"}]], "Output",
 CellChangeTimes->{{3.867778399405788*^9, 3.8677784364921637`*^9}, 
   3.8678394069752293`*^9, 3.867839508138001*^9, 3.867909933764532*^9, 
   3.867909995232757*^9, 3.867911520970707*^9, 3.8679928615529823`*^9, 
   3.868012174822241*^9},
 CellLabel->
  "Out[814]=",ExpressionUUID->"256e150c-b95d-4bf5-ae2e-e14b33026fc5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"deseasonalised", " ", "+", " ", "sdev"}], ",", "deseasonalised",
      ",", "  ", 
     RowBox[{"deseasonalised", " ", "-", " ", "sdev"}]}], "}"}], ",", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"tickList3", ",", " ", "Automatic"}], "}"}]}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Year\>\"", ",", " ", 
      "\"\<CO\!\(\*StyleBox[\"2\",FontSize->7]\) (ppm)\>\""}], "}"}]}], ",", 
   "   ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Upper Bound\>\"", ",", " ", "\"\<Deseasonalised\>\"", " ", ",", 
      " ", "\"\<Lower Bound\>\""}], "}"}]}], ",", " ", 
   RowBox[{"GridLines", "->", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8673991188295097`*^9, 3.867399348903163*^9}, {
  3.867399748942287*^9, 3.867399753084034*^9}, {3.8673998184886923`*^9, 
  3.8673999026146517`*^9}, {3.867400022301055*^9, 3.867400063779132*^9}, {
  3.867400096677001*^9, 3.8674001052947083`*^9}, {3.867909882928054*^9, 
  3.867909921868835*^9}, {3.8679100101360188`*^9, 3.8679100151604843`*^9}, {
  3.867910048446465*^9, 3.867910049892488*^9}, {3.867910088589201*^9, 
  3.867910145801461*^9}, {3.867910251651149*^9, 3.8679102520694313`*^9}, {
  3.867911288316723*^9, 3.86791132189863*^9}, {3.868012243315387*^9, 
  3.868012243738522*^9}},
 CellLabel->
  "In[838]:=",ExpressionUUID->"7e69a996-1a46-4696-b1fc-55703dc7e7f1"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxdmnt0XNV5xaeBNgayUoENuMR15BSIIJCqQIjLI1xDwAKMkfyU32O9rIdl
zeg5Gr3uvJWVlaI0i2KySKJV83BD4grSBtEAESYhJhAiSFdtSBtECcQUmohS
wNAEqvHev1kL6Z9ZW985Z3/729859869s6yuY03jRyKRyIknRCLFT/3NXjWw
6MDKF+/uCvyP4LG3Krbecj94QXDLwbl/3AsuC04+vC92ZSm+KDg+v4QXCx8E
LwleTM7941Fwudb/PvhTwcXFv++Bz9b8Uvzc4GdPzf1NgiuCt+emH3wYfH4w
Nzq5qDT+gnnrfza4M3blyYcfAFcGxeWTU+C/mrfeRcF5c/CtUvzioKoo4Enw
JdLzY/DnlO9PwZcGX7997q8U/3zQVPx7HLxcfKX4XyufH4EvUz1KfJcHr9dM
Ls39AnyF8GHwlcEceq3mCPgLQdGek0vjr1K+z4AD4Z8Zh4Hq9zTxFfL758RX
KF/GR67+8Hrh1UGxXBX/Svwa1f9Z4tco/u/Evyi+54kb/4r4tar/DPFrVb9S
/LpgTu3k0peJXyd/XyC+MojPwX3whSuVT2l+VfDJ4gLgsEr9/Arx67XeS8Sv
l7//SfwG1f83xG/Qer8lfqPG/xfxGxX/H+Kr5G9p/irV81XiN81b/yaNf434
avlbiq9WPUrzb9Z+mSV+s+r3NvFqjX/LOKieN34enqpWfUr516jfiAc1yvd3
zK+Rn4yfqpEfx5i/JlhTXKDEv0b+kF+4RnrfYf6aefmv1efvmb9W+YBDxyPd
nr9W67/H/HXC7zN/ner/LvPXyf8S/7p5/OvVnyX+9UFRXqw0f732M/Gp9arn
/zJ/g/T9H/M3aH8scL7hBvF9hPw3SN/HjCMbtR//2DjYKD7i4UatfwLzNyq/
k5hfq/39p8yvlf5TmV+r8aczv1brLWT+JvXPnzF/k/r9LOZvUv7gqU06Dxkf
2az9cBrzN2v9TzB/s+q7hPmb1T9nM3+L9P8587fofC7N36Lx5czfon5bxvyt
8n8p87dKL+uFW1Wfv2D+Vq0PjmxTv3+a+duk93zmb9PnBczfpnwqmL9dfoOD
7eoPcLhd+Z7H/O2qL+tHdmj/X8z8Hcr388zfofGXMn+H/Poc86PyG1we1ecl
rBfV+pcbR6PSexXrR9WPVxiPR+XXF+FzHDwTVf1Wwr9T+qvg36l+WAP/TvHd
DP9O1WM9/Dt1vqyGf6fquwr+nfKX+MxO7Y9q+OvkN+uV16mfNsFfp/2/Bf46
rUd+YZ3qvRH+OuWzGX7P3wF/nfp/J/z18qcO/nr1P+MDx7fDX6/zl/FhvfRE
4a/X+tvgr1c+G+Cv9zrwN0hvI/wN6t9W+BuUfxv8Dao/48MG9Qfx8QZ97oa/
Qf3WDn+D/Gd8pFG4A/5G6WuCv1F+dsPveCf8jdK3B/5G6emBv1H9lIS/UfkP
wd+k/s/B36T6F+Bv0nrEo03q11H4m9QPfwN/k/rhFvi9/lfhb5KevfDvUv99
A/5dqv/fw79L+r4N/y6dD/vh36X63gW/xzN/apf03Aa/x98Kf7PWG4e/WfUt
8Tdr/+2Dv1n7ucTfLP2MH28W3z3wN6sfvwu/xx+Av0X9dS/8Lep34kHLh+dH
W8T/T/C36LwBj7eIn/WmWoJi+q/dB39LkC/q/2f4W/19AP5WrTcJf6vq8xD8
rarvQfhbVc+H4Xf8Efhblf+D8LcGu4r+Eo+0qR+fgL9N/D+Cv031eBr+efGw
TfUgv/G2YKzYfz+Bv039x/ozberfp+DfrX48BP9uzX8S/t3anz+Hf3dQpJt8
Fv7dwfF2J79x41/B7/Vn4N+tev4a/nadHy/B3y4+cNAeFJc7+DL87ar3f8Pf
rvVfh79d9XwD/nb1w+/gb9d5eQz+Pdp/jC83fhf+PaoX46N7Pjw/3KP9+j78
e4JierkP4N8jfSf0mN/rnWgc6ZCfEePyDvUj44MOrQeOdgQPHr//Mw47VE/W
G+8Q30LjqY7g9OP3g/B7/VPgj6m/TjMui0nfIvKJaf0lxpUx3x+RX0zrfdK4
OqbzYyn5xqSv3DgWkx+fIf9Y8IXihHOMx8xXiZ6Y9s95xhMx6ftL9Jn/YuPp
mM6Xi9AbUz+sMJ6NqX/Akbj69TL0x1Xvy9Efl1/L0R+XnivQH9f616M/rvXB
0biuByvRH9f16Gr0x6X/WvTHdX5ch/649BOfiGt/3oj+uPxahf646leNfq+3
Bv1x+bMB/Z3Cm9HfqXw2ob9T+reiv1PrR9Hfqf1HvLpT+e1Af6c+G9Dfqf1S
h/5OnV/ExzpVf+aPez58E526HtWjv1PX5xb0d/p+Bf2d8iOO/k6dL33o75Le
fvR3qV5p9HfJ3y+hv0v9n0J/l/xkfLW/x2XR7/k59HdJ35fR36X9AB7rUn+N
or9L9QVPdMmPMfR3aX+Dp7uCYrvcfiv6vd5e9Hepfrehv1t+Ei/r1vg70N+t
/XE3+ruV/7fQ3y3+O9Hv8QfQ361+uBf93eq3b6PffPvR3639fQ/6Pf5+9Her
f8BT3cEpxTh8087ve+jv1nnwL+jvlh/3ob9H/n0f/T3iY/zcuXXcnx+gv0f9
Aw56tD8fRn+Pr+/o71E//hD9xr9Af4+f/6G/x9dr9Pf4eoz+HuX/DPp7VL+n
0O/1GT/To/45gv4enUeH0d8bFMt9GFzW6+dd6O/V51H09yqf36C/V/m8jP5e
1Z94tFf7hXis18+v0N+r/I+hv9fPb9Df6+sv+nu1X99Ff6/q/wf098q/k533
TK/2M3i2V/6AI326/n3cuKwvKA4/cIpxeZ/mE6/sU3+eaRz06Xw51bja408z
jvap/ouNY33St8g47FM/sd6Yxy8xHu/z8wnjiT5fT42n+rTfiE97PvEZ53cO
+vt0P7wM/Qnt30r0J+TXhehPiO9s9Ht8BfoTuh88F/0J6b8I/QmdL5egPyE9
l6I/4es3+j2f+HjCzxfQn5Be4lMJ+XkZ+hO6P6pCf8LPA9Cf8PUa/f3y/2r0
9+t8AZf3K7+r0N8v/QH6+9UPxKv7fb+B/n7dv16L/n6dV6vR7/Wq0d+vfq5B
f39QpN9HfKJf+2Ed+vvlTy36+7W/16K/X/oZP9uv/bMe/UnxEy9Lql9uQv88
XJn0/QL6kx/Ovzqp/DehP6nzhXxiSfUX8TDp+w30J1V/1h9PSl8U/Un5UY/+
pPzfjv6k+gM8k9R5w/jZpM7XFvQPqF5t6B/QfuxC/4DyjaN/QH7E0D8gv9vR
P6Dvlz3oH9D1dgD9A6rfMPoHlC94bEB6s+gf0P7Ko38g+Mfi/gBPDfj+Af0D
qt/fot/r/x36PR8cGZRft6J/UOf7begf1H78OvqN70b/oO4/70D/oPz5FvoH
1R/j6B/U9e4u9A9qv06gf9Df59E/KL/+Af2DOk++g/5Bvy9Ev+PMnxmUPw+i
f1D1fwT9Q9q/D6B/SH6By4fUn8yvHAqSx99Hon9I59MU+ofkF/HokN/noX/I
7//QP6T9+RD6h1T/x9A/JD2H0D+kfv0J+od0v/cE+p3PNPqt75foH1I9nkP/
sN+HoX9YfEfRb/w6+of9Pgb9w1r/TfQbf4D+YfUDODasfnwf/cPy94/6rN/r
M37c+f2J4xPD6teTjKeGff02nna+ZcYzw6rvIuPZYdWf8ZERfx82LhtR/y02
Lh/Rect6lSOqLzgY8fsS4+oR9Tc4OqJ+WmgcM/6EcWh8JvpH5D/xcfOVo39E
+Z+B/hGdf0vRP6L72bPQP+L3Jegf0Xl+IfpD+fUZ4wWh9usF1CP0/YDx4tDf
r6lPqHotN64IlS+4MpQf4OWh9js4CJUfuCqU/5dTz9DXX+PaUP6voL6hr9/G
zc4PHAt1/VlpnAi9LvUPVb81xqOhzv+1+BFq/9cY77WeWvwJtd+3G+93PIpf
ofZno/Gk6xvDP+ffanzI+jvw0/FO4yOh+q0Hf0OdLwnjo6H2dz9+h+pH8LHQ
z6/xP6X8voT/KfXHV/E/Jf+/gv8p+TuG/yndL9+C/yn10234n1K+t+J/ytcj
/E9J3zfxPyW/9uG/87kL/1PqnzvxP6X+Gcf/lPTfjv/Wx/xEytcf/He+8I06
fh/+m+87+O/x9+J/Krjk+PdD/Pf8J/A/pfvtH+N/Sv37KP6nfH3A/5Sfz+J/
SterZ/E/pfP/SfxP6Tz4Kf7PGz9rfw7jv+PP439a/r6I/2nV7z/wP618X8X/
tPI7iv9p6X0Z/9M6f17B/7T272v4n1Y9X8f/tM6PWfxPqz9+i/9pfZ98E//T
yv89/E9rP819jzmOm9Paf7/H/7TqdYrjibTfhxuHae33jxqPpuUv48dcn5OM
91p/mfF4WufNx433m2+h8YT1nGE86XouM55Ky/8lxofSun883Xg6LX+XGh8x
/9nGM673p4yPpl1349m0vm+cb3wsrf1LPJLRehcYL8jo/u6zxmUZ5Q9enPH3
NePyjL/fGVdkdD27xrgyo8/AeLnxFcZBRv4Tr8rovFhhXJ1Rf11vXJuR36uM
oxn5BV9zRuf5DcaxjN//4n9G50Ut/nu93fjv+XvwP6N6Ed+b0fnUhv8Z9XMz
/nt+E/5ntJ9a8N+4Hf9dzw78d769+O/1u/E/o/Mwhf8ZP7/Ef6+XwX/XN4H/
GT+vxP+sn2fif9bvL/E/q/uRAv5n/b4T/7P+/oH/WfUr8cqs9tfX8N9838D/
rPbz3fif9fmN/1lfD/Df64GjWZ0P4Oas9LFezOsfwH/nfz/+m++7+J/VfnwI
/12PH+B/Vv39GP5n1f9P4b/ngyey2k+P439W+20a/53P0/jvfJ/Hf+v7Jf5n
5fdz+O/5/4b/WV2PXsB/8/0a/12/l/A/J32MX2D8Jv7n/Pst/M+p/97A/5z6
4x38z6n/38b/nK6/b+G/4+/hf079eWK/cFVO+/0P+J/z/b/jtTnV/6PG0Zz6
jXhzTv2/0DjmfE83TuR8/24c5uT/qcajOf9+yXgsp/NhifHenD7B4zn1/6eN
95vvQuOJnM7fS40nc/Kj0njKuMr4UM7ve4ynXZ+txkdcj9XGMzmdf2uNj1pP
jfFsLthWXL/a+FjOz4OMI3npqzVekJefu4zL8qoX/Ivzqn+bcbnjzcYVeZ3f
cePKvJ+nGC/PK98O48DrEa/K+/7VuDqv/kvif175J/Df+YOb8zovB/E/r/2Y
xX+vn8N/r5/G/7z6/8v4nw+Ob+9R/M9r/30F/12vr+G/x4/hf96/v8D/vPy+
A//N/038z/v5Bv7n1c/34H9e59sj+J/XeXEQ/13/h/Hf9X0A/41/iP8F6XkU
/wta/3H8Lzgv/C/oPHoS/wvqR8ZXFPx7APwv6PnnM/hfEP8L+F/QfnkR/wu6
PjyH/wXtx1fwvyC/j+J/QefFq/hf8O8B8L/g36fiv/N9G/8Lut96A/8L8v8D
/C/oPH0H/53fu/hf0P78WFJ4v/MrM54oyL8zjScLfh9hPOV6nWZ8qKD+WWQ8
bf3Ej9gf8IzXO8v4aEHn6xnGs9a71PiY61NhHBn1/ZzxglH5tcy4bFTzzzVe
PKp6n2NcbnxhMvh/iQBtdg==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxdmnt43HWZxWcLPoaCEAS0ImBUhICo4WItSuHHrRegkKa0Te+Ta5MmaSb3
ZHL7zTXxsrZdFAOyOtpl6YJo8ALxwuO0FbaC7Ja1SldZDLhoBZGgolUQTTjn
M8/D9J95Tt/v9z3vec/7/c5vZvLu2vaqhnmRSOTYYyKRuVf9m7li8NSvLn36
37sC/0ew/+XyjTu+Di4Jduyb/Y97wKXB/Cd2xxYX4qcGr+8v4AXC+8BnBE/H
Z/9jL7hM+e8Hvye4eO7fN8Bna38hfk7w2I9m/02By4M/zW7f9yD4/GB2dfzU
wvoLivJ/MPi32OL5TzwArgjm0sfz4AuL8l0UnDcLXy7ELw6WzQl4FHyJ9DwE
/rDqfQS8MLj9ttl/hfhHgsa5fw+DF4mvEL9U9fwA/FH1o8D3seC3K6fOyvwY
fJnwE+DFwSx6fuVh8OXBnD3zC+uvUL2PgwPhx4zDQP37L+JXyu//Jn6l6mV9
5Ko35guvCubaVX6I+NXq//8Qv1rxJ4lfI76fETd+ivi16v808WvVv0J8STCr
duqsZ4kvkb+/IL406JiFu+ELl6qewv5lwbvmEoDDZZrnXxFfrny/JL5c/j5D
/Dr1/9fEr1O+3xG/XuufI3694r8nfoP8Ley/Qf38DfEVRflXaP3zxG+Uv4X4
jepHYf9NOi8zxG9S//5EvFLrXzYOKovWF+F8pfpTqH+l5o14sFL1vsj+lfKT
9fmV8uMo+6uCqrkEBf4q+UN9YZX0/pn9VUX1r9Lrq+xfpXrAoeORbu9fpfx/
Zf/Nwq+x/2b1/y/sv1n+F/hvLuJfrfks8K8O5uTFCvtX6zwTz69WP//I/jXS
9wr71+h8lLjecI345lH/Guk7wTiyVufxTcbBWvERD9cq/zHsX6v6jmN/tc73
Seyvlv6T2V+t9aexv1r5TmH/Os3PO9i/TvN+OvvXqX5wfp3uQ9ZH1us8vJX9
65X/nexfr/6ewf71mp+z2b9B+s9k/wbdz4X9G7S+jP0bNG/vZv9G+X8W+zdK
L/nCjerPe9m/UfnBkU2a93PZv0l6z2f/Jr1ewP5Nqqec/ZvlNzjYrPkAh5tV
73ns36z+kj+yRef/YvZvUb0fYf8WrV/I/i3y68Psj8pvcFlUr5eQL6r8HzOO
RqX3CvJHNY+XGeei8usa+BwHT0fVv6Xw10j/MvhrNA9V8NeI7yb4a9SP1fDX
6H65Ef4a9fcG+GvkL/HpGp2PSvhr5Tf5ymo1T+vgr9X53wB/rfJRX1irfq+F
v1b1rIff+7fAX6v5r4G/Tv7Uwl+n+Wd94Phm+Ot0/7I+rJOeKPx1yr8J/jrV
swb+OueBv156G+Cv1/xug79e9bfAX6/+sz6s13wQz9XrtRX+es1bG/z18p/1
kQbhdvgbpK8R/gb52Q2/453wN0jfdvgbpKcH/gbNUxz+BtU/DH+j5j8Df6P6
PwZ/o/IRjzZqXsfhb9Q8fBr+Rs3DDvidfxf8jdIzAf9Wzd+/wr9V/f8y/Ful
7274t+p+2AP/VvX3Tvi9nv35rdLzOfi9/rPwNylfDv4m9bfA36Tztxv+JukD
h03Scwf8RfG849Q73aR5uQv+Zt0PxMua9QoOmnWfgKPN6te98Ddr3sG5ZvlL
P/LNOh8F/mbp+Rr82+TnJPzb5Pd98G+Tf9+Cf5v4vg2/14Nz29RfcL5o/fQ2
zeN34G+RX/vgb1G/vgd/i+aLeLRFr8TDFvVnCv4W6dsPf4vq2Qt/EY60av33
4W/15xX4jX8If6v8+hH8rcpHPNeq+f0p/K3Scxj+Vj+fw9/m53P427wO/jY/
78Pfpn4/C7/XH4G/TfP1PPxtmpffwN8mv2fg3/7GeNl2vRIPtkvfS/AX4dD7
/wL/dtX7V/i3ax7/Bv928R+Fv139fwX+dvXn7/C36zy+Br/XH9Nj/nbnMc61
ax5KjPPt6tc/GU87P/sjMc33W4xLY+rf8cZlMT/vGVc4Dg5ifv4zroypH+Co
859pHItp3t9D/THNF/GdMT8PoScmPWcbT8bU33PQ5/0fMD7o9eyfdn0XGs+Y
fyH6O5QPXNrh5yf0d6ieS9DfofPL+qDDz0Po75D+K9Hf4XXo79D7HevDDt2/
xHc6/+Xo79D8LEZ/h+6Dq9DfoflYgv4O+Xs9+jvUnxXod30r0d8p/VXo79Tz
Bris089H6Hd8Pfo7Ve8a9Hf6+Qn9naqP9bFO+VON/k7dJxvR36l5YX+uU/O3
Af2demV9vlN669Bv/k3o79T934r+TvnVjv4uP1+gv0v19aO/S/WPoL9L/RhA
f5f4htHfpX6wPtol/xLo79I8ZtDfpXnMor9L85ZGv+sbR7/5P47+Lun5JPq7
1M+d6Hd9u9Dvz5mfQn+3zvMt6O/WPNyK/m7V9wX0d4v/NvR3ax6Jzz5Xv67v
P9Dfrfn7Evqd78vo7/bzBfq75T/rc0X5Jh0H550ffNDr70V/t/o3if5u+fsV
9Pf4eQD9PeoHuKxH+b6F/h75ez/6e/z+jv4ef1+J/h75OYX+HvnxQ/T3qL48
+nv8/R/6vf4h9Peo34+gv0f3yX7092heH0a/9z+G/h759zj6e8V3CP29qvcw
+ns1Dz9Df6/0/h/6e3Vf/gL9veJ/Bv1FONar8/pr9Bu/iP4inHN9M+jvlV9/
QH+v7s+j6He983qt33oixjO98od4pE/n8zjj0j7xlRiX9ek8gSv6VN9JxkGf
3y+NK/vUH/JF+zQ/JxvHnP8E47BP81hqvLNP5+Ntxrk+1QuedL2nGeed/x3G
B73+dPT3+fsM9Jv/DPT3K9/70N8vvWejv1/9Y31Fv7//QL/Xl6G/X/0hHu33
9xXo71e/3o9+4w+h3+svQr/5L0F/v/z9IPr7Nd8Xor9f5+ky9Pern1ehv1/+
XIn+AcUvR/+Av+9A/4DWX4r+AZ2/j6K/aH3lgN+v0T+g/gToH1B916B/QPO8
FP2uZwn6B/z9CPqdD5wfkP8r0T+g+3E5+gd0X12H/gH161r0x8V/Pfrj/n4G
/XG9wlcR17xWoj8uPcQr4/4+Bv1x3Q/kj8V1H1ShP655WYX+uPq3Av1x9Xct
+uPqRzX6437eQH9c87Ee/XHp34x+66lH/6Dqq0P/oPxtRP+gzk8z+otwMKj+
gyu9fzv6B/18gf5B9Q8cDqpfcfQP6j4bQr/rG0W/84+gf1DnJYn+QfUvg/5B
9etT6B/08wL6h+T3DvQPad53oX9I+T+N/iE9j30e/UOaxwn0D+n1DvQPqf+3
o998X0T/kOq5C/1Dmo+70T+k+WD9pPfvRv+Q3+/R7/jX0D+k/n4d/c4Pjgyr
X/ehf9i/X6J/WPm+gf5h3Z+T6B/WvN2P/mH1g3h0WPU9iH7zgcNhf35H/7D0
fhf95v8++od1vtmfdz0/QP+w5uVR9Dt+CP3D/j0Q/SOaT+KlI+L7OfpH5N8z
6B/x71noH9E8vIh+5/sj+kfE9wr6R/z5F/0j6s/f0O98rM+N6DzMvk9L/4j8
nGecH5HeNxsfHPHnW+PpEb+/G8+MqN/HGkdGlR9cOip9JxqXjYpvvnHFqPrJ
+sD7TzCuHNV99BbjaFG+2KjqO8U4ND7JeGdRPDeq/r0d/aPSQ/78qO6D09Fv
/tPQ7/Vnon9U/ToX/aH8Pce4JJT/xEvDN65fEOp+OI/+hPLrQ8blofpbQb9C
6SG+KPT7Nf0z/0XGy0LNN/HKUOd1oXG1919Kf13PYuMm57ucfof+PG7cb31L
6b/rA487/3L8CP3+Zjzh/Tfhj/uz1niP61+HX+7PBuMp56vHP/cranwg1P3R
hJ+h7scW48Ohv0/HX+dvNz5iPeAZ4y7jo65/EP8Tqj+F/wm/f+B/QvWk8T+h
++4T+F+EyxPi24H/Cb9/4L/5iAcJf/7Ef+e7Ff8TOl934H9C8347/ifUj9vw
3/Xvwn/n+wL+F+ULE/YR/13/XfifUL/AE85/J/4nNH/34X9CfjyA/wnN34P4
7/zE865/L/4ndN88jP8Jf17Ef+ffj/+u/wD+u5+P4r/5H8f/hObzJ/ifFP5f
/E+qHuKlSfE/jf9J/z0G/ifl71P4n1Q/WF+R1Pz8P/47/iz+J+Xnc/jv9Ufw
P6n6X8D/pPrzO/xP+vMg/if99xX4n1S//o7/rv8o/hvPfg56HY8n9Xqs8c6i
/RNeX+J4zvzHG+9Jat5ONJ50P082nkrq/C8wzjv/KcYHivIdTOq8gA8n5e87
jafd/9ONjzh/mfFMUvP7LuOjXn++cSSleTzXuCSlfp9nXJrS/cv6BSnNwweM
y1LqxwXG5SnxLzKuSKkfFxkvMt/FxkHK37caL0v592TjSq+/wrg6pf5cbRxN
+fObcZPru9Y4llK/lhr3p3R+lxuHzrcW/1P+/RT/vb7GeML9Aee8Hrwn5d9r
8d/66vA/pXlowH/zt+C/9bbjf0r3VSv+W08X/ru+Dvx3/7rxP6Xz3Yb/zs/+
SFr+xvE/rdc0/qflZ4j/aen9OP6n9Tw0jv/O9wn8T8uPf8b/tPTvwv+05v8W
/E/7/QP/05qf2/E/rXn+PP6n5T/xprT68SX8N74T/53/Hvx3vXfjv/V/E//T
6id4wvm+jf+uZz/+W99e/Hf/vof/5nsE/73/P/Hf+R/Hf/Mfwn/X/2P8d73E
j9ifn+C//XkS/73/5/ifUf+fwP+M+J/F/4z6+xz+Z3Tej+B/Rnwv4b/xC/if
8e9l+J/RPICDjP/eCv8z/nsr/Dffq/if0f3+Gv5n/Pde+J/x72MDwrGMPx8Y
91vv8cZhRvM133jc9Z1svDMj/0qNJzL+Ps44l5GfZxnvcf3vNZ50Pe83njL/
ucZ58y80PmC+RcYHre8G48MZvV8uMZ7O6D5abnzE/FcbzxStP2p/VhhHspq/
VcYlWf+9i3FpVv6sNl6QVX1R47Ks/NloXJ7VfUW8Iuu/FzFeVISDrPq5zXhZ
Vp8PY8aVzt9tXJ2V/53GUdffZdyU9d9/4H9W/g/if1bzOIz/Xj+A/+YL8T8r
f+L4b75R/M/6PsT/rH+fwX/X+y/47/yfwX/jCfx3/3fjv/EX8T8rP+/G/6x5
8N9678F/9/te/M9qHh/A/zHp+S7+j/n3DPwfU/378H9M+h7Cf6/fi/9j8u8A
/o/5+wj8H/P9hf9jul9+iv/efwj/xzT/T+K/63kK/42fwX/n/yX+e/9v8d/1
voT/xi/g/5j8/j3+uz8v4n9RPDem8/Aq/rueef6ecXJM/X+T8ZTzvYL/1lvi
+AH39zjjg+7fm40Pu18nGk+P6X4/1fiI6yk1nhnzfWV8dMx/T2kcGdd5eJ9x
ybjO+2nGpeNav8B4wbj/ftO4zPHyePAPPntD8Q==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxdmnuUnHV9xgeEdglaFiEavMRBI4RL29UQCCSQF9QQIIRNyP06u9nd7GZv
s/fZ2ds791WPsh5UElrotok0XoBYQCPW43Cxh0rAUDkltRzcAEIk0K41wUgq
7U6e5zPnsPvPnGe/v+/l+T7f3+99533nwtr2lfWnRyKRM94XiZQ+9Te5eOD8
B248fF9X4H8ETxyfu+mOfwJXBHc8PvWP74Irgxkv7I5fW7afH5zyL+NZwo+D
PxYcTk794zFwVPF/AP5kMK/09xB4jvzL9ouCZw5M/e0Hzw3ennJ//CfgS4Op
1cnzy+svnxb/r4I98WtnvPBDcFVQCp8sgj8zLd5ng0um4PGyfV6wtETgafAV
4vMz8HzV+3PwlcHdu6b+yvargobS37+AFyhf2X616nkSfI36Uc63MHhzxf7Z
uV+CFwm/AL42mEJHVxwCXxeU5JlRXr9Y9T4HDoSfMQ4D9e9Z7NdL719gv171
sj5yw3vjhTcEpXbNfR7759T/f8P+OdlfxP555fsVduOXsH9B/Z/A/gX1r2xf
Ekyx3T/7N9iXSN9fY78x6JiCu8kX3qh6yv5Lg0+UAoDDpZrn17DfpHivYL9J
+r6M/Wb1/3XsNyvef2G/RevfwH6L7P+DfZn0LfsvUz9/i/3WafFv1fqj2JdL
37J9ufpR9r9N+2US+23q39vYq7X+uHFQPW39NFysVn/K9a/QvGEPVqje/8Z/
hfRkfXGF9DiB/8pgZSlAOf9K6UN94Urx/QP+K6fVf7s+/xf/21UPOLQ90m3/
2xX/HfxXCb+L/yr1/4/4r5L+5fyrpuVfrfks518dlOjFy/6rtZ+xF1ern8fw
XyN+J/Ffo/1R4XrDNcp3OvWvEb/3G0fWaj+eaRysVT7s4VrFfx/+a1XfWfiv
0/4+B/914n8u/uu0fib+6xTvPPzXa34uwH+95v0j+K9X/eDiep2HrI9s0H74
IP4bFP+j+G9Qfz+G/wbNzxz8N4r/x/HfqPO57L9R66P4b9S8XYj/Juk/G/9N
4ku8cJP68yn8Nyk+OLJZ834x/pvF91L8N+vzcvw3q565+G+R3uBgi+YDHG5R
vZfgv0X9JX5kq/b/PPy3qt6r8N+q9Vfiv1V6zcc/Jr3B0Zg+ryBeTPEXGsdi
4ruY+DHN4yLj8Zj0+jz5bAdPxNS/G8lfI/5LyV+jeVhJ/hrlu438NerHavLX
6HxZTv4a9XcZ+WukL/aJGu2PavLXSm/iRWs1T+vJX6v9v5H8tYpHfWGt+r2W
/LWqZwP57b+V/LWa/xryb5M+teTfpvlnfWD7FvJv0/nL+nCb+MTIv03xN5N/
m+pZQ/5tjkP+OvGtJ3+d5ncH+etUfzP569R/1od1mg/s43X6bCF/neatlfx1
0p/1kXrhdvLXi18D+eulZzf5be8kf734tZG/Xnx6yF+veUqSv171D5G/QfOf
I3+D+l8gf4PiYY81aF5Hyd+gefgq+Rs0D3eQ3/G/Rv4G8dlJ/u2av3vIv139
/wfybxe/75B/u86HveTfrv5+i/xej39xu/jcRX6v/wb5GxVvnPyN6m85f6P2
327yN6q+e8nfqP5+k/yNQSl87u/I3yh98Z+YZo80BaX0B/aQv0n1/T35m3R+
YI81Bafaex/5m4KzS/WCx5vUX/gUmzSf5Jtokv7fJv8O7R/6Gd0hPel3sCMo
wcfvJ/+OIF+q7/vk3xFsL/XjB+Tfofl4mPw7tB9/RP4dqueH5G9Wvx8lf3Pw
oxJf/INm8SN+rFn+D5G/WfEfIX+z+v1T8jfrPN5P/mZ/PyJ/y3vrj7Zov+Mf
tEj/J8jfov79jPwtyod9vEV8niV/i/Q4SP4WnWe/In+r+P07+Vul94vkbxXf
F8jfqnpfIn+r9tsr5G9V/18lf2tQovsA9olW8Xud/G3af4fJ3yb9XyN/m/r1
BvnbdB78lvxtmp9j5G/Tfj9O/jbtrxPkb1N9b5K/PXiwFP9t8rervpPkb5d+
+Mfatd/eIX+77x/J367+vkv+dvXvD+SfFj8SV3/+vEe4Mq55Os04Gg9KcNdZ
xlVx6VlhHMR1HnzQuDoelMLvPt84Zv8LjONx8ZllHMbVz5nGY3GdD58wHo9r
HqLG++Lajx83LsaDsZL+FxsfjGse8J+Y5j8ZVz8uM450aF4/C/8O9XMe/Duk
VxX8O4KZJb3BQYfOg/nw71B9V8O/Q/1aAH/jRfB3fPBYh/hcBX/XdyX8O9Qv
4hc7XAf8O6T/Evi7vpvg3yF9lsG/U+fpzfDvVL+wRzuDEty/HP6d0m8V/Ds1
39Xw7xQf7LFO32/Bv9P3c/B3PtaPdUqf2+HfqflaA3/HY32xU+fRZvh36jwi
/kRncOr42A7/TvUXHOnSfmiH/zQc7VJ/OuHfpfOiA/5d4p+Af1dwXcneD/8u
32/Av0v7dxj+XepnCP8uze8I/Ls0L6Pw75Ieafh36bzKw79L/fsy/G3/Evy7
1D/yTX0vPnVefQX+3erXHfDv1nnwDfh3q7474d/t+xn4d/t6D/9u9fMu+Her
H7vg363z7174d2v//w38Odfg3635Ahe71b898O9Wf++D/zQ86Xh74d+j6y24
skf1Uv/UuXGqnw/Cv0f77/vw7/H1F/496g/rYz3q9z749/j6DP8e7Ycfw79H
5zH2KZ6n+Bbh3xNcUTqenoB/j66Hj8K/R/ub9RM9fv4K/x7192n49+p+6zn4
96reA/Dv1f0ZuKpX/fkl/G0/BP9e6fEi/HvVv1/Dv1fn56vw75U+r8G/V/vz
Ffg7/hH496rfb8G/V5/H4N+r/foO/Ht1fr4N/17pcxL+far3DMep7NN+ONM4
2qd4pxtX9fn6ZxxM86/u03l7mnGsz9dP43if9GF92Kf6ZhiP9Umfc4zH+3Q9
Au/rk56sL/Zpns4zPtgnPWcaT/TpegSe7JMeHzaOJNSPj8I/4ecv8Led+FUJ
5Z8N/4T28wXwT0gf8sUS6k8U/glf3+GfEP9L4Z8Qn7+Gf0Kfl8Pf6y+Cf0J8
L4G/81XB3/mugn8ieLmk79Xw75fe4Mp+5Z8H/37NI7iqX/pfAf9+9ZP41f3q
B/Fi/erXNfD3+oXw79f5fB38+zVvrB93PYvh36/9uQj+rv8m+PdLP9ZP9Ov6
FMC/X/ezV8I/qfw3wD+p+3FwNKn6wVVJP7+Bf/K98auTqp/1sWn+8aT43wL/
pPRcDv+krp/Xwz8pfW+Ff1L8l8Hf9tXwd7w18DefDfBP6rzZAv8BzfdG+A8o
/3r4D+h6XwP/AT9/gf+A7l/q4D+gz0b4D+h60Qr/AT//gP+A9ksP/Af8vAP+
jpeA/4D61wf/AemXhL/r74e/86fgP+D7DfgPyv5F+A/qfP8y/AdVbwb+g+I7
Bv9BXZ++Dn/jnfAfVD7s8UHx3QX/QelxL/wH/XwA/oO6vn0T/oPiezf8B9WP
f4S/7d+B/6D0Ak8a3wf/Ic3v9+A/JPsD8B/Sfr4f/kN+HgP/Ic0j/tVe/234
D6m/j8B/SPqAwyHtX/DYkPr7MPyH/P4S/kN+Pwr/Ic3vT+E/5PeL8B8KSu08
+gz8h6TPAfgPq/8/h/+w8j0L/2HN4yH42/4S/IeV/yj8h7Xf3oD/sK+/8B9W
P34H/2F/v4X/sN/3wH9Y+p6E/7Cv7/Af1v3q/8F/WOcN+SYcD/vksO63iBcZ
UT1/gv+I5uGMPvMf0Se4akTXb+oNRnT/WGF7teOdZRwb8fXdOD6i/r/fODTG
f2zE73eMxx3vA8b7RjQ/ZxoXR6Tfh4wPuv5K44kR8f+w8eSI7kcuNI6E2l+f
NK4I1T9wZaj5ZP2s0O9T6E+o8/HTxnND7e9L6JfjXWS8IFQ9lxkHoeq93Hhp
qHm6mH6G6jf2daH212fob6j+LzBudL5r6Hfo661xItT1fDH9N79rjUdDnX/Y
x6bhnaHmfwn6hK7TeG+o+60V6GV+2Pcbr0M/17fW+Cn3swY9w2BzqSF1xodC
7RfwhPtRb3wk9PN89La91fhEqO8P7eif0vVzCP1Tfl6O/inpNYD+KZ13WfS3
fw79U/6+iv4p3e+DF6T8/Bz9Hb+A/inxw15t/6+jf0r9G0P/lOb5a+ifEt8v
or/j34X+Kel5J/o739+iv/3vQf+U9NmN/s4/jv4pfe5F/5TmdQ/6O/7D6J/S
9eMB9E/59ybo73hF9E/pfvUx9Hc9P0b/lH9fgv7m9wT6m//T6J/S+XIQ/dP+
/of+adkPoH9a/fgP9E+rXnA07brQPy29XkT/tL6/gRektT9fQv+05vtV9E+r
Py+jf1rnwevo73oOo3/az2vRP635O4L+afXr9+if9u8z0D+t8/kd9E/7fT76
Gx9Df/M/zd9Lxs23wnhv2u/Xjfeldf90tvF+43OMi+bD+qeMiX/QepxAf9vP
tX3C/M4zPpLWvGCftL4zjU+kdf34tHEko+vhp4wrMtJrjnFlRvlYPyuj+i82
jmYUH/vcjPrzl8ZV0+ItsP9lxkFG5yXrl2b8/tq42vnnG6/LSO9rjGPOf7Vx
o/H1xvGM7icXGycy2g8LjUPHu8F4NKP9vcx4zP1Za7wz4/Ma/TOa5w3o7/qx
7zP/TeifkZ7gYkbn8Xb0d/1N6J/R9ane+FDG5z/6Z/y+Fv2dD/tkRudjDfpP
849kxacL/bPaPwn0z6r//ehvexb9s9Ivh/5Z7d88+md1HhXQP6v+4h9kdT0I
0T/r963on1W9Y+if1fzcif6uB3tjVv27B/2zOh/BCdu/hf5Zv09E/6z0/i76
Z9X/+9E/K/32oX9W8/Mo+rv+R9A/K30fQn/7P4n+7kcR/V3vv6K/630G/bN+
v4b+WZ03z6F/Vp8H0D+reXge/W0HR3LS/xfon9N5dgj9cz6P0T+neifQPyd9
j6K/7a+if076vIn+Of8+Df1zms+30D+nefsd+ue0n36P/rYfR/+cf4+G/jn1
m/Vxx/8j+pvPn/ULh7mgJO/h041HXW+F8Zj5nGG8Myd9zzUez2k+ZhrvzWke
PmK8z/5R4/2ud7ZxMaf7hTnGT+V8PhofzOl58ELjQ45/nfFETt9/FhsfcX3z
jSdz2j+LjE/Yf4lxJK/za7lxRV7zWW1cmffzGeNZecVfbRzNa15XGM/N634c
/6q89vc64wV59WOTceD4tcZL8zrPGoyr834fY7zO/i3GMdffZtyY1/nO+rjj
dxonzK8b/fO6Hnagf1796UX/vD7JtzOv+WP9uOsbQf+85iuN/nl9H/4q+rt/
X0F/+9+J/uZzN/rbfhf65/08BP0d7x70z+s82IX+5rsH/fM63x5E/4L4PIL+
Be3/76F/Qf35CfoX/LwB/QvaL/+M/gXV8xj6FzR/T6J/QfPwFPoXdP48jf4F
8X8W/Qu6vjyH/o73PPoXtF/+E/0dDxwviP8R9He9b6J/we/30b+g/v0G/V0v
/jvN/yj6FzTvxNvr+o6hf0Gf4P0F3Z+9hf7u15/Q3/W8i/4F7e+T6O/6zkoK
TxR0fv2F8RH3b4bxZMHvD4xPFPz7TuPIqPbbh4wrRrW/KowrR8X3bONZo5qH
DxhHR9WfOcng/wEKX3IU
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Year\"", TraditionalForm], 
       FormBox[
       "\"CO\\!\\(\\*StyleBox[\\\"2\\\",FontSize->7]\\) (ppm)\"", 
        TraditionalForm]}, AxesOrigin -> {0., 308.6072222222223}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{205, 385, 565, 745}, Automatic}, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 772.}, {308.6072222222223, 419.24}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {{{205, 
         FormBox["\"1975\"", TraditionalForm]}, {385, 
         FormBox["\"1990\"", TraditionalForm]}, {565, 
         FormBox["\"2005\"", TraditionalForm]}, {745, 
         FormBox["\"2020\"", TraditionalForm]}}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Upper Bound\"", "\"Deseasonalised\"", "\"Lower Bound\""},
       "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8679099119235888`*^9, 3.867909933837311*^9}, {
   3.867909995309263*^9, 3.8679100155820427`*^9}, 3.867910050623358*^9, 
   3.8679101130359707`*^9, 3.867910212324398*^9, 3.867910252713071*^9, {
   3.867911298824088*^9, 3.867911322330883*^9}, 3.867911521079955*^9, 
   3.8679928616807747`*^9, 3.8680121749339848`*^9, 3.86801224450511*^9},
 CellLabel->
  "Out[838]=",ExpressionUUID->"1543c731-1a3c-4546-89b7-ed0b31723984"]
}, Open  ]],

Cell["Let\[CloseCurlyQuote]s look at 2010 to 2020 only.", "Text",
 CellChangeTimes->{{3.867910492796599*^9, 
  3.867910498816113*^9}},ExpressionUUID->"e1e01663-ef28-42c4-8c1e-\
32589047116e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"UB10", " ", "=", " ", 
   RowBox[{"UB", "[", 
    RowBox[{"[", 
     RowBox[{"624", ";;", "755"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LB10", " ", "=", " ", 
   RowBox[{"LB", "[", 
    RowBox[{"[", 
     RowBox[{"624", ";;", "755"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"avg10", " ", "=", " ", 
   RowBox[{"average", "[", 
    RowBox[{"[", 
     RowBox[{"624", ";;", "755"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8679105104401703`*^9, 3.8679106212254267`*^9}},
 CellLabel->
  "In[816]:=",ExpressionUUID->"19eb544a-1f66-4d8b-80da-1b12d6cf455a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"tickList4", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"24", ",", " ", "\"\<2012\>\""}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"48", ",", " ", "\"\<2014\>\""}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"72", ",", " ", "\"\<2016\>\""}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"96", ",", " ", "\"\<2018\>\""}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"120", ",", " ", "\"\<2020\>\""}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.867910986416274*^9, 3.867911055991878*^9}, {
  3.867911094288445*^9, 3.867911147443589*^9}},
 CellLabel->
  "In[819]:=",ExpressionUUID->"94af6e4c-07c8-47fa-84f9-34a7d5f750cf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"UB10", ",", "avg10", ",", "  ", "LB10"}], "}"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Year\>\"", ",", " ", 
      "\"\<CO\!\(\*StyleBox[\"2\",FontSize->7]\) (ppm)\>\""}], "}"}]}], ",", 
   "   ", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Average Monthly \
\!\(\*StyleBox[\(CO\*StyleBox[\"2\",FontSize->7]\)]\) (ppm): 2010 - \
2020\>\""}], ",", "  ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Upper Bound\>\"", ",", " ", "\"\<Average\>\"", " ", ",", " ", 
      "\"\<Lower Bound\>\""}], "}"}]}], ",", " ", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"tickList4", ",", " ", "Automatic"}], "}"}]}], ",", " ", 
   RowBox[{"GridLines", "->", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.867910630403165*^9, 3.8679106799696302`*^9}, 
   3.867910730690106*^9, {3.867911231017853*^9, 3.8679112570956383`*^9}, {
   3.867911325988686*^9, 3.8679113269066973`*^9}, {3.8679115119150352`*^9, 
   3.867911598826005*^9}, {3.868012248923473*^9, 3.868012249410638*^9}},
 CellLabel->
  "In[839]:=",ExpressionUUID->"80871a02-0458-49c6-8b0b-df49efdbcd7d"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw9lVtIVFEYhYceIrTAwiBCJo0oKwlLy8zU3+t4d87c7w5CFyhqeoi8PORD
ShdBCwwsg8yoXhqDEJSQTEJ6sBtEGkSkIAj6YIU9BFFnu/aaA3JYZ82399r/
/vc2o/m848Q6i8VyxfxTbzwrxcvGqLWzvUX0B9nRuWSMdlFvECWtfdQpspoZ
6pm8R50qb6fNp5t6mwzb5tpSz1GnSW6O+TRSp4vpxm351DtF2TkF1LvkQmHS
zJCLerf0TpoznqLOlLgaP5Fvn4xZzYRXqbOgB6gPYD0PqLOlyBw+NkJ9UE6q
5xH1IWk3483dps7B+yx1rqh4MT/1Yfmt6uGmPiIPY+YvzlDnYbxE3qNY/yB1
vlSpD8+pj4kqd2dCF0C/pz6O8T5TF+L9hroIeZ5SF2O/blIL8nG/OwTvFvol
osobv0u/REx6NfMZ/VLUf4p+qfSr5wv9MnGYcZcW6JdhvF/0y0WVr3B9q/bL
kSfhV4haXtt38hWo9zj9SulSBWH9Oiplrwp4n74N/fKSvg35Z+lXyVY1/iL9
Ksy3TL8a743MVw0+XWtLDfZjD/0a9Gsa/Vqcl78cv1YUHprh+HUyr/b/Ff06
SVb1eEe/XlT5jK/067Hff+g3oF+SOX8D/C2cvxF5s+g3oh5l9O3Ib9Na7DJr
Tp+Ux9/bUQ+ud8Iud9T+cj0WA/s3r7UYOP8rzGugHzaRN5B3P+d3oF65nN+h
zw/nd6B/wuQdqM918k6c1y7yTpznVvJOrM9L3ol82eRduA+2k3eBzyDvQj1Y
nwkXzqtB3o38MfJu5L1I3o39v0bejf0eJO9BPzwm7wHfT94jarlJl8l7UO8A
eS/8YvJe8CXkvbJ2nwfJe5GH9bH4cN/eIO8TdfyGesn7ZGjtA3kf9nOEvB/1
fE3ej/4YI+/HfdNH3o+8l8gHRC2/p5l8AP16mnwA/d9NXusB8kHkTcwfRL6P
5IPI94l8EP0zTz6EflslH8L/i0XyIezvNPkQ8j0hH8Z+3CIfxv2TqF8Y92Oc
vNZT5CPotwXyEZy3FfIR7NcP8hHk3dym+Sb0r1VraULeFK07tP+TfBPG/8D5
o+jnca3TozifL5gnivvkm9ZR7S8xXxT9+69V/gPsglYb
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxdlV1IU3EYxocEWVdBo4REV0TZB2WZltnyVaf70OnOPnTfG8UMutEiQQ1i
VEYfkoRCWGCR0ceNdlPtImos6MqiukgLggojagYFFV1F5/D8n0EdkMOzZ7/3
fc/z/s9cva/HmyoymUwn9T/jjutb/eOfFdGR7n5RH4g3UzaU76MulvKhvJY5
S71MRnI6MEptlin7+0HzKeoS+bdeqRyyLp2ddFBbxGwAldRr5KjxQQ31WvR3
U6+T6716gQR1Be791Bvl6Yx+pak3Qw9Tb5HZSb3ARepKzHeDeptUGdcV6u2y
oOkDnKOuEv3ppuwp6h2Y309djfo+6hpxGMAB6p2yIaonVphvF/QYdS3yuUq9
WwzZe5u6Dvk+od6DvJ5RW/E8D6n3ov4t6nrUO0MtYqyzjPtNixhxa0foNyAP
7jfdgO8X5mnE8z+gr/Rz+k2Y5w39JjHaW7/Qt6GfaUD5Nsy7QL9ZDFkxR74Z
/D36LdjPZfot0m1cE/Tt8ktvn7tL3/7ffA7k/Y6+A/PM03di/j/0nZinRM1r
cuH8l3N+F/axgn4r6v0g3wr/Jeu3oX+Gfhv65ei78Tyv6Ltx/r7Tb0e9IvZv
x3kvZv8OvC+r6HfIpXH9qqbvQf1GpcWDPLfy+x4830qlsx7kWeiv4Ty8VVo0
9PvEeTU8/yLyGvZrYX8v3o9N7O/F3cb+XnzfQ96L+QfI+zD/MfI+9O8h78N5
d5L34TyvJ+9H/+Xk/dhHKXk/8qgj78f5c5EPII8U+QD2d5B8APX6yQdQb5R8
J+pNkO/Efi+QV7qPfCfyDpDvgq4lr7SVfBfy85Pvwr2XfBD5HScfxL5Okw8i
v3HyQeR3k3wIv3f3yYeQ/zT5EOqfJx9CPofJh3G+IuTDqLefvPJPkA9jvjHy
EbzPd8hH8P1H5CN4P3LkI9jHHPko9veVfBTzfSAfxb5YLxtFvWvkY/g9GCYf
w506HcP5Yl5ZpVnPFEf/1+TjyPsj+TjyzJOPI//Fg4pPYL9mpSWB92OJ0ukE
/n9+Jp9AXjPsn0SeGaUtSTwPtSTBv1A6qfx5zqf43wPyFx7FTZo=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxVlUtIlFEYhsVVaISBVIsyk8gpIkytLJv8vI53536/UWhFYLaJZiSaIE26
MCtJuxClBEGp2AWFFmJRLkzbGSHRBNrCFrmoRUX0n97zDvTDcHj/93/O+c73
fefMtqOn7e2ZGRkZl4yfGvF8q7g5aDy2c6JfSM+KbSKvnXqNTOYZbxLUObIz
mJz+3kedK4YyBS9Qb5KFoS5zVoR6s4xYUvHcKup8UXKkkLpAXhp4sph6u5So
x0K9QybU+l5qk9jVi5PUu0RNZ4lR74Y+T70H8V2lLpJ69cEN6r0YB6iLJaSA
9H5LROHJMHWpqPT0tFHvQ3xW6v3yVfnHqA8gH93UZXLGnLUwlM7fQfmX/+vU
hxDvXepyfP+C+rB0G9tLvaY2S68K6Bn1EVHlMQ1TV6CeF6lFOtTTqXVCpEvN
30W/UrYq4Ar9StTvPv0qUelNjdOvQrxv6FdLqarfPP1qeTtrPJ/o12D9n/Rr
MP8y/VoZVgGl+Vrkb5R+HerfT79OlL1wi74F+39E3yJq+dkZ+vWI5z39eny/
SL8B+Vyl3wA/J6b9RvTnRq0TjcjvevpN6I8V8k1yXO13jvM3Yxyj34x6Pqff
IkrG39FvwXn5Qr8V+UrnrxX1+kO/Df2XzfjakM9CxmfF+TBrLVaMJn5vFdUN
5nVaT1mR7yXOb8PI/IkN8X9kPDbU65fWUzbMt4Hr2xFvAde3wy/m+naMNVzf
jvvmBHkH+ucseQf4DvIO9GM5eYeo4zW4hbwT52kteSfyk66nE2MReSfqXU3e
hf36ybvQ7xHyLtwfjHfKJT+M62O6h7wb/dJP3o3z10fejf45Rd6N0Ureg3hK
yHtw/5SR9yA/reQ9iJf5yfAiHzHyXs2R96J+SfJenJcB8j70z0PyPvTjA/I+
8JfJ+2RU+Z3k/ThPTvJ+9FeIvB/xx8n7sb9r5APQt8kHkM/H5APolzHyAcQz
Tz6IeiyRD2J/i+SDOK/j5IO4n++QD2G/veRD/+83EZLPKj/3yGs9ST4Mfo58
GPv9QD6M/8Nl8mH0x2/yEdQ/O675CL7P1DoRQT5S5CO4T2bIR3E+nmidH8X8
TxlPFPl7pXVU++n8RFH/1Zj8BV1JQR0=
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Year\"", TraditionalForm], 
       FormBox[
       "\"CO\\!\\(\\*StyleBox[\\\"2\\\",FontSize->7]\\) (ppm)\"", 
        TraditionalForm]}, AxesOrigin -> {0., 384.7333333333333}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{24, 48, 72, 96, 120}, Automatic}, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Average Monthly \
\\!\\(\\*StyleBox[\\(CO\\*StyleBox[\\\"2\\\",FontSize->7]\\)]\\) (ppm): 2010 \
- 2020\"", TraditionalForm], 
     PlotRange -> {{0., 132.}, {384.7333333333333, 417.92}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {{{24, 
         FormBox["\"2012\"", TraditionalForm]}, {48, 
         FormBox["\"2014\"", TraditionalForm]}, {72, 
         FormBox["\"2016\"", TraditionalForm]}, {96, 
         FormBox["\"2018\"", TraditionalForm]}, {120, 
         FormBox["\"2020\"", TraditionalForm]}}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Upper Bound\"", "\"Average\"", "\"Lower Bound\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.86791151472659*^9, 3.867911521225141*^9}, {
   3.867911567139537*^9, 3.8679115993794727`*^9}, 3.867992861782743*^9, 
   3.8680121750364733`*^9, 3.8680122500472803`*^9},
 CellLabel->
  "Out[839]=",ExpressionUUID->"50a31c1e-b23a-45bc-97dc-7ac43706ac0b"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"UBD10", " ", "=", " ", 
   RowBox[{
    RowBox[{"deseasonalised", "[", 
     RowBox[{"[", 
      RowBox[{"624", ";;", "755"}], "]"}], "]"}], " ", "+", " ", 
    RowBox[{"sdev", "[", 
     RowBox[{"[", 
      RowBox[{"624", ";;", "755"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LBD10", " ", "=", " ", 
   RowBox[{
    RowBox[{"deseasonalised", "[", 
     RowBox[{"[", 
      RowBox[{"624", ";;", "755"}], "]"}], "]"}], " ", "-", " ", 
    RowBox[{"sdev", "[", 
     RowBox[{"[", 
      RowBox[{"624", ";;", "755"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"deseasonalised10", " ", "=", " ", 
   RowBox[{"deseasonalised", "[", 
    RowBox[{"[", 
     RowBox[{"624", ";;", "755"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.867910774044602*^9, 3.867910830909631*^9}},
 CellLabel->
  "In[821]:=",ExpressionUUID->"40da2506-d99b-4ae8-8fd1-ea5cfa7f11c3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"UBD10", ",", "deseasonalised10", ",", "  ", "LBD10"}], "}"}], 
   ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Year\>\"", ",", " ", 
      "\"\<CO\!\(\*StyleBox[\"2\",FontSize->7]\) (ppm)\>\""}], "}"}]}], ",", 
   "     ", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Average Monthly \
\!\(\*StyleBox[\(CO\*StyleBox[\"2\",FontSize->7]\)]\) (ppm): 2010 - \
2020\>\""}], ",", "  ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Upper Bound\>\"", ",", " ", "\"\<Deseasonalised\>\"", " ", ",", 
      " ", "\"\<Lower Bound\>\""}], "}"}]}], ",", " ", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"tickList4", ",", " ", "Automatic"}], "}"}]}], ",", " ", 
   RowBox[{"GridLines", "->", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.867910630403165*^9, 3.8679106799696302`*^9}, 
   3.867910730690106*^9, {3.867910838735547*^9, 3.867910846710576*^9}, {
   3.867911216632442*^9, 3.867911222305188*^9}, {3.867911333320305*^9, 
   3.867911333819813*^9}, {3.867911496071911*^9, 3.867911501482202*^9}, {
   3.8679115739533367`*^9, 3.867911595344248*^9}, {3.868012256220742*^9, 
   3.868012256688573*^9}},
 CellLabel->
  "In[840]:=",ExpressionUUID->"9eef3cfb-5cc1-4be2-bd7a-15edb93ae333"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw9lVtIVFEUhoeICnsxGiFCzCLKosLS7Dq6vM54n/v1zIUgNaxUinCsh8m0
AikFH8KoXox6KR98yeg+ggSV1EtiPYgUUeSDFSoFUbPnP/85IIff/3xrr73W
2ns2HmlzHl1mMpl6Un/qjWe+JGvEOtt1vFP0f0hzU+o5Sb1KxnJ6vzsMP1OG
2y0ZU63UZnmo/BbqdeCbqLPFqQIco86FPkG9SW6reG3Um2V8IU/rP0O9BfFP
U+dJSo3lnKfeLsUZU8PtceodiHeBepds0/qTC53U+bJBBeim3i0WxRvx9kjq
61QC1AUyoPQl6kLkd5V6rxSop4+6SNLbN/x9YpvtMo8MUu/HejepD4iSljvU
B1GfIepDqPcw9WHEM7RFVDl6DV2M/RnxShB/hFqQ/6iuE4L17tMvFbOah8f0
S1GPR/TLZE6tN06/TN68Vg/9cvDUiXJR0jxBv0JUO/Le0q9APpP0K5HvB/qV
2N9H+lXo9zT9KvDv6VulUPVjhr4V632mb0P9PtG3YX/83lQN/Yt+NfL/Sb8G
8/eDfg3mY4l+LeZ/kX6tDKlngX4d/D/06zCfy+O6Xy+Lqe0k/9Kvx/5W0G9A
/VfqOtGAeTP8Rsz/WvqNyDeLvh3nOVPXYkf/1/B7u5xVDVyv6+d2Sd8P2eQd
eFOLA/O/lbwD6+0k75DVqp9F5J3oRz55XdvIO+W6qlcleSfqo5F3oR4N5F2i
wme4yLuwHwd5l4RVfDt5t3So4+Qm78b+/OTd6GczeTfqZazvQf1byXvgt5D3
iBovawd5D+btFHkv8m0j70U8+gkv8o+T92L+usj7kH8neR/yp074cF+eI+/D
eewh70f8XvJ+xO8m78f895H3S/p4XyYfwPm7Qj6Aeg2SD+D7AfIBzMc18kH0
+wb5INa/RT6I++Qe+SDm+S75EO63p+RDuC+S5EOo/xPyIdT3AXkN+hl5Dft5
QV5D/AnyGt4vyYdxH70iH8Y88vtEWNI/H5Pkw6Jk8h35CNafIR/BeZklH8Hv
wzT5CM7jF/JR9Psr+Sjui2/ko5iPOfJRzOc8+RjyXdR1bkwupu8zxouh//90
HYvhPl1i/Bjy+x2X/z2rW7U=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxdlElIlGEcxoc6FHYxkOgQZgs1LURlmS3m674vM8446ixOhR1aUNMglWgO
ChXE0HIoO0RYF6XoEJTUwYUoWg6R5SEJLIJIpQUsgoi+r+f7TdQH8vH4fL//
+s67bG+zt2mOy+Xqtv7st57P2dOeu6k9gWPG+YfpvWQ9YfR847XsqT3oZJOV
NN7XktAp+j6hF5uulJtFkxH0EhMfmXWH9qHTTM+UlbAJvdz8yX8QvdJca7Ey
NKNXmWdPrecQ2m2s7FlJbei1qq8Vvd7Y0tOO3mAmO62CDqM3Kn6C32TsdrI6
0Zv17kanm1a74Rh6i/o9hd5q7HY7T6IzFO80epv55g7FR86gM9X/WfR2k24/
59E7VF8cvdPst59e9C5TbDd0GZ1l7PQpCX+35nEVnS19HW0Uf8DRMaN6+/Fz
9L6Nn6N5ol25ijeIn6t6RvHz1N8wfp7mdx8/X/ke4+eLf4hfoPjP8QuUfwy/
UPW/wC/UO+EXaT8v8Yu0nwn8YvGv8Ys1/3H8EuV/j1+i+X7ELzVrrHXOfsAv
Vb4v+GXSM/hlmkfCL9d5QMfKdT5/4Feovu/4Fcr3E7/SLLUD/sKv1HwSfpV+
T3M7HL9Kv795jnZVq98FjjbVOl9JfF+t+hY6eqha+0uG9+j3vQjeo32mwntU
/wp4j+pZB+9V/tXwXuXPgPcqXya8V/2Vw9eYUaudeCF8je6jEvga5c+D/+97
l0/7qYD36fzVwPvEB+F92o8f3q/6ovB+7ScE79d9hT/k13lqgq/9V5tazfMA
fK2xw7lb4GsVvx0+oP0fgQ+o/jb4gPZ3FD6g/XfB1+k8Hoev0/cd8HXKF4Ov
03464euV7wR8vXMfwtdrH+ihetV7Dr5B8S/AO/oifIPm3wfv6CvwQe2zHz6o
9y34oPodgA9q3jfgQzqPd+BD6ucefEj9DMKHVP8IfFj9PYAP6/th+LD29wg+
rHqewEec+ws+ovvlFXxE/Bh8ROd/Ar5R9byBd/Rb+EbFfwffKH4aPurcV45O
c/QM8aLa91dHR6Oazyfi//V/AxJIVTI=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxdlVlIVHEYxQeJEHspUIgImULCFqJS29w+t3HXubMvd5YklSJSK8Kxh4bQ
eioDoVDwSeulsiAEi6LJfChSQxAm6CWjoNKgBYPeuv/OPRfsglyO5/6++23/
O9vaulztGTabrd/4U3dc38tfrObrg5W9Yv5D5maNq4k6U1a0qdwBP/VGSY91
l2ZZOlsuZE/ULoWoN8vgtBHQ8reKCjerU9vFiLasWXq7FBYYVyd1nhjuVO4J
6h2y1Ge8oJ06X3bqxhuOU++SDnWdpN6D91n+XhlW1zHqff/x+1HPWeoD0lOa
lR7rpS4Ql0o4QV0Iv5+6SFT7pgeoD4rRjb7sy9SHZNwIn75CfRj9tfgjotLJ
T1Ifld9r4hUj3+vUJVKnGjJEXYp8LL8M/RulLpcRVb+lBf4tUydF1LgGb9Ov
wLzv0K9A/+/Rr8T8HtCvlH/785h+FfKfpF+F+T6kXw1+hn41+pGiX4N8X9Gv
Qb5z9B2SpQY2T98hqvzuBfq1uM/Sr8U+LNKvw506WYf5v6FfLzlqgG/p12Oe
H+g3IN/39Bsw32X6jfA/0m/EfFboN6GeL/SbsJ/f6Ddj337Qb8Z5+kW/Bf4q
/Rb04yf9VvSbzydbEf8PfSfqWZ+AFqeo8S5lmDrpRL6Zpk45Uc86U9s0zHcT
eQ37kUNewz5sIa+Bt5N3Id9c8i5R7RvLI+/Cfu8m7xKV7kQxeTfil5F3ixpf
upy8G/kVkXfj/JSQ94B3kPfg+9VC3oP9dJL3IF/6Ni/ie8l7sa8aea88WsN7
cb4D5H3oh07eh/ht5H34nnWQ92G/usj7wZ8i70f+p8n7RY2/gM+n/Ih/hnwA
9Z0jH5Ay9UAP+QD6c558AHe+zxbE/vF5CSK/i+SD2K9L5IOyQb3/GvkQ+neV
fAj8EPkQ6hkhb/o3yYelU7XnBvkw4o2SD+N7MEw+jHrHyev4vt0nr6OeSfI6
zv9d8jr685R8BOfxGfkIzssT8hHk85x8BPs3Qz6KfXhJPorvz2vyUdQ/Tz6K
35cF8jHEWyQfw3l5Rz6GeNSpGOr/TD5ufo9MbY9jXl8ZL47+fTJ1PI58ySfj
qH85IX8B2rRimw==
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"Year\"", TraditionalForm], 
       FormBox[
       "\"CO\\!\\(\\*StyleBox[\\\"2\\\",FontSize->7]\\) (ppm)\"", 
        TraditionalForm]}, AxesOrigin -> {0., 386.6155555555556}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{24, 48, 72, 96, 120}, Automatic}, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Average Monthly \
\\!\\(\\*StyleBox[\\(CO\\*StyleBox[\\\"2\\\",FontSize->7]\\)]\\) (ppm): 2010 \
- 2020\"", TraditionalForm], 
     PlotRange -> {{0., 132.}, {386.6155555555556, 415.96}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {{{24, 
         FormBox["\"2012\"", TraditionalForm]}, {48, 
         FormBox["\"2014\"", TraditionalForm]}, {72, 
         FormBox["\"2016\"", TraditionalForm]}, {96, 
         FormBox["\"2018\"", TraditionalForm]}, {120, 
         FormBox["\"2020\"", TraditionalForm]}}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Upper Bound\"", "\"Deseasonalised\"", "\"Lower Bound\""},
       "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.867910847954034*^9, 3.867911222963552*^9, 3.867911334679557*^9, {
   3.867911503289147*^9, 3.867911521332541*^9}, {3.8679115892426662`*^9, 
   3.867911601319673*^9}, 3.867992861922517*^9, 3.8680121751250067`*^9, 
   3.8680122573997803`*^9},
 CellLabel->
  "Out[840]=",ExpressionUUID->"9ecde03a-0e74-4c1b-a421-3e6f536498b7"]
}, Open  ]]
}, Closed]]
},
WindowSize->{Full, Full},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
DockedCells->{},
TaggingRules->Association["TryRealOnly" -> False],
FrontEndVersion->"12.3 for Mac OS X x86 (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"676e95df-1984-4848-8f4a-6bdde140af44"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 156, 3, 67, "Section",ExpressionUUID->"070dee31-0ea3-4001-a0c4-5dc1e6e88bf6"],
Cell[CellGroupData[{
Cell[761, 29, 159, 3, 45, "Subsubsection",ExpressionUUID->"1b335621-98c8-4be8-8349-c7da1467ef59"],
Cell[923, 34, 284, 6, 35, "Text",ExpressionUUID->"1edf12e2-3037-4a43-a190-e9c66b02356f"],
Cell[1210, 42, 1028, 27, 73, "Input",ExpressionUUID->"f8a1da3d-b161-4604-82b9-5d38a2ad4714"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2287, 75, 158, 3, 67, "Section",ExpressionUUID->"27040906-a202-44b1-8766-132161c243cc"],
Cell[2448, 80, 651, 11, 58, "Text",ExpressionUUID->"f9e12dff-ff59-46e6-bd10-6b31d8f75525"],
Cell[3102, 93, 212, 4, 32, "Item",ExpressionUUID->"134b172d-45b4-4937-b877-7f3a9a0b7e0b"],
Cell[3317, 99, 210, 4, 32, "Item",ExpressionUUID->"90543793-828f-41ff-8cd7-17f81eea6c8d"],
Cell[CellGroupData[{
Cell[3552, 107, 212, 4, 32, "Item",ExpressionUUID->"5136ad25-ff73-4d0b-bb54-2b1e98e3cbf7"],
Cell[CellGroupData[{
Cell[3789, 115, 348, 6, 73, "Input",ExpressionUUID->"269be379-f75f-4904-a243-751d5d9a3978"],
Cell[4140, 123, 207879, 3296, 70, "Output",ExpressionUUID->"182e9400-4385-4eb1-8b44-de43228af4ba"],
Cell[212022, 3421, 74972, 1376, 70, "Output",ExpressionUUID->"e4eeb254-441a-4b61-9ad8-14b820a417da"],
Cell[286997, 4799, 121349, 2130, 70, "Output",ExpressionUUID->"a358a190-ffb7-46b0-9f74-2997bd1d3d01"]
}, Open  ]]
}, Open  ]],
Cell[408373, 6933, 224, 5, 35, "Text",ExpressionUUID->"30ac88a1-288f-4682-855d-2bdd6656f92f"],
Cell[408600, 6940, 979, 27, 73, "Input",ExpressionUUID->"0e09c92e-9956-4132-b827-cde55dcdbcb2"],
Cell[CellGroupData[{
Cell[409604, 6971, 772, 23, 73, "Input",ExpressionUUID->"49840f60-da62-4d2a-9108-a14fb2963c9c"],
Cell[410379, 6996, 34655, 669, 70, "Output",ExpressionUUID->"e7ec344d-5dad-4a9e-81c5-008977cee0bb"],
Cell[445037, 7667, 28664, 537, 70, "Output",ExpressionUUID->"19902421-5886-4eda-9899-d6c47c1175bb"],
Cell[473704, 8206, 43750, 869, 70, "Output",ExpressionUUID->"dbdc9507-e258-4af6-84e8-6b1f29b986d9"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[517503, 9081, 161, 3, 53, "Section",ExpressionUUID->"706c7f62-293b-4815-a5b4-8b5d757d440c"],
Cell[CellGroupData[{
Cell[517689, 9088, 294, 7, 45, "Subsubsection",ExpressionUUID->"1aecfa1d-a14c-4106-9075-bb1bbce91172"],
Cell[517986, 9097, 220, 5, 35, "Text",ExpressionUUID->"dbd3b72a-42b3-4dd8-876b-dd26ca22dbb7"],
Cell[CellGroupData[{
Cell[518231, 9106, 463, 11, 52, "Input",ExpressionUUID->"0eed737c-2745-4968-801a-d50718421090"],
Cell[518697, 9119, 441, 8, 34, "Output",ExpressionUUID->"dbeb31d4-33e2-4bda-8acf-538c0e485a18"],
Cell[519141, 9129, 34714, 669, 201, "Output",ExpressionUUID->"cc9e9672-9924-475f-ad3c-5a18d9faf517"]
}, Open  ]],
Cell[553870, 9801, 217, 5, 35, "Text",ExpressionUUID->"afa74eab-183f-423e-a1df-37b971c9460a"],
Cell[554090, 9808, 805, 23, 52, "Input",ExpressionUUID->"bac75394-5e4d-44b3-b0ac-f5dc2ca49d59"],
Cell[CellGroupData[{
Cell[554920, 9835, 269, 5, 30, "Input",ExpressionUUID->"11b29e61-7ec3-4cbb-83a5-6eaae03411c0"],
Cell[555192, 9842, 417, 9, 34, "Output",ExpressionUUID->"7eefc8ac-8de5-43bc-8227-55c26a604db2"]
}, Open  ]],
Cell[555624, 9854, 172, 3, 35, "Text",ExpressionUUID->"d922b55c-30a4-4d73-acfc-b8c95ba0f15d"],
Cell[CellGroupData[{
Cell[555821, 9861, 308, 6, 30, "Input",ExpressionUUID->"15585cf6-7582-48cc-9d4b-41cc2aa2e36f"],
Cell[556132, 9869, 472, 10, 34, "Output",ExpressionUUID->"fc408b48-763a-455b-bd34-3443ee3a14ad"]
}, Open  ]],
Cell[556619, 9882, 1829, 50, 241, "Input",ExpressionUUID->"a6590134-b747-4f3b-9dbc-6e44449f0ec6"],
Cell[558451, 9934, 711, 20, 52, "Input",ExpressionUUID->"caa61e4a-8b5a-4db2-b78f-6aac3e3c1fe4"],
Cell[CellGroupData[{
Cell[559187, 9958, 2511, 59, 94, "Input",ExpressionUUID->"efac08ae-8968-413b-b6e9-9c02b36c781b"],
Cell[561701, 10019, 54703, 960, 369, "Output",ExpressionUUID->"f633c70b-142b-4dbe-9d3a-d5edc19d2ebb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[616441, 10984, 402, 9, 30, "Input",ExpressionUUID->"0cc007de-4260-41bf-a166-be4eb0ad9393"],
Cell[616846, 10995, 255, 5, 34, "Output",ExpressionUUID->"1ec8c301-8256-46e1-825a-85d436eee372"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[617162, 11007, 186, 3, 67, "Section",ExpressionUUID->"8b95784f-6b15-4442-988b-8c3485819521"],
Cell[617351, 11012, 500, 9, 58, "Text",ExpressionUUID->"6944aba6-7388-47e1-808a-6408d7e772f0"],
Cell[CellGroupData[{
Cell[617876, 11025, 469, 11, 52, "Input",ExpressionUUID->"c3bd5b04-ad58-45cb-9889-f54b7bb21f85"],
Cell[618348, 11038, 432, 8, 34, "Output",ExpressionUUID->"1f4e0292-a1c0-4345-ae79-3e0808776cae"],
Cell[618783, 11048, 28716, 537, 201, "Output",ExpressionUUID->"d0b91fa6-30f2-4842-b2bb-f491700c3263"]
}, Open  ]],
Cell[CellGroupData[{
Cell[647536, 11590, 619, 17, 52, "Input",ExpressionUUID->"433e959c-d517-4d7f-8f43-2bb1288ca079"],
Cell[648158, 11609, 397, 9, 34, "Output",ExpressionUUID->"8fa35f28-ad41-45c7-9c20-ab65aae17545"]
}, Open  ]],
Cell[CellGroupData[{
Cell[648592, 11623, 735, 18, 30, "Input",ExpressionUUID->"95316869-6c1d-427b-9c40-c2687ce94f3f"],
Cell[649330, 11643, 742, 19, 34, "Output",ExpressionUUID->"412a10e6-7f70-4071-89cc-f6090d0fce0d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[650109, 11667, 1004, 26, 52, "Input",ExpressionUUID->"e447b540-167f-460f-aa88-d3a0b55f4d26"],
Cell[651116, 11695, 9411, 202, 253, "Output",ExpressionUUID->"524e065b-d824-4363-b3ac-6d04f93e32f6"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[660576, 11903, 176, 3, 53, "Section",ExpressionUUID->"7517bf8b-b2d2-4470-b324-faec9b974050"],
Cell[660755, 11908, 321, 7, 35, "Text",ExpressionUUID->"1a1398cc-b3e5-4e09-80dc-c6dd448d64d1"],
Cell[CellGroupData[{
Cell[661101, 11919, 462, 11, 52, "Input",ExpressionUUID->"f5fdc51d-3692-41ae-9e85-909bdfeb8d5f"],
Cell[661566, 11932, 389, 8, 34, "Output",ExpressionUUID->"fd2b4e95-a786-4652-a3ab-fc492049e7a7"],
Cell[661958, 11942, 43760, 869, 201, "Output",ExpressionUUID->"61f8e31c-1054-40f3-9615-59b57b1654ba"]
}, Open  ]],
Cell[705733, 12814, 385, 7, 35, "Text",ExpressionUUID->"2810eb50-6904-4500-8c1f-a65f4942a184"],
Cell[706121, 12823, 1270, 39, 115, "Input",ExpressionUUID->"3e415f4b-d937-408b-a5fc-1eb616986d0b"],
Cell[CellGroupData[{
Cell[707416, 12866, 858, 18, 52, "Input",ExpressionUUID->"4a413929-7a27-49f6-96a8-6e7be7d24c40"],
Cell[708277, 12886, 5747, 148, 257, "Output",ExpressionUUID->"fa2b474e-3c10-42e7-8c2b-dbf98396e521"],
Cell[714027, 13036, 470, 10, 34, "Output",ExpressionUUID->"97b448d3-c36f-47d4-99fb-4bba9f84fcc7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[714534, 13051, 183, 3, 54, "Subsection",ExpressionUUID->"860ad1f2-4fe6-4494-a47d-822a6c2df854"],
Cell[714720, 13056, 492, 9, 58, "Text",ExpressionUUID->"b496b182-a932-4200-9c31-f99cff207d7a"],
Cell[CellGroupData[{
Cell[715237, 13069, 860, 18, 30, "Input",ExpressionUUID->"b5539759-30a6-4bb3-98dd-b858858aca36"],
Cell[716100, 13089, 785, 18, 34, "Output",ExpressionUUID->"49dbb14c-9cbf-4aad-827b-d9096e26139c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[716922, 13112, 1918, 37, 52, "Input",ExpressionUUID->"380ad19a-82ab-45e5-9bc2-9d06a67f0501"],
Cell[718843, 13151, 23404, 443, 371, "Output",ExpressionUUID->"55148a0e-f313-4bb5-9895-4df910e8f834"]
}, Open  ]],
Cell[CellGroupData[{
Cell[742284, 13599, 183, 3, 45, "Subsubsection",ExpressionUUID->"bfaccae5-a160-4688-a29a-f452c6375f74"],
Cell[742470, 13604, 163, 3, 35, "Text",ExpressionUUID->"c465636e-8ec6-4b14-9bb8-dda03b6bbb75"],
Cell[742636, 13609, 1562, 47, 157, "Input",ExpressionUUID->"162a6051-9222-443e-86c2-cd0ec36ed3b0"],
Cell[744201, 13658, 212, 4, 35, "Text",ExpressionUUID->"beaaa07b-a4fd-42b1-9abc-051a39e1a2b3"],
Cell[744416, 13664, 1577, 46, 157, "Input",ExpressionUUID->"72318d5a-cf44-4bd3-b8a2-6fc4474afc15"],
Cell[745996, 13712, 208, 4, 35, "Text",ExpressionUUID->"662670e0-44ef-4107-bb01-fe1388021f9a"],
Cell[746207, 13718, 1575, 46, 157, "Input",ExpressionUUID->"cbce004b-9667-4958-b07b-1e4243566b45"],
Cell[747785, 13766, 161, 3, 35, "Text",ExpressionUUID->"825d09ab-ecc4-4d26-a761-3debbd8b8884"],
Cell[747949, 13771, 1525, 45, 157, "Input",ExpressionUUID->"9349004b-d259-46c1-b55d-2f3b04732a97"],
Cell[749477, 13818, 192, 3, 35, "Text",ExpressionUUID->"dbfbb628-fa40-4b64-824e-f05e7a3e3468"],
Cell[749672, 13823, 1422, 45, 157, "Input",ExpressionUUID->"1068cfa2-a5da-40c4-aeff-eeebeccbba73"],
Cell[751097, 13870, 1361, 42, 157, "Input",ExpressionUUID->"1986ecbb-d5a5-4c6b-8272-439fa3686796"],
Cell[752461, 13914, 271, 5, 35, "Text",ExpressionUUID->"3df12fb3-d7cb-4144-b0a1-8b5479e936cb"],
Cell[CellGroupData[{
Cell[752757, 13923, 310, 6, 30, "Input",ExpressionUUID->"b9b96008-e8d4-4b5d-a377-221a67a1d485"],
Cell[753070, 13931, 371, 7, 34, "Output",ExpressionUUID->"c4b35a73-35dd-449e-8782-94dd0e862a99"]
}, Open  ]],
Cell[CellGroupData[{
Cell[753478, 13943, 4968, 145, 178, "Input",ExpressionUUID->"3d93e77a-ab1a-4d4d-a2c5-21178bc33d03"],
Cell[758449, 14090, 10931, 237, 241, "Output",ExpressionUUID->"4bebbe5e-4bd0-45d8-9da8-a6a01f4d8dc6"],
Cell[769383, 14329, 10981, 239, 241, "Output",ExpressionUUID->"d958495a-e2bd-49ba-aa3d-559505d4b5b6"],
Cell[780367, 14570, 10931, 237, 241, "Output",ExpressionUUID->"2a44ef13-d5a3-4e74-925d-24f9152ba516"],
Cell[791301, 14809, 10888, 235, 241, "Output",ExpressionUUID->"f4d20a15-c9cb-478f-a83a-e4d27310cbdf"]
}, Open  ]],
Cell[802204, 15047, 427, 8, 35, "Text",ExpressionUUID->"be335ae1-c4cb-4be6-8257-83ca3136ff56"],
Cell[CellGroupData[{
Cell[802656, 15059, 1178, 33, 52, "Input",ExpressionUUID->"b0ad935a-660e-45c0-bb32-4d2cb553556b"],
Cell[803837, 15094, 8205, 178, 243, "Output",ExpressionUUID->"405b7158-a73d-4578-a145-33a2cec6defd"]
}, Open  ]],
Cell[812057, 15275, 312, 7, 35, "Text",ExpressionUUID->"607dbf4c-ed4f-42ee-9af4-863cec96e23f"],
Cell[CellGroupData[{
Cell[812394, 15286, 1070, 30, 52, "Input",ExpressionUUID->"38e8fb51-5b7b-47a9-a339-c8d56c501d5b"],
Cell[813467, 15318, 4877, 113, 243, "Output",ExpressionUUID->"66402f4f-4b12-40da-b8d3-6b169948cb9f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[818381, 15436, 2572, 74, 94, "Input",ExpressionUUID->"e13b3c3c-a897-44d1-86cb-5ecb684cc964"],
Cell[820956, 15512, 11749, 248, 241, "Output",ExpressionUUID->"741e4fd2-b715-4fab-85f4-adc171b9bdfe"],
Cell[832708, 15762, 11451, 245, 241, "Output",ExpressionUUID->"4a5667f6-2650-44c0-a3b7-3ef421b28e91"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[844232, 16015, 213, 4, 67, "Section",ExpressionUUID->"856187f6-904a-429f-b80d-283607feeb71"],
Cell[844448, 16021, 177, 3, 35, "Text",ExpressionUUID->"d52ed9bc-bb71-4554-acfe-6d00a8d41f5a"],
Cell[CellGroupData[{
Cell[844650, 16028, 479, 13, 52, "Input",ExpressionUUID->"8449378d-90c7-4c65-942c-07dbdb4d86f5"],
Cell[845132, 16043, 298, 5, 34, "Output",ExpressionUUID->"af8558e0-d499-4bfe-b262-386abd2f1e53"]
}, Open  ]],
Cell[845445, 16051, 394, 9, 52, "Input",ExpressionUUID->"eec35ede-3a0a-41f4-87b5-2a1f3e5f21a3"],
Cell[CellGroupData[{
Cell[845864, 16064, 343, 6, 73, "Input",ExpressionUUID->"064d5668-391e-458c-b624-208f0b4e4b44"],
Cell[846210, 16072, 474, 10, 34, "Output",ExpressionUUID->"81a56780-d607-45ff-a6e7-2cae6f2b1824"],
Cell[846687, 16084, 472, 10, 34, "Output",ExpressionUUID->"bc01520a-e241-46c7-a363-dbcd08b12ac8"],
Cell[847162, 16096, 471, 10, 34, "Output",ExpressionUUID->"256e150c-b95d-4bf5-ae2e-e14b33026fc5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[847670, 16111, 1520, 33, 52, "Input",ExpressionUUID->"7e69a996-1a46-4696-b1fc-55703dc7e7f1"],
Cell[849193, 16146, 33138, 621, 239, "Output",ExpressionUUID->"1543c731-1a3c-4546-89b7-ed0b31723984"]
}, Open  ]],
Cell[882346, 16770, 191, 3, 35, "Text",ExpressionUUID->"e1e01663-ef28-42c4-8c1e-32589047116e"],
Cell[882540, 16775, 667, 20, 73, "Input",ExpressionUUID->"19eb544a-1f66-4d8b-80da-1b12d6cf455a"],
Cell[883210, 16797, 736, 19, 30, "Input",ExpressionUUID->"94af6e4c-07c8-47fa-84f9-34a7d5f750cf"],
Cell[CellGroupData[{
Cell[883971, 16820, 1250, 30, 52, "Input",ExpressionUUID->"80871a02-0458-49c6-8b0b-df49efdbcd7d"],
Cell[885224, 16852, 20003, 410, 255, "Output",ExpressionUUID->"50a31c1e-b23a-45bc-97dc-7ac43706ac0b"]
}, Open  ]],
Cell[905242, 17265, 963, 28, 73, "Input",ExpressionUUID->"40da2506-d99b-4ae8-8fd1-ea5cfa7f11c3"],
Cell[CellGroupData[{
Cell[906230, 17297, 1372, 33, 52, "Input",ExpressionUUID->"9eef3cfb-5cc1-4be2-bd7a-15edb93ae333"],
Cell[907605, 17332, 20028, 412, 278, "Output",ExpressionUUID->"9ecde03a-0e74-4c1b-a421-3e6f536498b7"]
}, Open  ]]
}, Closed]]
}
]
*)

